{
	"id": "7cb2fa1552da18f80d659bd19cdfbf98",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.5",
	"solcLongVersion": "0.5.5+commit.47a71e8f",
	"input": {
		"language": "Solidity",
		"sources": {
			"FlashLoan/Arbitrageur.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\";\nimport \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol\";\nimport \"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\";\n\n\n//1 DAI = 1000000000000000000 (18 decimals)\n/*\n * Arbitrageur is a contract to simulate the usage of flashloans\n * to make profit out of a market inbalacement\n *\n * For this example we deployed 2 Uniswap instances which we'll\n * call by ExchangeA and ExchangeB\n *\n * The steps happens as following:\n * 1. Borrow DAI from Aave\n * 2. Buy BAT with DAI on ExchangeA\n * 3. Sell BAT for DAI on ExchangeB\n * 4. Repay Aave loan\n * 5. Keep the profits\n */\ncontract Arbitrageur is\n    FlashLoanReceiverBase(address(0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5))\n{\n    address public constant DAI_ADDRESS = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD;\n    address public constant BAT_ADDRESS = 0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738;\n    address public constant UNISWAP_FACTORY_A = 0xECc6C0542710a0EF07966D7d1B10fA38bbb86523;\n    address public constant UNISWAP_FACTORY_B = 0x54Ac34e5cE84C501165674782582ADce2FDdc8F4;\n\n    ILendingPool public lendingPool;\n    IUniswapExchange public exchangeA;\n    IUniswapExchange public exchangeB;\n    IUniswapFactory public uniswapFactoryA;\n    IUniswapFactory public uniswapFactoryB;\n\n    constructor() public {\n        // Instantiate Uniswap Factory A\n        uniswapFactoryA = IUniswapFactory(UNISWAP_FACTORY_A);\n        // get Exchange A Address\n        address exchangeA_address = uniswapFactoryA.getExchange(DAI_ADDRESS);\n        // Instantiate Exchange A\n        exchangeA = IUniswapExchange(exchangeA_address);\n\n        //Instantiate Uniswap Factory B\n        uniswapFactoryB = IUniswapFactory(UNISWAP_FACTORY_B);\n        // get Exchange B Address\n        address exchangeB_address = uniswapFactoryB.getExchange(BAT_ADDRESS);\n        //Instantiate Exchange B\n        exchangeB = IUniswapExchange(exchangeB_address);\n        // get lendingPoolAddress\n        address lendingPoolAddress = addressesProvider.getLendingPool();\n        //Instantiate Aaave Lending Pool B\n        lendingPool = ILendingPool(lendingPoolAddress);\n    }\n\n    /*\n     * Start the arbitrage\n     */\n    function makeArbitrage(uint256 amount) public onlyOwner {\n        bytes memory data = \"\";\n\n        ERC20 dai = ERC20(DAI_ADDRESS);\n        lendingPool.flashLoan(address(this), DAI_ADDRESS, amount, data);\n\n        // Any left amount of DAI is considered profit\n        uint256 profit = dai.balanceOf(address(this));\n        // Sending back the profits\n        require(\n            dai.transfer(msg.sender, profit),\n            \"Could not transfer back the profit\"\n        );\n    }\n    //function swapTokens(address _from_token, address _to_token, address _exchange_type, uint256 _amount) external {\n    function swapTokens(address _to_token, uint256 _amount) external {\n        //IUniswapFactory uniswap_factory = IUniswapFactory(_exchange_type);\n        //address from_address = uniswap_factory.getExchange(_from_token);\n        //IUniswapExchange from_exchange = IUniswapExchange(from_address);\n\n        uint256 deadline = getDeadline();\n\n        ERC20 dai = ERC20(DAI_ADDRESS);\n        ERC20 bat = ERC20(BAT_ADDRESS);\n\n        // Buying ETH at Exchange A\n        require(\n            dai.approve(address(exchangeA), _amount),\n            \"Could not approve DAI sell\"\n        );\n\n        /*uint256 tokenBought = exchangeA.tokenToTokenSwapInput(\n            _amount,\n            1,\n            1,\n            deadline,\n            BAT_ADDRESS\n        );*/\n\n    }\n\n    function executeOperation(\n        address _reserve,\n        uint256 _amount,\n        uint256 _fee,\n        bytes calldata _params\n    ) external {\n        // If transactions are not mined until deadline the transaction is reverted\n        uint256 deadline = getDeadline();\n\n        ERC20 dai = ERC20(DAI_ADDRESS);\n        ERC20 bat = ERC20(BAT_ADDRESS);\n\n        // Buying ETH at Exchange A\n        require(\n            dai.approve(address(exchangeA), _amount),\n            \"Could not approve DAI sell\"\n        );\n\n        uint256 tokenBought = exchangeA.tokenToTokenSwapInput(\n            _amount,\n            1,\n            1,\n            deadline,\n            BAT_ADDRESS\n        );\n\n        require(\n            bat.approve(address(exchangeB), tokenBought),\n            \"Could not approve DAI sell\"\n        );\n\n        // Selling ETH at Exchange B\n        uint256 daiBought = exchangeB.tokenToTokenSwapInput(\n            tokenBought,\n            1,\n            1,\n            deadline,\n            DAI_ADDRESS\n        );\n\n        // Repay loan\n        uint256 totalDebt = _amount.add(_fee);\n\n        require(daiBought > totalDebt, \"Did not profit\");\n\n        transferFundsBackToPoolInternal(_reserve, totalDebt);\n    }\n\n    function getDeadline() internal view returns (uint256) {\n        return now + 3000;\n    }\n}"
			},
			"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol": {
				"content": "pragma solidity ^0.5.0;\n\n\ncontract IUniswapFactory {\n  // Public Variables\n  address public exchangeTemplate;\n  uint256 public tokenCount;\n\n  // // Create Exchange\n  function createExchange(address token) external returns (address exchange);\n\n  // Get Exchange and Token Info\n  function getExchange(address token) external view returns (address exchange);\n\n  function getToken(address exchange) external view returns (address token);\n\n  function getTokenWithId(uint256 tokenId) external view returns (address token);\n\n  // Never use\n  function initializeFactory(address template) external;\n}\n\n\ncontract IUniswapExchange {\n  // Address of ERC20 token sold on this exchange\n  function tokenAddress() external view returns (address token);\n\n  // Address of Uniswap Factory\n  function factoryAddress() external view returns (address factory);\n\n  // Provide Liquidity\n  function addLiquidity(\n    uint256 min_liquidity,\n    uint256 max_tokens,\n    uint256 deadline\n  ) external payable returns (uint256);\n\n  function removeLiquidity(\n    uint256 amount,\n    uint256 min_eth,\n    uint256 min_tokens,\n    uint256 deadline\n  ) external returns (uint256, uint256);\n\n  // Get Prices\n  function getEthToTokenInputPrice(uint256 eth_sold) external view returns (uint256 tokens_bought);\n\n  function getEthToTokenOutputPrice(uint256 tokens_bought) external view returns (uint256 eth_sold);\n\n  function getTokenToEthInputPrice(uint256 tokens_sold) external view returns (uint256 eth_bought);\n\n  function getTokenToEthOutputPrice(uint256 eth_bought) external view returns (uint256 tokens_sold);\n\n  // Trade ETH to ERC20\n  function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline) external payable returns (uint256 tokens_bought);\n\n  function ethToTokenTransferInput(\n    uint256 min_tokens,\n    uint256 deadline,\n    address recipient\n  ) external payable returns (uint256 tokens_bought);\n\n  function ethToTokenSwapOutput(uint256 tokens_bought, uint256 deadline) external payable returns (uint256 eth_sold);\n\n  function ethToTokenTransferOutput(\n    uint256 tokens_bought,\n    uint256 deadline,\n    address recipient\n  ) external payable returns (uint256 eth_sold);\n\n  // Trade ERC20 to ETH\n  function tokenToEthSwapInput(\n    uint256 tokens_sold,\n    uint256 min_eth,\n    uint256 deadline\n  ) external returns (uint256 eth_bought);\n\n  function tokenToEthTransferInput(\n    uint256 tokens_sold,\n    uint256 min_eth,\n    uint256 deadline,\n    address recipient\n  ) external returns (uint256 eth_bought);\n\n  function tokenToEthSwapOutput(\n    uint256 eth_bought,\n    uint256 max_tokens,\n    uint256 deadline\n  ) external returns (uint256 tokens_sold);\n\n  function tokenToEthTransferOutput(\n    uint256 eth_bought,\n    uint256 max_tokens,\n    uint256 deadline,\n    address recipient\n  ) external returns (uint256 tokens_sold);\n\n  // Trade ERC20 to ERC20\n  function tokenToTokenSwapInput(\n    uint256 tokens_sold,\n    uint256 min_tokens_bought,\n    uint256 min_eth_bought,\n    uint256 deadline,\n    address token_addr\n  ) external returns (uint256 tokens_bought);\n\n  function tokenToTokenTransferInput(\n    uint256 tokens_sold,\n    uint256 min_tokens_bought,\n    uint256 min_eth_bought,\n    uint256 deadline,\n    address recipient,\n    address token_addr\n  ) external returns (uint256 tokens_bought);\n\n  function tokenToTokenSwapOutput(\n    uint256 tokens_bought,\n    uint256 max_tokens_sold,\n    uint256 max_eth_sold,\n    uint256 deadline,\n    address token_addr\n  ) external returns (uint256 tokens_sold);\n\n  function tokenToTokenTransferOutput(\n    uint256 tokens_bought,\n    uint256 max_tokens_sold,\n    uint256 max_eth_sold,\n    uint256 deadline,\n    address recipient,\n    address token_addr\n  ) external returns (uint256 tokens_sold);\n\n  // Trade ERC20 to Custom Pool\n  function tokenToExchangeSwapInput(\n    uint256 tokens_sold,\n    uint256 min_tokens_bought,\n    uint256 min_eth_bought,\n    uint256 deadline,\n    address exchange_addr\n  ) external returns (uint256 tokens_bought);\n\n  function tokenToExchangeTransferInput(\n    uint256 tokens_sold,\n    uint256 min_tokens_bought,\n    uint256 min_eth_bought,\n    uint256 deadline,\n    address recipient,\n    address exchange_addr\n  ) external returns (uint256 tokens_bought);\n\n  function tokenToExchangeSwapOutput(\n    uint256 tokens_bought,\n    uint256 max_tokens_sold,\n    uint256 max_eth_sold,\n    uint256 deadline,\n    address exchange_addr\n  ) external returns (uint256 tokens_sold);\n\n  function tokenToExchangeTransferOutput(\n    uint256 tokens_bought,\n    uint256 max_tokens_sold,\n    uint256 max_eth_sold,\n    uint256 deadline,\n    address recipient,\n    address exchange_addr\n  ) external returns (uint256 tokens_sold);\n\n  // ERC20 comaptibility for liquidity tokens\n  bytes32 public name;\n  bytes32 public symbol;\n  uint256 public decimals;\n\n  function transfer(address _to, uint256 _value) external returns (bool);\n\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 value\n  ) external returns (bool);\n\n  function approve(address _spender, uint256 _value) external returns (bool);\n\n  function allowance(address _owner, address _spender) external view returns (uint256);\n\n  function balanceOf(address _owner) external view returns (uint256);\n\n  function totalSupply() external view returns (uint256);\n\n  // Never use\n  function setup(address token_addr) external;\n}\n"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol": {
				"content": "// Original: https://github.com/aave/aave-protocol/blob/master/contracts/lendingpool/LendingPool.sol\n\npragma solidity ^0.5.0;\n\ninterface ILendingPool {\n  function addressesProvider () external view returns ( address );\n  function deposit ( address _reserve, uint256 _amount, uint16 _referralCode ) external payable;\n  function redeemUnderlying ( address _reserve, address _user, uint256 _amount ) external;\n  function borrow ( address _reserve, uint256 _amount, uint256 _interestRateMode, uint16 _referralCode ) external;\n  function repay ( address _reserve, uint256 _amount, address _onBehalfOf ) external payable;\n  function swapBorrowRateMode ( address _reserve ) external;\n  function rebalanceFixedBorrowRate ( address _reserve, address _user ) external;\n  function setUserUseReserveAsCollateral ( address _reserve, bool _useAsCollateral ) external;\n  function liquidationCall ( address _collateral, address _reserve, address _user, uint256 _purchaseAmount, bool _receiveAToken ) external payable;\n  function flashLoan ( address _receiver, address _reserve, uint256 _amount, bytes calldata _params ) external;\n  function getReserveConfigurationData ( address _reserve ) external view returns ( uint256 ltv, uint256 liquidationThreshold, uint256 liquidationDiscount, address interestRateStrategyAddress, bool usageAsCollateralEnabled, bool borrowingEnabled, bool fixedBorrowRateEnabled, bool isActive );\n  function getReserveData ( address _reserve ) external view returns ( uint256 totalLiquidity, uint256 availableLiquidity, uint256 totalBorrowsFixed, uint256 totalBorrowsVariable, uint256 liquidityRate, uint256 variableBorrowRate, uint256 fixedBorrowRate, uint256 averageFixedBorrowRate, uint256 utilizationRate, uint256 liquidityIndex, uint256 variableBorrowIndex, address aTokenAddress, uint40 lastUpdateTimestamp );\n  function getUserAccountData ( address _user ) external view returns ( uint256 totalLiquidityETH, uint256 totalCollateralETH, uint256 totalBorrowsETH, uint256 availableBorrowsETH, uint256 currentLiquidationThreshold, uint256 ltv, uint256 healthFactor );\n  function getUserReserveData ( address _reserve, address _user ) external view returns ( uint256 currentATokenBalance, uint256 currentUnderlyingBalance, uint256 currentBorrowBalance, uint256 principalBorrowBalance, uint256 borrowRateMode, uint256 borrowRate, uint256 liquidityRate, uint256 originationFee, uint256 variableBorrowIndex, uint256 lastUpdateTimestamp, bool usageAsCollateralEnabled );\n  function getReserves () external view;\n}"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol": {
				"content": "// Original: https://github.com/aave/aave-protocol/blob/master/contracts/flashloan/base/FlashLoanReceiverBase.sol\n\npragma solidity ^0.5.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./IFlashLoanReceiver.sol\";\nimport \"./ILendingPoolAddressesProvider.sol\";\nimport \"./EthAddressLib.sol\";\nimport \"../utils/Withdrawable.sol\";\n\ncontract FlashLoanReceiverBase is IFlashLoanReceiver, Withdrawable {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    ILendingPoolAddressesProvider public addressesProvider;\n\n    constructor(address _addressProvider) public {\n        addressesProvider = ILendingPoolAddressesProvider(_addressProvider);\n    }\n\n    function() external payable { }\n\n    function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {\n        address payable core = addressesProvider.getLendingPoolCore();\n        transferInternal(core, _reserve, _amount);\n    }\n\n    function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {\n        if(_reserve == EthAddressLib.ethAddress()) {\n            //solium-disable-next-line\n            _destination.call.value(_amount)(\"\");\n            return;\n        }\n        IERC20(_reserve).safeTransfer(_destination, _amount);\n    }\n\n    function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {\n        if(_reserve == EthAddressLib.ethAddress()) {\n            return _target.balance;\n        }\n        return IERC20(_reserve).balanceOf(_target);\n    }\n}\n"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol": {
				"content": "pragma solidity >=0.4.24;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\";\n\ncontract Withdrawable is Ownable {\n    using SafeERC20 for ERC20;\n    address constant ETHER = address(0);\n\n    event LogWithdraw(\n        address indexed _from,\n        address indexed _assetAddress,\n        uint amount\n    );\n\n    /**\n     * @dev Withdraw asset.\n     * @param _assetAddress Asset to be withdrawn.\n     */\n    function withdraw(address _assetAddress) public onlyOwner {\n        uint assetBalance;\n        if (_assetAddress == ETHER) {\n            address self = address(this); // workaround for a possible solidity bug\n            assetBalance = self.balance;\n            msg.sender.transfer(assetBalance);\n        } else {\n            assetBalance = ERC20(_assetAddress).balanceOf(address(this));\n            ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance);\n        }\n        emit LogWithdraw(msg.sender, _assetAddress, assetBalance);\n    }\n\n}\n"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol": {
				"content": "// Original: https://github.com/aave/aave-protocol/blob/master/contracts/libraries/EthAddressLib.sol\n\npragma solidity ^0.5.0;\n\nlibrary EthAddressLib {\n\n    /**\n    * @dev returns the address used within the protocol to identify ETH\n    * @return the address assigned to ETH\n     */\n    function ethAddress() internal pure returns(address) {\n        return 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE; // Represents ETH: https://docs.aave.com/developers/developing-on-aave/deployed-contract-instances#reserves-assets\n    }\n}"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"content": "// Original: https://github.com/aave/aave-protocol/blob/master/contracts/interfaces/ILendingPoolAddressesProvider.sol\n\npragma solidity ^0.5.0;\n\n/**\n@title ILendingPoolAddressesProvider interface\n@notice provides the interface to fetch the LendingPoolCore address\n */\n\ncontract ILendingPoolAddressesProvider {\n\n    function getLendingPool() public view returns (address);\n    function setLendingPoolImpl(address _pool) public;\n\n    function getLendingPoolCore() public view returns (address payable);\n    function setLendingPoolCoreImpl(address _lendingPoolCore) public;\n\n    function getLendingPoolConfigurator() public view returns (address);\n    function setLendingPoolConfiguratorImpl(address _configurator) public;\n\n    function getLendingPoolDataProvider() public view returns (address);\n    function setLendingPoolDataProviderImpl(address _provider) public;\n\n    function getLendingPoolParametersProvider() public view returns (address);\n    function setLendingPoolParametersProviderImpl(address _parametersProvider) public;\n\n    function getTokenDistributor() public view returns (address);\n    function setTokenDistributor(address _tokenDistributor) public;\n\n    function getFeeProvider() public view returns (address);\n    function setFeeProviderImpl(address _feeProvider) public;\n\n    function getLendingPoolLiquidationManager() public view returns (address);\n    function setLendingPoolLiquidationManager(address _manager) public;\n\n    function getLendingPoolManager() public view returns (address);\n    function setLendingPoolManager(address _lendingPoolManager) public;\n\n    function getPriceOracle() public view returns (address);\n    function setPriceOracle(address _priceOracle) public;\n\n    function getLendingRateOracle() public view returns (address);\n    function setLendingRateOracle(address _lendingRateOracle) public;\n\n}"
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol": {
				"content": "// Original: https://github.com/aave/aave-protocol/blob/master/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\n\npragma solidity ^0.5.0;\n\n/**\n* @title IFlashLoanReceiver interface\n* @notice Interface for the Aave fee IFlashLoanReceiver.\n* @author Aave\n* @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract\n**/\ninterface IFlashLoanReceiver {\n    function executeOperation(address _reserve, uint256 _amount, uint256 _fee, bytes calldata _params) external;\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following \n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"FlashLoan/Arbitrageur.sol": {
				"Arbitrageur": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "uniswapFactoryB",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "exchangeB",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DAI_ADDRESS",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "makeArbitrage",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "UNISWAP_FACTORY_A",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "exchangeA",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "uniswapFactoryA",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "UNISWAP_FACTORY_B",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to_token",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lendingPool",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "BAT_ADDRESS",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_fee",
									"type": "uint256"
								},
								{
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"FlashLoan/Arbitrageur.sol\":773:5024  contract Arbitrageur is... */\n  mstore(0x40, 0x80)\n    /* \"FlashLoan/Arbitrageur.sol\":1443:2288  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"FlashLoan/Arbitrageur.sol\":1443:2288  constructor() public {... */\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":831:873  0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5 */\n  0x506b0b2cf20faa8f38a4e2b524ee43e1f4458cc5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:715  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:728  _msgSender */\n  shl(0x20, tag_9)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:730  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":749:758  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":806:815  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":802:803  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":664:823  constructor () internal {... */\n  pop\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":944:960  _addressProvider */\n  dup1\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":894:911  addressesProvider */\n  0x01\n  0x00\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":894:961  addressesProvider = ILendingPoolAddressesProvider(_addressProvider) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":839:968  constructor(address _addressProvider) public {... */\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1098:1140  0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n  0xecc6c0542710a0ef07966d7d1b10fa38bbb86523\n    /* \"FlashLoan/Arbitrageur.sol\":1515:1530  uniswapFactoryA */\n  0x05\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":1515:1567  uniswapFactoryA = IUniswapFactory(UNISWAP_FACTORY_A) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1611:1636  address exchangeA_address */\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1654  uniswapFactoryA */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1666  uniswapFactoryA.getExchange */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x06f2bf62\n    /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n  0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1679  uniswapFactoryA.getExchange(DAI_ADDRESS) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_12:\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1679  uniswapFactoryA.getExchange(DAI_ADDRESS) */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_13\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_13:\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1679  uniswapFactoryA.getExchange(DAI_ADDRESS) */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_14\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_14:\n    /* \"FlashLoan/Arbitrageur.sol\":1639:1679  uniswapFactoryA.getExchange(DAI_ADDRESS) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1611:1679  address exchangeA_address = uniswapFactoryA.getExchange(DAI_ADDRESS) */\n  swap1\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1752:1769  exchangeA_address */\n  dup1\n    /* \"FlashLoan/Arbitrageur.sol\":1723:1732  exchangeA */\n  0x03\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":1723:1770  exchangeA = IUniswapExchange(exchangeA_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1190:1232  0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n  0x54ac34e5ce84c501165674782582adce2fddc8f4\n    /* \"FlashLoan/Arbitrageur.sol\":1821:1836  uniswapFactoryB */\n  0x06\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":1821:1873  uniswapFactoryB = IUniswapFactory(UNISWAP_FACTORY_B) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1917:1942  address exchangeB_address */\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1960  uniswapFactoryB */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1972  uniswapFactoryB.getExchange */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x06f2bf62\n    /* \"FlashLoan/Arbitrageur.sol\":1006:1048  0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n  0x2d12186fbb9f9a8c28b3ffdd4c42920f8539d738\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1985  uniswapFactoryB.getExchange(BAT_ADDRESS) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_15:\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1985  uniswapFactoryB.getExchange(BAT_ADDRESS) */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_16\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_16:\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1985  uniswapFactoryB.getExchange(BAT_ADDRESS) */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_17\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_17:\n    /* \"FlashLoan/Arbitrageur.sol\":1945:1985  uniswapFactoryB.getExchange(BAT_ADDRESS) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1917:1985  address exchangeB_address = uniswapFactoryB.getExchange(BAT_ADDRESS) */\n  swap1\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":2057:2074  exchangeB_address */\n  dup1\n    /* \"FlashLoan/Arbitrageur.sol\":2028:2037  exchangeB */\n  0x04\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":2028:2075  exchangeB = IUniswapExchange(exchangeB_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":2119:2145  address lendingPoolAddress */\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2165  addressesProvider */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2180  addressesProvider.getLendingPool */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0261bf8b\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2182  addressesProvider.getLendingPool() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_18\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_18:\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2182  addressesProvider.getLendingPool() */\n  pop\n  gas\n  staticcall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_19\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_19:\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2182  addressesProvider.getLendingPool() */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_20\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_20:\n    /* \"FlashLoan/Arbitrageur.sol\":2148:2182  addressesProvider.getLendingPool() */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":2119:2182  address lendingPoolAddress = addressesProvider.getLendingPool() */\n  swap1\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":2262:2280  lendingPoolAddress */\n  dup1\n    /* \"FlashLoan/Arbitrageur.sol\":2235:2246  lendingPool */\n  0x02\n  0x00\n    /* \"FlashLoan/Arbitrageur.sol\":2235:2281  lendingPool = ILendingPool(lendingPoolAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":1443:2288  constructor() public {... */\n  pop\n  pop\n  pop\n    /* \"FlashLoan/Arbitrageur.sol\":773:5024  contract Arbitrageur is... */\n  jump(tag_21)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"FlashLoan/Arbitrageur.sol\":773:5024  contract Arbitrageur is... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FlashLoan/Arbitrageur.sol\":773:5024  contract Arbitrageur is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x83701599\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa59a9973\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa59a9973\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc72c4d10\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcfc0ff1b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xee872558\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x83701599\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa114398d\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x470f42f5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x470f42f5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x553e8c1e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a09006e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x19536b13\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x20fee44b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a4c0a1a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3dd9ce1f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1398:1436  IUniswapFactory public uniswapFactoryB */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"FlashLoan/Arbitrageur.sol\":1398:1436  IUniswapFactory public uniswapFactoryB */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":1315:1348  IUniswapExchange public exchangeB */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"FlashLoan/Arbitrageur.sol\":1315:1348  IUniswapExchange public exchangeB */\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":882:962  address public constant DAI_ADDRESS = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"FlashLoan/Arbitrageur.sol\":882:962  address public constant DAI_ADDRESS = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":2336:2815  function makeArbitrage(uint256 amount) public onlyOwner {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"FlashLoan/Arbitrageur.sol\":2336:2815  function makeArbitrage(uint256 amount) public onlyOwner {... */\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"FlashLoan/Arbitrageur.sol\":2336:2815  function makeArbitrage(uint256 amount) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1054:1140  address public constant UNISWAP_FACTORY_A = 0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"FlashLoan/Arbitrageur.sol\":1054:1140  address public constant UNISWAP_FACTORY_A = 0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1276:1309  IUniswapExchange public exchangeA */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"FlashLoan/Arbitrageur.sol\":1276:1309  IUniswapExchange public exchangeA */\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":1354:1392  IUniswapFactory public uniswapFactoryA */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"FlashLoan/Arbitrageur.sol\":1354:1392  IUniswapFactory public uniswapFactoryA */\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1146:1232  address public constant UNISWAP_FACTORY_B = 0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"FlashLoan/Arbitrageur.sol\":1146:1232  address public constant UNISWAP_FACTORY_B = 0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":2938:3698  function swapTokens(address _to_token, uint256 _amount) external {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n        /* \"FlashLoan/Arbitrageur.sol\":2938:3698  function swapTokens(address _to_token, uint256 _amount) external {... */\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"FlashLoan/Arbitrageur.sol\":2938:3698  function swapTokens(address _to_token, uint256 _amount) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1239:1270  ILendingPool public lendingPool */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"FlashLoan/Arbitrageur.sol\":1239:1270  ILendingPool public lendingPool */\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":778:832  ILendingPoolAddressesProvider public addressesProvider */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":778:832  ILendingPoolAddressesProvider public addressesProvider */\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":968:1048  address public constant BAT_ADDRESS = 0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_73:\n        /* \"FlashLoan/Arbitrageur.sol\":968:1048  address public constant BAT_ADDRESS = 0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_76:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_81:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_77:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"FlashLoan/Arbitrageur.sol\":1398:1436  IUniswapFactory public uniswapFactoryB */\n    tag_27:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1315:1348  IUniswapExchange public exchangeB */\n    tag_30:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":882:962  address public constant DAI_ADDRESS = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n    tag_33:\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":882:962  address public constant DAI_ADDRESS = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":2336:2815  function makeArbitrage(uint256 amount) public onlyOwner {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"FlashLoan/Arbitrageur.sol\":2402:2419  bytes memory data */\n      0x60\n        /* \"FlashLoan/Arbitrageur.sol\":2402:2424  bytes memory data = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2435:2444  ERC20 dai */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":2435:2465  ERC20 dai = ERC20(DAI_ADDRESS) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2486  lendingPool */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2496  lendingPool.flashLoan */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5cffe9de\n        /* \"FlashLoan/Arbitrageur.sol\":2505:2509  this */\n      address\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":2525:2531  amount */\n      dup7\n        /* \"FlashLoan/Arbitrageur.sol\":2533:2537  data */\n      dup7\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2538  lendingPool.flashLoan(address(this), DAI_ADDRESS, amount, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_91:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_91)\n    tag_92:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2538  lendingPool.flashLoan(address(this), DAI_ADDRESS, amount, data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_94:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_95:\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2538  lendingPool.flashLoan(address(this), DAI_ADDRESS, amount, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_96:\n        /* \"FlashLoan/Arbitrageur.sol\":2475:2538  lendingPool.flashLoan(address(this), DAI_ADDRESS, amount, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2604:2618  uint256 profit */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2624  dai */\n      dup2\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2634  dai.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FlashLoan/Arbitrageur.sol\":2643:2647  this */\n      address\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2649  dai.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2649  dai.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2649  dai.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n        /* \"FlashLoan/Arbitrageur.sol\":2621:2649  dai.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2604:2649  uint256 profit = dai.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2719  dai */\n      dup2\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2728  dai.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"FlashLoan/Arbitrageur.sol\":2729:2739  msg.sender */\n      caller\n        /* \"FlashLoan/Arbitrageur.sol\":2741:2747  profit */\n      dup4\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2748  dai.transfer(msg.sender, profit) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_100:\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2748  dai.transfer(msg.sender, profit) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2748  dai.transfer(msg.sender, profit) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_102:\n        /* \"FlashLoan/Arbitrageur.sol\":2716:2748  dai.transfer(msg.sender, profit) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2695:2808  require(... */\n      iszero\n      iszero\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e07715594cb39501f0d28b76af82805ef9f78ecd382671b21067a9d117caba54\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1159:1160  _ */\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":2336:2815  function makeArbitrage(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1054:1140  address public constant UNISWAP_FACTORY_A = 0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n    tag_40:\n        /* \"FlashLoan/Arbitrageur.sol\":1098:1140  0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n      0xecc6c0542710a0ef07966d7d1b10fa38bbb86523\n        /* \"FlashLoan/Arbitrageur.sol\":1054:1140  address public constant UNISWAP_FACTORY_A = 0xECc6C0542710a0EF07966D7d1B10fA38bbb86523 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":779:796  uint assetBalance */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":486:487  0 */\n      dup1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:832  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:823  _assetAddress */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:832  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":848:860  address self */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":871:875  this */\n      address\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":848:876  address self = address(this) */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":947:951  self */\n      dup1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":947:959  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":932:959  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:983  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:992  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":993:1005  assetBalance */\n      dup4\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_109:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_110)\n    tag_108:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1058:1071  _assetAddress */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1082  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1091:1095  this */\n      address\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_112\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_112:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_113:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1037:1097  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1170  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_114\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1145:1155  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1157:1169  assetBalance */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1117:1130  _assetAddress */\n      dup5\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1144  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_115\n      swap1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1170  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n    tag_110:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1219:1232  _assetAddress */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1207:1217  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1234:1246  assetBalance */\n      dup4\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1159:1160  _ */\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1276:1309  IUniswapExchange public exchangeA */\n    tag_47:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1354:1392  IUniswapFactory public uniswapFactoryA */\n    tag_50:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1801  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1814  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1146:1232  address public constant UNISWAP_FACTORY_B = 0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n    tag_56:\n        /* \"FlashLoan/Arbitrageur.sol\":1190:1232  0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n      0x54ac34e5ce84c501165674782582adce2fddc8f4\n        /* \"FlashLoan/Arbitrageur.sol\":1146:1232  address public constant UNISWAP_FACTORY_B = 0x54Ac34e5cE84C501165674782582ADce2FDdc8F4 */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":937:944  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":963:969  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":956:969  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1290:1294  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1329:1335  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1323  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1306:1335  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":2938:3698  function swapTokens(address _to_token, uint256 _amount) external {... */\n    tag_66:\n        /* \"FlashLoan/Arbitrageur.sol\":3241:3257  uint256 deadline */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":3260:3273  getDeadline() */\n      tag_125\n        /* \"FlashLoan/Arbitrageur.sol\":3260:3271  getDeadline */\n      tag_126\n        /* \"FlashLoan/Arbitrageur.sol\":3260:3273  getDeadline() */\n      jump\t// in\n    tag_125:\n        /* \"FlashLoan/Arbitrageur.sol\":3241:3273  uint256 deadline = getDeadline() */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":3284:3293  ERC20 dai */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":3284:3314  ERC20 dai = ERC20(DAI_ADDRESS) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":3324:3333  ERC20 bat */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":1006:1048  0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      0x2d12186fbb9f9a8c28b3ffdd4c42920f8539d738\n        /* \"FlashLoan/Arbitrageur.sol\":3324:3354  ERC20 bat = ERC20(BAT_ADDRESS) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3425  dai */\n      dup2\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3433  dai.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"FlashLoan/Arbitrageur.sol\":3442:3451  exchangeA */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":3454:3461  _amount */\n      dup7\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3462  dai.approve(address(exchangeA), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_127:\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3462  dai.approve(address(exchangeA), _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_128\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_128:\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3462  dai.approve(address(exchangeA), _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n        /* \"FlashLoan/Arbitrageur.sol\":3422:3462  dai.approve(address(exchangeA), _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":3401:3514  require(... */\n      iszero\n      iszero\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c64206e6f7420617070726f7665204441492073656c6c000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"FlashLoan/Arbitrageur.sol\":2938:3698  function swapTokens(address _to_token, uint256 _amount) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":1239:1270  ILendingPool public lendingPool */\n    tag_69:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":778:832  ILendingPoolAddressesProvider public addressesProvider */\n    tag_72:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":968:1048  address public constant BAT_ADDRESS = 0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n    tag_75:\n        /* \"FlashLoan/Arbitrageur.sol\":1006:1048  0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      0x2d12186fbb9f9a8c28b3ffdd4c42920f8539d738\n        /* \"FlashLoan/Arbitrageur.sol\":968:1048  address public constant BAT_ADDRESS = 0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      dup2\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n    tag_82:\n        /* \"FlashLoan/Arbitrageur.sol\":3944:3960  uint256 deadline */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":3963:3976  getDeadline() */\n      tag_132\n        /* \"FlashLoan/Arbitrageur.sol\":3963:3974  getDeadline */\n      tag_126\n        /* \"FlashLoan/Arbitrageur.sol\":3963:3976  getDeadline() */\n      jump\t// in\n    tag_132:\n        /* \"FlashLoan/Arbitrageur.sol\":3944:3976  uint256 deadline = getDeadline() */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":3987:3996  ERC20 dai */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":3987:4017  ERC20 dai = ERC20(DAI_ADDRESS) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4027:4036  ERC20 bat */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":1006:1048  0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      0x2d12186fbb9f9a8c28b3ffdd4c42920f8539d738\n        /* \"FlashLoan/Arbitrageur.sol\":4027:4057  ERC20 bat = ERC20(BAT_ADDRESS) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4128  dai */\n      dup2\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4136  dai.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"FlashLoan/Arbitrageur.sol\":4145:4154  exchangeA */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":4157:4164  _amount */\n      dup10\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4165  dai.approve(address(exchangeA), _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_133:\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4165  dai.approve(address(exchangeA), _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4165  dai.approve(address(exchangeA), _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_135:\n        /* \"FlashLoan/Arbitrageur.sol\":4125:4165  dai.approve(address(exchangeA), _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4104:4217  require(... */\n      iszero\n      iszero\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c64206e6f7420617070726f7665204441492073656c6c000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"FlashLoan/Arbitrageur.sol\":4228:4247  uint256 tokenBought */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4259  exchangeA */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4281  exchangeA.tokenToTokenSwapInput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf7e1a7\n        /* \"FlashLoan/Arbitrageur.sol\":4295:4302  _amount */\n      dup10\n        /* \"FlashLoan/Arbitrageur.sol\":4316:4317  1 */\n      0x01\n        /* \"FlashLoan/Arbitrageur.sol\":4331:4332  1 */\n      dup1\n        /* \"FlashLoan/Arbitrageur.sol\":4346:4354  deadline */\n      dup9\n        /* \"FlashLoan/Arbitrageur.sol\":1006:1048  0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738 */\n      0x2d12186fbb9f9a8c28b3ffdd4c42920f8539d738\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4389  exchangeA.tokenToTokenSwapInput(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_137:\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4389  exchangeA.tokenToTokenSwapInput(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_138\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_138:\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4389  exchangeA.tokenToTokenSwapInput(... */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_139:\n        /* \"FlashLoan/Arbitrageur.sol\":4250:4389  exchangeA.tokenToTokenSwapInput(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4228:4389  uint256 tokenBought = exchangeA.tokenToTokenSwapInput(... */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4424  bat */\n      dup2\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4432  bat.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"FlashLoan/Arbitrageur.sol\":4441:4450  exchangeB */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":4453:4464  tokenBought */\n      dup4\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4465  bat.approve(address(exchangeB), tokenBought) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_140:\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4465  bat.approve(address(exchangeB), tokenBought) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_141\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_141:\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4465  bat.approve(address(exchangeB), tokenBought) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_142\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_142:\n        /* \"FlashLoan/Arbitrageur.sol\":4421:4465  bat.approve(address(exchangeB), tokenBought) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4400:4517  require(... */\n      iszero\n      iszero\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c64206e6f7420617070726f7665204441492073656c6c000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"FlashLoan/Arbitrageur.sol\":4565:4582  uint256 daiBought */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4594  exchangeB */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4616  exchangeB.tokenToTokenSwapInput */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf7e1a7\n        /* \"FlashLoan/Arbitrageur.sol\":4630:4641  tokenBought */\n      dup4\n        /* \"FlashLoan/Arbitrageur.sol\":4655:4656  1 */\n      0x01\n        /* \"FlashLoan/Arbitrageur.sol\":4670:4671  1 */\n      dup1\n        /* \"FlashLoan/Arbitrageur.sol\":4685:4693  deadline */\n      dup10\n        /* \"FlashLoan/Arbitrageur.sol\":920:962  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD */\n      0xff795577d9ac8bd7d90ee22b6c1703490b6512fd\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4728  exchangeB.tokenToTokenSwapInput(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_144\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_144:\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4728  exchangeB.tokenToTokenSwapInput(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_145:\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4728  exchangeB.tokenToTokenSwapInput(... */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_146:\n        /* \"FlashLoan/Arbitrageur.sol\":4585:4728  exchangeB.tokenToTokenSwapInput(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4565:4728  uint256 daiBought = exchangeB.tokenToTokenSwapInput(... */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4761:4778  uint256 totalDebt */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":4781:4798  _amount.add(_fee) */\n      tag_147\n        /* \"FlashLoan/Arbitrageur.sol\":4793:4797  _fee */\n      dup10\n        /* \"FlashLoan/Arbitrageur.sol\":4781:4788  _amount */\n      dup12\n        /* \"FlashLoan/Arbitrageur.sol\":4781:4792  _amount.add */\n      tag_148\n      swap1\n        /* \"FlashLoan/Arbitrageur.sol\":4781:4798  _amount.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"FlashLoan/Arbitrageur.sol\":4761:4798  uint256 totalDebt = _amount.add(_fee) */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4829:4838  totalDebt */\n      dup1\n        /* \"FlashLoan/Arbitrageur.sol\":4817:4826  daiBought */\n      dup3\n        /* \"FlashLoan/Arbitrageur.sol\":4817:4838  daiBought > totalDebt */\n      gt\n        /* \"FlashLoan/Arbitrageur.sol\":4809:4857  require(daiBought > totalDebt, \"Did not profit\") */\n      iszero\n      iszero\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x446964206e6f742070726f666974000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"FlashLoan/Arbitrageur.sol\":4868:4920  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      tag_150\n        /* \"FlashLoan/Arbitrageur.sol\":4900:4908  _reserve */\n      dup12\n        /* \"FlashLoan/Arbitrageur.sol\":4910:4919  totalDebt */\n      dup3\n        /* \"FlashLoan/Arbitrageur.sol\":4868:4899  transferFundsBackToPoolInternal */\n      tag_151\n        /* \"FlashLoan/Arbitrageur.sol\":4868:4920  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      jump\t// in\n    tag_150:\n        /* \"FlashLoan/Arbitrageur.sol\":3704:4927  function executeOperation(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      tag_156\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2061:2069  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2060  _transferOwnership */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_159\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_160\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"FlashLoan/Arbitrageur.sol\":4933:5022  function getDeadline() internal view returns (uint256) {... */\n    tag_126:\n        /* \"FlashLoan/Arbitrageur.sol\":4979:4986  uint256 */\n      0x00\n        /* \"FlashLoan/Arbitrageur.sol\":5011:5015  3000 */\n      0x0bb8\n        /* \"FlashLoan/Arbitrageur.sol\":5005:5008  now */\n      timestamp\n        /* \"FlashLoan/Arbitrageur.sol\":5005:5015  now + 3000 */\n      add\n        /* \"FlashLoan/Arbitrageur.sol\":4998:5015  return now + 3000 */\n      swap1\n      pop\n        /* \"FlashLoan/Arbitrageur.sol\":4933:5022  function getDeadline() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1011:1225  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n    tag_151:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1106:1126  address payable core */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1146  addressesProvider */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1165  addressesProvider.getLendingPoolCore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed6ff760\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1167  addressesProvider.getLendingPoolCore() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_166:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1167  addressesProvider.getLendingPoolCore() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_167\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_167:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1167  addressesProvider.getLendingPoolCore() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_168:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1129:1167  addressesProvider.getLendingPoolCore() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1106:1167  address payable core = addressesProvider.getLendingPoolCore() */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1177:1218  transferInternal(core, _reserve, _amount) */\n      tag_169\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1194:1198  core */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1200:1208  _reserve */\n      dup5\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1210:1217  _amount */\n      dup5\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1177:1193  transferInternal */\n      tag_170\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1177:1218  transferInternal(core, _reserve, _amount) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1011:1225  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2271:2272  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2259  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2243:2316  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2360:2368  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2388:2396  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2385  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2396  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_175\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      iszero\n      iszero\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_177:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_177)\n    tag_178:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_180)\n        /* \"--CODEGEN--\":16:47   */\n    tag_181:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_180:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      iszero\n      iszero\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3548  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_183\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n    tag_183:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1231:1572  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_170:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1356:1382  EthAddressLib.ethAddress() */\n      tag_187\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1356:1380  EthAddressLib.ethAddress */\n      tag_188\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1356:1382  EthAddressLib.ethAddress() */\n      jump\t// in\n    tag_187:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1344:1382  _reserve == EthAddressLib.ethAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1344:1352  _reserve */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1344:1382  _reserve == EthAddressLib.ethAddress() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1341:1504  if(_reserve == EthAddressLib.ethAddress()) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1437:1449  _destination */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1437:1454  _destination.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1461:1468  _amount */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1437:1473  _destination.call.value(_amount)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_191\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_190)\n        /* \"--CODEGEN--\":16:47   */\n    tag_191:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_190:\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1437:1473  _destination.call.value(_amount)(\"\") */\n      pop\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1487:1494  return; */\n      jump(tag_186)\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1341:1504  if(_reserve == EthAddressLib.ethAddress()) {... */\n    tag_189:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1513:1565  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      tag_192\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1543:1555  _destination */\n      dup4\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1557:1564  _amount */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1520:1528  _reserve */\n      dup5\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1513:1542  IERC20(_reserve).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_115\n      swap1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1513:1565  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":1231:1572  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_186:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1004:1020  bytes32 codehash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1049  bytes32 accountHash */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1118  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1219:1226  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      extcodehash\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1195:1227  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1258:1269  accountHash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1254  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1285:1288  0x0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1281  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":286:520  function ethAddress() internal pure returns(address) {... */\n    tag_188:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":330:337  address */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":356:398  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":349:398  return 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":286:520  function ethAddress() internal pure returns(address) {... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_e07715594cb39501f0d28b76af82805ef9f78ecd382671b21067a9d117caba54 436f756c64206e6f74207472616e73666572206261636b207468652070726f666974\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa165627a7a723058208694b4d71a61d94e480fb668a0f29cc9386bb0e57a693803fee7b570c2103e130029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5073506b0b2cf20faa8f38a4e2b524ee43e1f4458cc56000620000396200052360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505073ecc6c0542710a0ef07966d7d1b10fa38bbb86523600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf6273ff795577d9ac8bd7d90ee22b6c1703490b6512fd6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200022457600080fd5b505afa15801562000239573d6000803e3d6000fd5b505050506040513d60208110156200025057600080fd5b8101908080519060200190929190505050905080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507354ac34e5ce84c501165674782582adce2fddc8f4600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62732d12186fbb9f9a8c28b3ffdd4c42920f8539d7386040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015620003af57600080fd5b505afa158015620003c4573d6000803e3d6000fd5b505050506040513d6020811015620003db57600080fd5b8101908080519060200190929190505050905080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200049a57600080fd5b505afa158015620004af573d6000803e3d6000fd5b505050506040513d6020811015620004c657600080fd5b8101908080519060200190929190505050905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200052b565b600033905090565b611fea806200053b6000396000f3fe6080604052600436106101095760003560e01c80638370159911610095578063a59a997311610064578063a59a9973146104f0578063c72c4d1014610547578063cfc0ff1b1461059e578063ee872558146105f5578063f2fde38b146106af57610109565b806383701599146103b85780638da5cb5b1461040f5780638f32d59b14610466578063a114398d1461049557610109565b8063470f42f5116100dc578063470f42f51461024b57806351cff8d9146102a2578063553e8c1e146102f35780636a09006e1461034a578063715018a6146103a157610109565b806319536b131461010b57806320fee44b146101625780632a4c0a1a146101b95780633dd9ce1f14610210575b005b34801561011757600080fd5b50610120610700565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b50610177610726565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c557600080fd5b506101ce61074c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021c57600080fd5b506102496004803603602081101561023357600080fd5b8101908080359060200190929190505050610764565b005b34801561025757600080fd5b50610260610b5e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102f1600480360360208110156102c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b76565b005b3480156102ff57600080fd5b50610308610de3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035657600080fd5b5061035f610e09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ad57600080fd5b506103b6610e2f565b005b3480156103c457600080fd5b506103cd610f6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b50610424610f82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047257600080fd5b5061047b610fab565b604051808215151515815260200191505060405180910390f35b3480156104a157600080fd5b506104ee600480360360408110156104b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611009565b005b3480156104fc57600080fd5b506105056111a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055357600080fd5b5061055c6111cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105aa57600080fd5b506105b36111f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060157600080fd5b506106ad6004803603608081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561066957600080fd5b82018360208201111561067b57600080fd5b8035906020019184600183028401116401000000008311171561069d57600080fd5b909192939192939050505061120a565b005b3480156106bb57600080fd5b506106fe600480360360208110156106d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117c7565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73ff795577d9ac8bd7d90ee22b6c1703490b6512fd81565b61076c610fab565b15156107e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6060604051806020016040528060008152509050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de3073ff795577d9ac8bd7d90ee22b6c1703490b6512fd86866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561091c578082015181840152602081019050610901565b50505050905090810190601f1680156109495780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a0257600080fd5b505afa158015610a16573d6000803e3d6000fd5b505050506040513d6020811015610a2c57600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b505050506040513d6020811015610af057600080fd5b81019080805190602001909291905050501515610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611f736022913960400191505060405180910390fd5b50505050565b73ecc6c0542710a0ef07966d7d1b10fa38bbb8652381565b610b7e610fab565b1515610bf2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c945760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610c8d573d6000803e3d6000fd5b5050610d7a565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d1157600080fd5b505afa158015610d25573d6000803e3d6000fd5b505050506040513d6020811015610d3b57600080fd5b81019080805190602001909291905050509050610d7933828473ffffffffffffffffffffffffffffffffffffffff1661184f9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e37610fab565b1515610eab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7354ac34e5ce84c501165674782582adce2fddc8f481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fed611920565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000611013611928565b9050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd90506000732d12186fbb9f9a8c28b3ffdd4c42920f8539d73890508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156110f057600080fd5b505af1158015611104573d6000803e3d6000fd5b505050506040513d602081101561111a57600080fd5b8101908080519060200190929190505050151561119f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b732d12186fbb9f9a8c28b3ffdd4c42920f8539d73881565b6000611214611928565b9050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd90506000732d12186fbb9f9a8c28b3ffdd4c42920f8539d73890508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b810190808051906020019092919050505015156113a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a78960018088732d12186fbb9f9a8c28b3ffdd4c42920f8539d7386040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b15801561147857600080fd5b505af115801561148c573d6000803e3d6000fd5b505050506040513d60208110156114a257600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561155e57600080fd5b505af1158015611572573d6000803e3d6000fd5b505050506040513d602081101561158857600080fd5b8101908080519060200190929190505050151561160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7836001808973ff795577d9ac8bd7d90ee22b6c1703490b6512fd6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156116e557600080fd5b505af11580156116f9573d6000803e3d6000fd5b505050506040513d602081101561170f57600080fd5b810190808051906020019092919050505090506000611737898b61193490919063ffffffff16565b905080821115156117b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f446964206e6f742070726f66697400000000000000000000000000000000000081525060200191505060405180910390fd5b6117ba8b826119be565b5050505050505050505050565b6117cf610fab565b1515611843576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61184c81611a75565b50565b61191b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bbb565b505050565b600033905090565b6000610bb84201905090565b60008082840190508381101515156119b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2857600080fd5b505afa158015611a3c573d6000803e3d6000fd5b505050506040513d6020811015611a5257600080fd5b81019080805190602001909291905050509050611a70818484611e0e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611f4d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611bda8273ffffffffffffffffffffffffffffffffffffffff16611ee5565b1515611c4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083101515611c9f5780518252602082019150602081019050602083039250611c7a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d01576040519150601f19603f3d011682016040523d82523d6000602084013e611d06565b606091505b5091509150811515611d80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115611e0857808060200190516020811015611d9f57600080fd5b81019080805190602001909291905050501515611e07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611f95602a913960400191505060405180910390fd5b5b50505050565b611e16611f30565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eb4578273ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d8060008114611ea7576040519150601f19603f3d011682016040523d82523d6000602084013e611eac565b606091505b505050611ee0565b611edf83828473ffffffffffffffffffffffffffffffffffffffff1661184f9092919063ffffffff16565b5b505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611f2757506000801b8214155b92505050919050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f756c64206e6f74207472616e73666572206261636b207468652070726f6669745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a723058208694b4d71a61d94e480fb668a0f29cc9386bb0e57a693803fee7b570c2103e130029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x506B0B2CF20FAA8F38A4E2B524EE43E1F4458CC5 PUSH1 0x0 PUSH3 0x39 PUSH3 0x523 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH20 0xECC6C0542710A0EF07966D7D1B10FA38BBB86523 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6F2BF62 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x239 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x54AC34E5CE84C501165674782582ADCE2FDDC8F4 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6F2BF62 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x261BF8B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x52B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1FEA DUP1 PUSH3 0x53B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83701599 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA59A9973 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xCFC0FF1B EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AF JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x83701599 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xA114398D EQ PUSH2 0x495 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x470F42F5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x470F42F5 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x553E8C1E EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x6A09006E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A1 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x19536B13 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20FEE44B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2A4C0A1A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x3DD9CE1F EQ PUSH2 0x210 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x764 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47B PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1009 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B3 PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x120A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD DUP2 JUMP JUMPDEST PUSH2 0x76C PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFFE9DE ADDRESS PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x901 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x949 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F73 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xECC6C0542710A0EF07966D7D1B10FA38BBB86523 DUP2 JUMP JUMPDEST PUSH2 0xB7E PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC94 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0xD7A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD79 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH20 0x54AC34E5CE84C501165674782582ADCE2FDDC8F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFED PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1013 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDF7E1A7 DUP10 PUSH1 0x1 DUP1 DUP9 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1572 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x160D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDF7E1A7 DUP4 PUSH1 0x1 DUP1 DUP10 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1737 DUP10 DUP12 PUSH2 0x1934 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x446964206E6F742070726F666974000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BA DUP12 DUP3 PUSH2 0x19BE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17CF PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x184C DUP2 PUSH2 0x1A75 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x191B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 TIMESTAMP ADD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1A70 DUP2 DUP5 DUP5 PUSH2 0x1E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F4D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BDA DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE5 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1C9F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x1D80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1E08 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F95 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E16 PUSH2 0x1F30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1EDF DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1F27 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 POP SWAP1 JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373436F756C64206E6F74207472616E7366 PUSH6 0x72206261636B KECCAK256 PUSH21 0x68652070726F6669745361666545524332303A2045 MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A165627A7A723058208694B4D71A PUSH2 0xD94E 0x48 0xf 0xb6 PUSH9 0xA0F29CC9386BB0E57A PUSH10 0x3803FEE7B570C2103E13 STOP 0x29 ",
							"sourceMap": "773:4251:0:-;;;1443:845;8:9:-1;5:2;;;30:1;27;20:12;5:2;1443:845:0;831:42;698:17:3;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;944:16:10;894:17;;:67;;;;;;;;;;;;;;;;;;839:129;1098:42:0;1515:15;;:52;;;;;;;;;;;;;;;;;;1611:25;1639:15;;;;;;;;;;;:27;;;920:42;1639:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1639:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1639:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1639:40:0;;;;;;;;;;;;;;;;1611:68;;1752:17;1723:9;;:47;;;;;;;;;;;;;;;;;;1190:42;1821:15;;:52;;;;;;;;;;;;;;;;;;1917:25;1945:15;;;;;;;;;;;:27;;;1006:42;1945:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1945:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1945:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1945:40:0;;;;;;;;;;;;;;;;1917:68;;2057:17;2028:9;;:47;;;;;;;;;;;;;;;;;;2119:26;2148:17;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2148:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2148:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2148:34:0;;;;;;;;;;;;;;;;2119:63;;2262:18;2235:11;;:46;;;;;;;;;;;;;;;;;;1443:845;;;773:4251;;788:96:1;833:15;867:10;860:17;;788:96;:::o;773:4251:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106101095760003560e01c80638370159911610095578063a59a997311610064578063a59a9973146104f0578063c72c4d1014610547578063cfc0ff1b1461059e578063ee872558146105f5578063f2fde38b146106af57610109565b806383701599146103b85780638da5cb5b1461040f5780638f32d59b14610466578063a114398d1461049557610109565b8063470f42f5116100dc578063470f42f51461024b57806351cff8d9146102a2578063553e8c1e146102f35780636a09006e1461034a578063715018a6146103a157610109565b806319536b131461010b57806320fee44b146101625780632a4c0a1a146101b95780633dd9ce1f14610210575b005b34801561011757600080fd5b50610120610700565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b50610177610726565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c557600080fd5b506101ce61074c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021c57600080fd5b506102496004803603602081101561023357600080fd5b8101908080359060200190929190505050610764565b005b34801561025757600080fd5b50610260610b5e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ae57600080fd5b506102f1600480360360208110156102c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b76565b005b3480156102ff57600080fd5b50610308610de3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035657600080fd5b5061035f610e09565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ad57600080fd5b506103b6610e2f565b005b3480156103c457600080fd5b506103cd610f6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b50610424610f82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047257600080fd5b5061047b610fab565b604051808215151515815260200191505060405180910390f35b3480156104a157600080fd5b506104ee600480360360408110156104b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611009565b005b3480156104fc57600080fd5b506105056111a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055357600080fd5b5061055c6111cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105aa57600080fd5b506105b36111f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060157600080fd5b506106ad6004803603608081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561066957600080fd5b82018360208201111561067b57600080fd5b8035906020019184600183028401116401000000008311171561069d57600080fd5b909192939192939050505061120a565b005b3480156106bb57600080fd5b506106fe600480360360208110156106d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117c7565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73ff795577d9ac8bd7d90ee22b6c1703490b6512fd81565b61076c610fab565b15156107e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6060604051806020016040528060008152509050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de3073ff795577d9ac8bd7d90ee22b6c1703490b6512fd86866040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561091c578082015181840152602081019050610901565b50505050905090810190601f1680156109495780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a0257600080fd5b505afa158015610a16573d6000803e3d6000fd5b505050506040513d6020811015610a2c57600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b505050506040513d6020811015610af057600080fd5b81019080805190602001909291905050501515610b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611f736022913960400191505060405180910390fd5b50505050565b73ecc6c0542710a0ef07966d7d1b10fa38bbb8652381565b610b7e610fab565b1515610bf2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c945760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610c8d573d6000803e3d6000fd5b5050610d7a565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d1157600080fd5b505afa158015610d25573d6000803e3d6000fd5b505050506040513d6020811015610d3b57600080fd5b81019080805190602001909291905050509050610d7933828473ffffffffffffffffffffffffffffffffffffffff1661184f9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e37610fab565b1515610eab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7354ac34e5ce84c501165674782582adce2fddc8f481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fed611920565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000611013611928565b9050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd90506000732d12186fbb9f9a8c28b3ffdd4c42920f8539d73890508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156110f057600080fd5b505af1158015611104573d6000803e3d6000fd5b505050506040513d602081101561111a57600080fd5b8101908080519060200190929190505050151561119f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b732d12186fbb9f9a8c28b3ffdd4c42920f8539d73881565b6000611214611928565b9050600073ff795577d9ac8bd7d90ee22b6c1703490b6512fd90506000732d12186fbb9f9a8c28b3ffdd4c42920f8539d73890508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b810190808051906020019092919050505015156113a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a78960018088732d12186fbb9f9a8c28b3ffdd4c42920f8539d7386040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b15801561147857600080fd5b505af115801561148c573d6000803e3d6000fd5b505050506040513d60208110156114a257600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561155e57600080fd5b505af1158015611572573d6000803e3d6000fd5b505050506040513d602081101561158857600080fd5b8101908080519060200190929190505050151561160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436f756c64206e6f7420617070726f7665204441492073656c6c00000000000081525060200191505060405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a7836001808973ff795577d9ac8bd7d90ee22b6c1703490b6512fd6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156116e557600080fd5b505af11580156116f9573d6000803e3d6000fd5b505050506040513d602081101561170f57600080fd5b810190808051906020019092919050505090506000611737898b61193490919063ffffffff16565b905080821115156117b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f446964206e6f742070726f66697400000000000000000000000000000000000081525060200191505060405180910390fd5b6117ba8b826119be565b5050505050505050505050565b6117cf610fab565b1515611843576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61184c81611a75565b50565b61191b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bbb565b505050565b600033905090565b6000610bb84201905090565b60008082840190508381101515156119b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2857600080fd5b505afa158015611a3c573d6000803e3d6000fd5b505050506040513d6020811015611a5257600080fd5b81019080805190602001909291905050509050611a70818484611e0e565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611f4d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611bda8273ffffffffffffffffffffffffffffffffffffffff16611ee5565b1515611c4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083101515611c9f5780518252602082019150602081019050602083039250611c7a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d01576040519150601f19603f3d011682016040523d82523d6000602084013e611d06565b606091505b5091509150811515611d80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115611e0857808060200190516020811015611d9f57600080fd5b81019080805190602001909291905050501515611e07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611f95602a913960400191505060405180910390fd5b5b50505050565b611e16611f30565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611eb4578273ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d8060008114611ea7576040519150601f19603f3d011682016040523d82523d6000602084013e611eac565b606091505b505050611ee0565b611edf83828473ffffffffffffffffffffffffffffffffffffffff1661184f9092919063ffffffff16565b5b505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015611f2757506000801b8214155b92505050919050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f756c64206e6f74207472616e73666572206261636b207468652070726f6669745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a723058208694b4d71a61d94e480fb668a0f29cc9386bb0e57a693803fee7b570c2103e130029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83701599 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA59A9973 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xCFC0FF1B EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6AF JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x83701599 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xA114398D EQ PUSH2 0x495 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x470F42F5 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x470F42F5 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x553E8C1E EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x6A09006E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A1 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x19536B13 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x20FEE44B EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2A4C0A1A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x3DD9CE1F EQ PUSH2 0x210 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x764 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x308 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47B PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1009 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x505 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B3 PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6AD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x120A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD DUP2 JUMP JUMPDEST PUSH2 0x76C PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5CFFE9DE ADDRESS PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x901 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x949 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xB58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F73 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xECC6C0542710A0EF07966D7D1B10FA38BBB86523 DUP2 JUMP JUMPDEST PUSH2 0xB7E PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC94 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0xD7A JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD79 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH20 0x54AC34E5CE84C501165674782582ADCE2FDDC8F4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFED PUSH2 0x1920 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1013 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1104 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x119F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD SWAP1 POP PUSH1 0x0 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDF7E1A7 DUP10 PUSH1 0x1 DUP1 DUP9 PUSH20 0x2D12186FBB9F9A8C28B3FFDD4C42920F8539D738 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1572 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x160D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C64206E6F7420617070726F7665204441492073656C6C000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDF7E1A7 DUP4 PUSH1 0x1 DUP1 DUP10 PUSH20 0xFF795577D9AC8BD7D90EE22B6C1703490B6512FD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1737 DUP10 DUP12 PUSH2 0x1934 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO ISZERO PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x446964206E6F742070726F666974000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BA DUP12 DUP3 PUSH2 0x19BE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17CF PUSH2 0xFAB JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x184C DUP2 PUSH2 0x1A75 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x191B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 TIMESTAMP ADD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1A70 DUP2 DUP5 DUP5 PUSH2 0x1E0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F4D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BDA DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EE5 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1C4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x1C9F JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x1D80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1E08 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F95 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E16 PUSH2 0x1F30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1EDF DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x184F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1F27 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 POP SWAP1 JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373436F756C64206E6F74207472616E7366 PUSH6 0x72206261636B KECCAK256 PUSH21 0x68652070726F6669745361666545524332303A2045 MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A165627A7A723058208694B4D71A PUSH2 0xD94E 0x48 0xf 0xb6 PUSH9 0xA0F29CC9386BB0E57A PUSH10 0x3803FEE7B570C2103E13 STOP 0x29 ",
							"sourceMap": "773:4251:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1398:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1398:38:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1315:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1315:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;882:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;882:80:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2336:479;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2336:479:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2336:479:0;;;;;;;;;;;;;;;;;:::i;:::-;;1054:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:86:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;711:543:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:543:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:543:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1276:33:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1276:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1354:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:38:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1684:137:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:3;;;:::i;:::-;;1146:86:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1146:86:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2938:760:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2938:760:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2938:760:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1239:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1239:31:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;778:54:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:54:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;968:80:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:80:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3704:1223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3704:1223:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3704:1223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3704:1223:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3704:1223:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3704:1223:0;;;;;;;;;;;;:::i;:::-;;1970:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1398:38:0;;;;;;;;;;;;;:::o;1315:33::-;;;;;;;;;;;;;:::o;882:80::-;920:42;882:80;:::o;2336:479::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:17:0;:22;;;;;;;;;;;;;;2435:9;920:42;2435:30;;2475:11;;;;;;;;;;;:21;;;2505:4;920:42;2525:6;2533:4;2475:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2475:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2475:63:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2475:63:0;;;;2604:14;2621:3;:13;;;2643:4;2621:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2621:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2621:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2621:28:0;;;;;;;;;;;;;;;;2604:45;;2716:3;:12;;;2729:10;2741:6;2716:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2716:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2716:32:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2716:32:0;;;;;;;;;;;;;;;;2695:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:1:3;;;2336:479:0;:::o;1054:86::-;1098:42;1054:86;:::o;711:543:14:-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:17:14;486:1;810:22;;:13;:22;;;806:375;;;848:12;871:4;848:28;;947:4;:12;;;932:27;;973:10;:19;;:33;993:12;973:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;973:33:14;806:375;;;;1058:13;1052:30;;;1091:4;1052:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1052:45:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1052:45:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1052:45:14;;;;;;;;;;;;;;;;1037:60;;1111:59;1145:10;1157:12;1117:13;1111:33;;;;:59;;;;;:::i;:::-;806:375;1219:13;1195:52;;1207:10;1195:52;;;1234:12;1195:52;;;;;;;;;;;;;;;;;;1159:1:3;711:543:14;:::o;1276:33:0:-;;;;;;;;;;;;;:::o;1354:38::-;;;;;;;;;;;;;:::o;1684:137:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;1146:86:0:-;1190:42;1146:86;:::o;899:77:3:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;2938:760:0:-;3241:16;3260:13;:11;:13::i;:::-;3241:32;;3284:9;920:42;3284:30;;3324:9;1006:42;3324:30;;3422:3;:11;;;3442:9;;;;;;;;;;;3454:7;3422:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3422:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3422:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3422:40:0;;;;;;;;;;;;;;;;3401:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2938:760;;;;;:::o;1239:31::-;;;;;;;;;;;;;:::o;778:54:10:-;;;;;;;;;;;;;:::o;968:80:0:-;1006:42;968:80;:::o;3704:1223::-;3944:16;3963:13;:11;:13::i;:::-;3944:32;;3987:9;920:42;3987:30;;4027:9;1006:42;4027:30;;4125:3;:11;;;4145:9;;;;;;;;;;;4157:7;4125:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4125:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4125:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4125:40:0;;;;;;;;;;;;;;;;4104:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4228:19;4250:9;;;;;;;;;;;:31;;;4295:7;4316:1;4331;4346:8;1006:42;4250:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4250:139:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4250:139:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4250:139:0;;;;;;;;;;;;;;;;4228:161;;4421:3;:11;;;4441:9;;;;;;;;;;;4453:11;4421:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4421:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4421:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4421:44:0;;;;;;;;;;;;;;;;4400:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4565:17;4585:9;;;;;;;;;;;:31;;;4630:11;4655:1;4670;4685:8;920:42;4585:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4585:143:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4585:143:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4585:143:0;;;;;;;;;;;;;;;;4565:163;;4761:17;4781;4793:4;4781:7;:11;;:17;;;;:::i;:::-;4761:37;;4829:9;4817;:21;4809:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4868:52;4900:8;4910:9;4868:31;:52::i;:::-;3704:1223;;;;;;;;;;;:::o;1970:107:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;662:174:6:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:6;744:18;:85::i;:::-;662:174;;;:::o;788:96:1:-;833:15;867:10;860:17;;788:96;:::o;4933:89:0:-;4979:7;5011:4;5005:3;:10;4998:17;;4933:89;:::o;834:176:2:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1011:214:10:-;1106:20;1129:17;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1129:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1129:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1129:38:10;;;;;;;;;;;;;;;;1106:61;;1177:41;1194:4;1200:8;1210:7;1177:16;:41::i;:::-;1011:214;;;:::o;2178:225:3:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;2666:1095:6:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:6;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;1231:341:10:-;1356:26;:24;:26::i;:::-;1344:38;;:8;:38;;;1341:163;;;1437:12;:17;;1461:7;1437:36;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1437:36:10;;1487:7;;1341:163;1513:52;1543:12;1557:7;1520:8;1513:29;;;;:52;;;;;:::i;:::-;1231:341;;;;:::o;686:610:7:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;286:234:9:-;330:7;356:42;349:49;;286:234;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1634000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "186",
								"BAT_ADDRESS()": "283",
								"DAI_ADDRESS()": "285",
								"UNISWAP_FACTORY_A()": "240",
								"UNISWAP_FACTORY_B()": "240",
								"addressesProvider()": "497",
								"exchangeA()": "520",
								"exchangeB()": "499",
								"executeOperation(address,uint256,uint256,bytes)": "infinite",
								"isOwner()": "580",
								"lendingPool()": "475",
								"makeArbitrage(uint256)": "infinite",
								"owner()": "506",
								"renounceOwnership()": "22649",
								"swapTokens(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapFactoryA()": "542",
								"uniswapFactoryB()": "477",
								"withdraw(address)": "infinite"
							},
							"internal": {
								"getDeadline()": "28"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "MSTORE"
								},
								{
									"begin": 1443,
									"end": 2288,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1443,
									"end": 2288,
									"name": "POP"
								},
								{
									"begin": 831,
									"end": 873,
									"name": "PUSH",
									"value": "506B0B2CF20FAA8F38A4E2B524EE43E1F4458CC5"
								},
								{
									"begin": 698,
									"end": 715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "SHL"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "SHR"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMPDEST"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "EXP"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "NOT"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP4"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "OR"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 806,
									"end": 815,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 802,
									"end": 803,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SUB"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "LOG3"
								},
								{
									"begin": 664,
									"end": 823,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 960,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 911,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 894,
									"end": 911,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "EXP"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "DUP2"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "SLOAD"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "DUP2"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "MUL"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "NOT"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "AND"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "DUP4"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "AND"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "MUL"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "OR"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "SSTORE"
								},
								{
									"begin": 894,
									"end": 961,
									"name": "POP"
								},
								{
									"begin": 839,
									"end": 968,
									"name": "POP"
								},
								{
									"begin": 1098,
									"end": 1140,
									"name": "PUSH",
									"value": "ECC6C0542710A0EF07966D7D1B10FA38BBB86523"
								},
								{
									"begin": 1515,
									"end": 1530,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1515,
									"end": 1530,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "EXP"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "DUP2"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "SLOAD"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "DUP2"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "MUL"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "NOT"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "AND"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "SWAP1"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "DUP4"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "AND"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "MUL"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "OR"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "SWAP1"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "SSTORE"
								},
								{
									"begin": 1515,
									"end": 1567,
									"name": "POP"
								},
								{
									"begin": 1611,
									"end": 1636,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "SLOAD"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "EXP"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "DIV"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "AND"
								},
								{
									"begin": 1639,
									"end": 1666,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1639,
									"end": 1666,
									"name": "AND"
								},
								{
									"begin": 1639,
									"end": 1666,
									"name": "PUSH",
									"value": "6F2BF62"
								},
								{
									"begin": 920,
									"end": 962,
									"name": "PUSH",
									"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MLOAD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP3"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "AND"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SHL"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MSTORE"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ADD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP3"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "AND"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "AND"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MSTORE"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ADD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MLOAD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP4"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SUB"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP7"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "GAS"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "STATICCALL"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MLOAD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ADD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "DUP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "MLOAD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "ADD"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP3"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP2"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "SWAP1"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1639,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1611,
									"end": 1679,
									"name": "SWAP1"
								},
								{
									"begin": 1611,
									"end": 1679,
									"name": "POP"
								},
								{
									"begin": 1752,
									"end": 1769,
									"name": "DUP1"
								},
								{
									"begin": 1723,
									"end": 1732,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1723,
									"end": 1732,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "EXP"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "DUP2"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "SLOAD"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "DUP2"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "MUL"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "NOT"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "AND"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "SWAP1"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "DUP4"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "AND"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "MUL"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "OR"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "SWAP1"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "SSTORE"
								},
								{
									"begin": 1723,
									"end": 1770,
									"name": "POP"
								},
								{
									"begin": 1190,
									"end": 1232,
									"name": "PUSH",
									"value": "54AC34E5CE84C501165674782582ADCE2FDDC8F4"
								},
								{
									"begin": 1821,
									"end": 1836,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1836,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "EXP"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "DUP2"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "SLOAD"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "DUP2"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "MUL"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "NOT"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "AND"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "SWAP1"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "DUP4"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "AND"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "MUL"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "OR"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "SWAP1"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "SSTORE"
								},
								{
									"begin": 1821,
									"end": 1873,
									"name": "POP"
								},
								{
									"begin": 1917,
									"end": 1942,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "SLOAD"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "EXP"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "DIV"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1945,
									"end": 1960,
									"name": "AND"
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "AND"
								},
								{
									"begin": 1945,
									"end": 1972,
									"name": "PUSH",
									"value": "6F2BF62"
								},
								{
									"begin": 1006,
									"end": 1048,
									"name": "PUSH",
									"value": "2D12186FBB9F9A8C28B3FFDD4C42920F8539D738"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MLOAD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP3"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "AND"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SHL"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MSTORE"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ADD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP3"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "AND"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "AND"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MSTORE"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ADD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MLOAD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP4"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SUB"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP7"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "GAS"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "STATICCALL"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MLOAD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ADD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "DUP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "MLOAD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "ADD"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP3"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP2"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "SWAP1"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1945,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 1917,
									"end": 1985,
									"name": "SWAP1"
								},
								{
									"begin": 1917,
									"end": 1985,
									"name": "POP"
								},
								{
									"begin": 2057,
									"end": 2074,
									"name": "DUP1"
								},
								{
									"begin": 2028,
									"end": 2037,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2028,
									"end": 2037,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "EXP"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "DUP2"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "SLOAD"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "DUP2"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "MUL"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "NOT"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "AND"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "SWAP1"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "DUP4"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "AND"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "MUL"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "OR"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "SWAP1"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "SSTORE"
								},
								{
									"begin": 2028,
									"end": 2075,
									"name": "POP"
								},
								{
									"begin": 2119,
									"end": 2145,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "SLOAD"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "EXP"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "DIV"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2148,
									"end": 2165,
									"name": "AND"
								},
								{
									"begin": 2148,
									"end": 2180,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2148,
									"end": 2180,
									"name": "AND"
								},
								{
									"begin": 2148,
									"end": 2180,
									"name": "PUSH",
									"value": "261BF8B"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "MLOAD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP2"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "AND"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SHL"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP2"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "MSTORE"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "ADD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "MLOAD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP4"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SUB"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP2"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP7"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "EXTCODESIZE"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "GAS"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "STATICCALL"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY"
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "MLOAD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "RETURNDATASIZE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP2"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "ADD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "DUP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "MLOAD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "ADD"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP3"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP2"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "SWAP1"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2148,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "SWAP1"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "POP"
								},
								{
									"begin": 2262,
									"end": 2280,
									"name": "DUP1"
								},
								{
									"begin": 2235,
									"end": 2246,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2235,
									"end": 2246,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "EXP"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "DUP2"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "SLOAD"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "DUP2"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "MUL"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "NOT"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "AND"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "SWAP1"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "DUP4"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "AND"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "MUL"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "OR"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "SWAP1"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "SSTORE"
								},
								{
									"begin": 2235,
									"end": 2281,
									"name": "POP"
								},
								{
									"begin": 1443,
									"end": 2288,
									"name": "POP"
								},
								{
									"begin": 1443,
									"end": 2288,
									"name": "POP"
								},
								{
									"begin": 1443,
									"end": 2288,
									"name": "POP"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "JUMP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMPDEST"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 867,
									"end": 877,
									"name": "CALLER"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "POP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "JUMPDEST"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "CODECOPY"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 5024,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058208694b4d71a61d94e480fb668a0f29cc9386bb0e57a693803fee7b570c2103e130029",
									".code": [
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "MSTORE"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "LT"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "SHR"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "83701599"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "GT"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "A59A9973"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "GT"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "A59A9973"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "C72C4D10"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "CFC0FF1B"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "EE872558"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMP"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "83701599"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "A114398D"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMP"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "470F42F5"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "GT"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "470F42F5"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "51CFF8D9"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "553E8C1E"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "6A09006E"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMP"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "19536B13"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "20FEE44B"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "2A4C0A1A"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH",
											"value": "3DD9CE1F"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "EQ"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPI"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 5024,
											"name": "STOP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DUP3"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "MSTORE"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "ADD"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "POP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "MLOAD"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP2"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SUB"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "RETURN"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "MLOAD"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DUP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DUP3"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "AND"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "AND"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "MSTORE"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "ADD"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP2"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "MLOAD"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DUP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP2"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SUB"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "RETURN"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "DUP3"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "MSTORE"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "ADD"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "MLOAD"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "SWAP2"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "SUB"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "RETURN"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "DUP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "DUP2"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "ADD"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "DUP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "DUP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "ADD"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP3"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP2"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "STOP"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "RETURN"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP3"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "STOP"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "MLOAD"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DUP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DUP3"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "AND"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "AND"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DUP2"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "MSTORE"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "ADD"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP2"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "MLOAD"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DUP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP2"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SUB"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "RETURN"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "JUMPDEST"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "JUMPDEST"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "MLOAD"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DUP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DUP3"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP2"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "MLOAD"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DUP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP2"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SUB"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "RETURN"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "STOP"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "AND"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "AND"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "MSTORE"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "DUP1"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "SWAP2"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "SUB"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "RETURN"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP3"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MSTORE"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "ADD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SUB"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "RETURN"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP3"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SUB"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "RETURN"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "DUP2"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "AND"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP3"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP3"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "STOP"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMPDEST"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMPDEST"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "MLOAD"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DUP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DUP3"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "MSTORE"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "ADD"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP2"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "MLOAD"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DUP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP2"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SUB"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "RETURN"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "MLOAD"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DUP3"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "MLOAD"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP2"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SUB"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "RETURN"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "SWAP2"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "SWAP2"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "SUB"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "RETURN"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "AND"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "DUP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "ADD"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP4"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP2"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP3"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP4"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "SWAP1"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "STOP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "AND"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP3"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "STOP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SLOAD"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "EXP"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "SWAP1"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DIV"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "AND"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "DUP2"
										},
										{
											"begin": 1398,
											"end": 1436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SLOAD"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "EXP"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DIV"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "AND"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1348,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "DUP2"
										},
										{
											"begin": 882,
											"end": 962,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2402,
											"end": 2419,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MLOAD"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP1"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "ADD"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP1"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "POP"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "SWAP1"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "POP"
										},
										{
											"begin": 2435,
											"end": 2444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 2435,
											"end": 2465,
											"name": "SWAP1"
										},
										{
											"begin": 2435,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "SLOAD"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "EXP"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "DIV"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2486,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "PUSH",
											"value": "5CFFE9DE"
										},
										{
											"begin": 2505,
											"end": 2509,
											"name": "ADDRESS"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP7"
										},
										{
											"begin": 2533,
											"end": 2537,
											"name": "DUP7"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MLOAD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP6"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SHL"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP6"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP5"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP3"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP3"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MLOAD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MLOAD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ISZERO"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "JUMPI"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP3"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MLOAD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "EXP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "NOT"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "AND"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MSTORE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ADD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "JUMPDEST"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP6"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "MLOAD"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP4"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SUB"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP2"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP8"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "DUP1"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "GAS"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "CALL"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP"
										},
										{
											"begin": 2604,
											"end": 2618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "DUP2"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "AND"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2643,
											"end": 2647,
											"name": "ADDRESS"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP3"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SHL"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MSTORE"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP3"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MSTORE"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP4"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP7"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "GAS"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "STATICCALL"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2604,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2604,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "CALLER"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP4"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MLOAD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SHL"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP3"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MSTORE"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP3"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MLOAD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP4"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SUB"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP8"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "GAS"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "CALL"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MLOAD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "DUP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "MLOAD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP3"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP2"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ISZERO"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ISZERO"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "JUMPI"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "MLOAD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP1"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP1"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP3"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SUB"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP3"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "MSTORE"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP1"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH data",
											"value": "E07715594CB39501F0D28B76AF82805EF9F78ECD382671B21067A9D117CABA54"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SWAP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "CODECOPY"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "ADD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SWAP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "POP"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "POP"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "MLOAD"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "DUP1"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SWAP2"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SUB"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "REVERT"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2695,
											"end": 2808,
											"name": "JUMPDEST"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2336,
											"end": 2815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1098,
											"end": 1140,
											"name": "PUSH",
											"value": "ECC6C0542710A0EF07966D7D1B10FA38BBB86523"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 486,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 823,
											"name": "DUP3"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "EQ"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "ISZERO"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPI"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 871,
											"end": 875,
											"name": "ADDRESS"
										},
										{
											"begin": 848,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 848,
											"end": 876,
											"name": "POP"
										},
										{
											"begin": 947,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "BALANCE"
										},
										{
											"begin": 932,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 983,
											"name": "CALLER"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "AND"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "ISZERO"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MUL"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MLOAD"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MLOAD"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SUB"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP6"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP9"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP9"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "CALL"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "ADDRESS"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SHL"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP4"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SUB"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP7"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "GAS"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "STATICCALL"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1145,
											"end": 1155,
											"name": "CALLER"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "DUP5"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "AND"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP3"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "AND"
										},
										{
											"begin": 1207,
											"end": 1217,
											"name": "CALLER"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "AND"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1234,
											"end": 1246,
											"name": "DUP4"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "LOG3"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SLOAD"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "EXP"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "SWAP1"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DIV"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "AND"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "DUP2"
										},
										{
											"begin": 1276,
											"end": 1309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "JUMPDEST"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SLOAD"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "EXP"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DIV"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1392,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "DUP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP2"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SUB"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "LOG3"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "DUP1"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "EXP"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "NOT"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "OR"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SSTORE"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1190,
											"end": 1232,
											"name": "PUSH",
											"value": "54AC34E5CE84C501165674782582ADCE2FDDC8F4"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SLOAD"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "EXP"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DIV"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "EXP"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DIV"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "JUMPDEST"
										},
										{
											"begin": 3241,
											"end": 3257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 3260,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "JUMPDEST"
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "SWAP1"
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "POP"
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 3284,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3284,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3324,
											"end": 3333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1048,
											"name": "PUSH",
											"value": "2D12186FBB9F9A8C28B3FFDD4C42920F8539D738"
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3433,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3433,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "SWAP1"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "SLOAD"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "SWAP1"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "EXP"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "SWAP1"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DIV"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "AND"
										},
										{
											"begin": 3454,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MLOAD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP4"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SHL"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MSTORE"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP4"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MSTORE"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP3"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MSTORE"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP3"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MLOAD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP4"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SUB"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP8"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "GAS"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "CALL"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MLOAD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "DUP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "MLOAD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP3"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP2"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3462,
											"name": "POP"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ISZERO"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ISZERO"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "JUMPI"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MLOAD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MSTORE"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ADD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP1"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP1"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ADD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP3"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "SUB"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP3"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MSTORE"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MSTORE"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ADD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP1"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "436F756C64206E6F7420617070726F7665204441492073656C6C000000000000"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MSTORE"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "POP"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "ADD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "SWAP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "POP"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "POP"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "MLOAD"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "DUP1"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "SWAP2"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "SUB"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "SWAP1"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "REVERT"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 3401,
											"end": 3514,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3698,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMPDEST"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SLOAD"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "EXP"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DIV"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1270,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "EXP"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DIV"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 832,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1048,
											"name": "PUSH",
											"value": "2D12186FBB9F9A8C28B3FFDD4C42920F8539D738"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1048,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 3944,
											"end": 3960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 3963,
											"end": 3974,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "JUMPDEST"
										},
										{
											"begin": 3944,
											"end": 3976,
											"name": "SWAP1"
										},
										{
											"begin": 3944,
											"end": 3976,
											"name": "POP"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "SWAP1"
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "POP"
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1048,
											"name": "PUSH",
											"value": "2D12186FBB9F9A8C28B3FFDD4C42920F8539D738"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "SWAP1"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "SLOAD"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "SWAP1"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "EXP"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "SWAP1"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "DIV"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "AND"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP10"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MLOAD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP4"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SHL"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MSTORE"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ADD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP4"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "AND"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MSTORE"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ADD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP3"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MSTORE"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ADD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP3"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MLOAD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP4"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SUB"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP8"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "GAS"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "CALL"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MLOAD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ADD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "DUP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "MLOAD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "ADD"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP3"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP2"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "SWAP1"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4125,
											"end": 4165,
											"name": "POP"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ISZERO"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ISZERO"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "JUMPI"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MLOAD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MSTORE"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ADD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP1"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP1"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ADD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP3"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "SUB"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP3"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MSTORE"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MSTORE"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ADD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP1"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "436F756C64206E6F7420617070726F7665204441492073656C6C000000000000"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MSTORE"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "POP"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "ADD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "SWAP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "POP"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "POP"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "MLOAD"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "DUP1"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "SWAP2"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "SUB"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "SWAP1"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "REVERT"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 4104,
											"end": 4217,
											"name": "JUMPDEST"
										},
										{
											"begin": 4228,
											"end": 4247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "SLOAD"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "EXP"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "DIV"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "AND"
										},
										{
											"begin": 4250,
											"end": 4281,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4281,
											"name": "AND"
										},
										{
											"begin": 4250,
											"end": 4281,
											"name": "PUSH",
											"value": "DDF7E1A7"
										},
										{
											"begin": 4295,
											"end": 4302,
											"name": "DUP10"
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP1"
										},
										{
											"begin": 4346,
											"end": 4354,
											"name": "DUP9"
										},
										{
											"begin": 1006,
											"end": 1048,
											"name": "PUSH",
											"value": "2D12186FBB9F9A8C28B3FFDD4C42920F8539D738"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP7"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SHL"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP7"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP6"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP5"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP4"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP3"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "AND"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MSTORE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP6"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP4"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SUB"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP8"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "GAS"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "CALL"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "DUP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "MLOAD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "ADD"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP3"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP2"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4250,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4228,
											"end": 4389,
											"name": "SWAP1"
										},
										{
											"begin": 4228,
											"end": 4389,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4432,
											"name": "AND"
										},
										{
											"begin": 4421,
											"end": 4432,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "SWAP1"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "SLOAD"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "SWAP1"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "EXP"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "SWAP1"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DIV"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "AND"
										},
										{
											"begin": 4453,
											"end": 4464,
											"name": "DUP4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MLOAD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "AND"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SHL"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MSTORE"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "AND"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "AND"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MSTORE"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP3"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MSTORE"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP3"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MLOAD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP4"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SUB"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP8"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "GAS"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "CALL"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MLOAD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "DUP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "MLOAD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "ADD"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP3"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP2"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "SWAP1"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4421,
											"end": 4465,
											"name": "POP"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "JUMPI"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MLOAD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP3"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "SUB"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP3"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "436F756C64206E6F7420617070726F7665204441492073656C6C000000000000"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MSTORE"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "POP"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "ADD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "SWAP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "POP"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "POP"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "MLOAD"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "SWAP2"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "SUB"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "SWAP1"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "REVERT"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 4400,
											"end": 4517,
											"name": "JUMPDEST"
										},
										{
											"begin": 4565,
											"end": 4582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "SLOAD"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "EXP"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "DIV"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4594,
											"name": "AND"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "AND"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"value": "DDF7E1A7"
										},
										{
											"begin": 4630,
											"end": 4641,
											"name": "DUP4"
										},
										{
											"begin": 4655,
											"end": 4656,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "DUP1"
										},
										{
											"begin": 4685,
											"end": 4693,
											"name": "DUP10"
										},
										{
											"begin": 920,
											"end": 962,
											"name": "PUSH",
											"value": "FF795577D9AC8BD7D90EE22B6C1703490B6512FD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MLOAD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP7"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "AND"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SHL"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP7"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP6"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP5"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP4"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP3"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "AND"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "AND"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MSTORE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP6"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MLOAD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP4"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SUB"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP8"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "GAS"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "CALL"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MLOAD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "DUP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "MLOAD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "ADD"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP3"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP2"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4565,
											"end": 4728,
											"name": "SWAP1"
										},
										{
											"begin": 4565,
											"end": 4728,
											"name": "POP"
										},
										{
											"begin": 4761,
											"end": 4778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "DUP10"
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "DUP12"
										},
										{
											"begin": 4781,
											"end": 4792,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 4781,
											"end": 4792,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "SWAP2"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "SWAP1"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "AND"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 4781,
											"end": 4798,
											"name": "JUMPDEST"
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "SWAP1"
										},
										{
											"begin": 4761,
											"end": 4798,
											"name": "POP"
										},
										{
											"begin": 4829,
											"end": 4838,
											"name": "DUP1"
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP3"
										},
										{
											"begin": 4817,
											"end": 4838,
											"name": "GT"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ISZERO"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ISZERO"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "JUMPI"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MLOAD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MSTORE"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ADD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP1"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP1"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ADD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP3"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "SUB"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP3"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MSTORE"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MSTORE"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ADD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP1"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "446964206E6F742070726F666974000000000000000000000000000000000000"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MSTORE"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "POP"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "ADD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "SWAP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "POP"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "POP"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "MLOAD"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "DUP1"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "SWAP2"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "SUB"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "SWAP1"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "REVERT"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 4809,
											"end": 4857,
											"name": "JUMPDEST"
										},
										{
											"begin": 4868,
											"end": 4920,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 4900,
											"end": 4908,
											"name": "DUP12"
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP3"
										},
										{
											"begin": 4868,
											"end": 4899,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4868,
											"end": 4920,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4920,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 4868,
											"end": 4920,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 3704,
											"end": 4927,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP2"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP5"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SHL"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP5"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "NOT"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4933,
											"end": 5022,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 4933,
											"end": 5022,
											"name": "JUMPDEST"
										},
										{
											"begin": 4979,
											"end": 4986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "PUSH",
											"value": "BB8"
										},
										{
											"begin": 5005,
											"end": 5008,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5005,
											"end": 5015,
											"name": "ADD"
										},
										{
											"begin": 4998,
											"end": 5015,
											"name": "SWAP1"
										},
										{
											"begin": 4998,
											"end": 5015,
											"name": "POP"
										},
										{
											"begin": 4933,
											"end": 5022,
											"name": "SWAP1"
										},
										{
											"begin": 4933,
											"end": 5022,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "JUMPDEST"
										},
										{
											"begin": 1106,
											"end": 1126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "SLOAD"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "EXP"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "DIV"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1146,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1165,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1165,
											"name": "PUSH",
											"value": "ED6FF760"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "MLOAD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SHL"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "MSTORE"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "MLOAD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP4"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SUB"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP7"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "GAS"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "STATICCALL"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "MLOAD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "DUP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "MLOAD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP3"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP2"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1129,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1106,
											"end": 1167,
											"name": "SWAP1"
										},
										{
											"begin": 1106,
											"end": 1167,
											"name": "POP"
										},
										{
											"begin": 1177,
											"end": 1218,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "DUP2"
										},
										{
											"begin": 1200,
											"end": 1208,
											"name": "DUP5"
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5"
										},
										{
											"begin": 1177,
											"end": 1193,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 1177,
											"end": 1218,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1218,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1177,
											"end": 1218,
											"name": "JUMPDEST"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "POP"
										},
										{
											"begin": 1011,
											"end": 1225,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2259,
											"name": "DUP2"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "EQ"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "CODECOPY"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "REVERT"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2368,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SLOAD"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "EXP"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DIV"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "LOG3"
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "EXP"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "NOT"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP4"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "OR"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SSTORE"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ISZERO"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ISZERO"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP2"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "GT"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP3"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ISZERO"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ISZERO"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "JUMPDEST"
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 1356,
											"end": 1380,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "AND"
										},
										{
											"begin": 1344,
											"end": 1352,
											"name": "DUP3"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "AND"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "EQ"
										},
										{
											"begin": 1341,
											"end": 1504,
											"name": "ISZERO"
										},
										{
											"begin": 1341,
											"end": 1504,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1341,
											"end": 1504,
											"name": "JUMPI"
										},
										{
											"begin": 1437,
											"end": 1449,
											"name": "DUP3"
										},
										{
											"begin": 1437,
											"end": 1454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1437,
											"end": 1454,
											"name": "AND"
										},
										{
											"begin": 1461,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "MLOAD"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP1"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "ADD"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "SWAP1"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "MLOAD"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP1"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP4"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "SUB"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP2"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP6"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "DUP8"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "GAS"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "CALL"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "SWAP3"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1437,
											"end": 1473,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "JUMP"
										},
										{
											"begin": 1341,
											"end": 1504,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 1341,
											"end": 1504,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1543,
											"end": 1555,
											"name": "DUP4"
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP3"
										},
										{
											"begin": 1520,
											"end": 1528,
											"name": "DUP5"
										},
										{
											"begin": 1513,
											"end": 1542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1542,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1542,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1513,
											"end": 1542,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "SWAP3"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "SWAP2"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 1513,
											"end": 1565,
											"name": "JUMPDEST"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "JUMPDEST"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "POP"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "POP"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "POP"
										},
										{
											"begin": 1231,
											"end": 1572,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SHL"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "DUP3"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "SHL"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "DUP3"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 520,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 286,
											"end": 520,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 356,
											"end": 398,
											"name": "PUSH",
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 349,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 398,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 286,
											"end": 520,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"E07715594CB39501F0D28B76AF82805EF9F78ECD382671B21067A9D117CABA54": "436f756c64206e6f74207472616e73666572206261636b207468652070726f666974",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"BAT_ADDRESS()": "cfc0ff1b",
							"DAI_ADDRESS()": "2a4c0a1a",
							"UNISWAP_FACTORY_A()": "470f42f5",
							"UNISWAP_FACTORY_B()": "83701599",
							"addressesProvider()": "c72c4d10",
							"exchangeA()": "553e8c1e",
							"exchangeB()": "20fee44b",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"isOwner()": "8f32d59b",
							"lendingPool()": "a59a9973",
							"makeArbitrage(uint256)": "3dd9ce1f",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"swapTokens(address,uint256)": "a114398d",
							"transferOwnership(address)": "f2fde38b",
							"uniswapFactoryA()": "6a09006e",
							"uniswapFactoryB()": "19536b13",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"uniswapFactoryB\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeB\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DAI_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"makeArbitrage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNISWAP_FACTORY_A\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapFactoryA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UNISWAP_FACTORY_B\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BAT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"FlashLoan/Arbitrageur.sol\":\"Arbitrageur\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"FlashLoan/Arbitrageur.sol\":{\"keccak256\":\"0xae6d9a0676dbe1da8d867bd8527a7f24d42d729691ea3133a4b224d80f02a0cb\",\"urls\":[\"bzzr://65ca66bbedd5ff582d47343abd3e785fc6646cf2d59e1edb9974ccb778b7d58b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\":{\"keccak256\":\"0x957a145d0f3cb6499e50283cc3fbe17accd29ad55cf2dcd34b1955f5e61eb8c9\",\"urls\":[\"bzzr://8d1b96b2a308d37e2d9adc96bcbef93c6ecaff15849a179aae2cc03aec8ccdd0\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":{\"keccak256\":\"0xca890f92deae551d0981d401b5fa0a8e66c962ca04ad55da0aa6bd84d1731468\",\"urls\":[\"bzzr://84b8e7ae5399741490c7e61d7d5a3c23c4209199c07f78c240db57a730377a48\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xe17f9e1ddaf7ee794e26ba9a8c41608be00e88948fcd9be03df04abbf1c173a8\",\"urls\":[\"bzzr://364a8a084fd08bd3dbc3688bb22c1774bf03c89c8194e6e054c5b5541a5a8898\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xe5d0f7c5c0d749bfa4253025d5b125a2094981e8190c64c8700edaa26e9942b8\",\"urls\":[\"bzzr://ef3a33591244fc28f94ba7816f33c7e2e7b04c014fb38f926c24a7a94cace71d\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol\":{\"keccak256\":\"0x1f47ef46d14f97d79503efa31b3357b94cecc6667aecda2b76c6f85721820d2d\",\"urls\":[\"bzzr://3e5955b283c6d95fb0b0d52938eb5bdab2c4432764da58fcf2477425066f5f19\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x069805c0a3433470480f865c1848c324542c6efe15507732eaf3b3f765d892f0\",\"urls\":[\"bzzr://a49ab7077af0572c689cd9016a26098bcfcde91f757d4c84d5c6b24973b665a8\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0xb7624d356f9e13f6bd63f38eacae65c9f54fab8a34ae1978644cd6b8090f5c97\",\"urls\":[\"bzzr://26a1566bdcebedcb3ddd7d55ecd91d81c3521d3083505ef4885dc14010d3ed83\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":225:266   */\n  iszero\n    /* \"--CODEGEN--\":222:224   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058200d39018cd16eb15b1aa95a8bebebe7ef5935b810642395b3c6204f5a52013eb30029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c6025600b82828239805160001a6073141515601857fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058200d39018cd16eb15b1aa95a8bebebe7ef5935b810642395b3c6204f5a52013eb30029",
							"opcodes": "PUSH1 0x4C PUSH1 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ ISZERO ISZERO PUSH1 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd CODECOPY ADD DUP13 0xd1 PUSH15 0xB15B1AA95A8BEBEBE7EF5935B81064 0x23 SWAP6 0xb3 0xc6 KECCAK256 0x4f GAS MSTORE ADD RETURNDATACOPY 0xb3 STOP 0x29 ",
							"sourceMap": "589:4708:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058200d39018cd16eb15b1aa95a8bebebe7ef5935b810642395b3c6204f5a52013eb30029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd CODECOPY ADD DUP13 0xd1 PUSH15 0xB15B1AA95A8BEBEBE7EF5935B81064 0x23 SWAP6 0xb3 0xc6 KECCAK256 0x4f GAS MSTORE ADD RETURNDATACOPY 0xb3 STOP 0x29 ",
							"sourceMap": "589:4708:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "100",
								"totalCost": "15300"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 225,
									"end": 266,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058200d39018cd16eb15b1aa95a8bebebe7ef5935b810642395b3c6204f5a52013eb30029",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1268:8091  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2566:2570  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      tag_37\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2601  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2591:2603  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2605:2612  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2614:2620  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2590  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2582:2621  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2638:2642  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2631:2642  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2500:2649  function approve(address spender, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1603:1610  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1629:1641  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1622:1641  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1559:1648  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3196:3200  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3222:3228  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3230:3239  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3241:3247  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3221  _transfer */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3212:3248  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3267:3273  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3285  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3275:3287  _msgSender() */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3327:3333  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3300  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3301:3307  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3308  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3319  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3309:3321  _msgSender() */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3322  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3326  _allowances[sender][_msgSender()].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3289:3378  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3266  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3258:3379  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3396:3400  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3389:3400  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3107:3407  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3882:3886  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3917  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3907:3919  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3921:3928  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3969:3979  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3941  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3952  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3942:3954  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3955  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3956:3963  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3964  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3968  _allowances[_msgSender()][spender].add */\n      tag_54\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3930:3980  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3906  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3898:3981  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3998:4002  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3991:4002  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":3802:4009  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1763:1770  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1798  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1799:1806  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1789:1807  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1782:1807  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":1706:1814  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4581:4585  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4616  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4606:4618  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4620:4627  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4668:4683  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4640  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4651  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4641:4653  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4654  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4655:4662  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4663  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4667  _allowances[_msgSender()][spender].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4629:4725  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4605  _approve */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4597:4726  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4743:4747  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4736:4747  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":4496:4754  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2086:2090  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2122  _msgSender */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2112:2124  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2126:2135  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2137:2143  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2111  _transfer */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2102:2144  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2161:2165  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2154:2165  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2017:2172  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2302:2309  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2339  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2340:2345  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2346  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2347:2354  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2328:2355  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2321:2355  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":2230:2362  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7460:7461  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7448  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7443:7462  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7435:7503  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      iszero\n      iszero\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7540:7541  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7528  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7521:7542  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7513:7581  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      iszero\n      iszero\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7622:7628  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7603  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7604:7609  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7610  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7611:7618  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7619  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7592:7628  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7659:7666  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7652:7657  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7668:7674  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7643:7675  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":7350:7682  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5343:5344  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5331  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5325:5345  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5317:5387  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      iszero\n      iszero\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5426:5427  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5414  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5405:5428  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5397:5468  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      iszero\n      iszero\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5521:5527  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5508  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5509:5515  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5516  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5520  _balances[sender].sub */\n      tag_48\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5499:5570  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5488  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5489:5495  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5496  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5479:5570  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5628:5634  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5612  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5613:5622  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5623  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5627  _balances[recipient].add */\n      tag_54\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5603:5635  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5589  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5590:5599  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5600  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5580:5635  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5667:5676  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5659:5665  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5678:5684  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5650:5685  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":5228:5692  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      iszero\n      iszero\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_77:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa165627a7a72305820f2fe6c1ec5e5ad9e687cbfa9764a964f2f4d6c045a8631f82028f7917716b45e0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610e3d806100136000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce84848461090a565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7c60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8690919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610ded60259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b848461090a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610797576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dc96024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561081f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d346022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610992576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610da46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d116023913960400191505060405180910390fd5b610a8581604051806060016040528060268152602001610d56602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b18816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582901515610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c38578082015181840152602081019050610c1d565b50505050905090810190601f168015610c655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110151515610d06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a72305820f2fe6c1ec5e5ad9e687cbfa9764a964f2f4d6c045a8631f82028f7917716b45e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xE3D DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDED PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDC9 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD34 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDA4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD11 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD56 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB18 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 ISZERO ISZERO PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC38 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC65 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA165627A PUSH27 0x72305820F2FE6C1EC5E5AD9E687CBFA9764A964F2F4D6C045A8631 0xf8 KECCAK256 0x28 0xf7 SWAP2 PUSH24 0x16B45E002900000000000000000000000000000000000000 ",
							"sourceMap": "1268:6823:4:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce84848461090a565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7c60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8690919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610ded60259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b848461090a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610797576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dc96024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561081f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d346022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610992576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610da46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d116023913960400191505060405180910390fd5b610a8581604051806060016040528060268152602001610d56602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bc49092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b18816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582901515610c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c38578082015181840152602081019050610c1d565b50505050905090810190601f168015610c655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110151515610d06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a72305820f2fe6c1ec5e5ad9e687cbfa9764a964f2f4d6c045a8631f82028f7917716b45e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x90A JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDED PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDC9 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD34 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDA4 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD11 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA85 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD56 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB18 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC86 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 ISZERO ISZERO PUSH2 0xC73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC38 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC1D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC65 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA165627A PUSH27 0x72305820F2FE6C1EC5E5AD9E687CBFA9764A964F2F4D6C045A8631 0xf8 KECCAK256 0x28 0xf7 SWAP2 PUSH24 0x16B45E002900000000000000000000000000000000000000 ",
							"sourceMap": "1268:6823:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1268:6823:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2500:149:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:300:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3802:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3802:207:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1706:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4496:258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4496:258:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2017:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2017:155:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2230:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2500:149;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;1559:89::-;1603:7;1629:12;;1622:19;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;:34;3956:7;3930:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3898:8;:83::i;:::-;3998:4;3991:11;;3802:207;;;;:::o;1706:108::-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;4496:258::-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;:34;4655:7;4629:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4597:8;:129::i;:::-;4743:4;4736:11;;4496:258;;;;:::o;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;2230:132::-;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;788:96:1:-;833:15;867:10;860:17;;788:96;:::o;7350:332:4:-;7460:1;7443:19;;:5;:19;;;;7435:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:1;7521:21;;:7;:21;;;;7513:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:6;7592:11;:18;7604:5;7592:18;;;;;;;;;;;;;;;:27;7611:7;7592:27;;;;;;;;;;;;;;;:36;;;;7659:7;7643:32;;7652:5;7643:32;;;7668:6;7643:32;;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;1732:187:2:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "729000",
								"executionCost": "736",
								"totalCost": "729736"
							},
							"external": {
								"allowance(address,address)": "787",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "596",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "436",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "MSTORE"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "DUP1"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "CODECOPY"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 8091,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820f2fe6c1ec5e5ad9e687cbfa9764a964f2f4d6c045a8631f82028f7917716b45e0029",
									".code": [
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "MSTORE"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "LT"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "SHR"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "GT"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMP"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "EQ"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPI"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "DUP1"
										},
										{
											"begin": 1268,
											"end": 8091,
											"name": "REVERT"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "AND"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ISZERO"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MSTORE"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "ADD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "MLOAD"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "DUP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SUB"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP1"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "RETURN"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "RETURN"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "AND"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "RETURN"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "AND"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ISZERO"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MSTORE"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "ADD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "MLOAD"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "DUP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SUB"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "RETURN"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP3"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MSTORE"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "ADD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "MLOAD"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SUB"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "RETURN"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "AND"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ISZERO"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MSTORE"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "ADD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "MLOAD"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "DUP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SUB"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP1"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "RETURN"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ISZERO"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MSTORE"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SUB"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "RETURN"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "AND"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MSTORE"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "ADD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "MLOAD"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "DUP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SUB"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "RETURN"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMPDEST"
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2591,
											"end": 2601,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "JUMPDEST"
										},
										{
											"begin": 2605,
											"end": 2612,
											"name": "DUP5"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP5"
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2582,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP3"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "SWAP2"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "POP"
										},
										{
											"begin": 2500,
											"end": 2649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1622,
											"end": 1641,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1648,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMPDEST"
										},
										{
											"begin": 3196,
											"end": 3200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP5"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP5"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP5"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3212,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3267,
											"end": 3273,
											"name": "DUP5"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3275,
											"end": 3287,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "DUP6"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MLOAD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "CODECOPY"
										},
										{
											"begin": 3289,
											"end": 3300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP12"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3308,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "DUP2"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "MSTORE"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "ADD"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "KECCAK256"
										},
										{
											"begin": 3289,
											"end": 3322,
											"name": "SLOAD"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3289,
											"end": 3326,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP3"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP2"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "SWAP1"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "AND"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3289,
											"end": 3378,
											"name": "JUMPDEST"
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3258,
											"end": 3379,
											"name": "JUMPDEST"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP4"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "SWAP3"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3407,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3907,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3907,
											"end": 3919,
											"name": "JUMPDEST"
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP5"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP6"
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3942,
											"end": 3952,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "JUMPDEST"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3955,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "DUP10"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "KECCAK256"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SLOAD"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP1"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "AND"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPDEST"
										},
										{
											"begin": 3898,
											"end": 3906,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3898,
											"end": 3981,
											"name": "JUMPDEST"
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "SWAP1"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP3"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "SWAP2"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "POP"
										},
										{
											"begin": 3802,
											"end": 4009,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP4"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "KECCAK256"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "SLOAD"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP2"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMPDEST"
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4606,
											"end": 4616,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4668,
											"end": 4683,
											"name": "DUP6"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MLOAD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "CODECOPY"
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "JUMPDEST"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4654,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "DUP11"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "DUP2"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "MSTORE"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "ADD"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "KECCAK256"
										},
										{
											"begin": 4629,
											"end": 4663,
											"name": "SLOAD"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4629,
											"end": 4667,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP3"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP2"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "SWAP1"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "AND"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4629,
											"end": 4725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4597,
											"end": 4605,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4597,
											"end": 4726,
											"name": "JUMPDEST"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP3"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "SWAP2"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "POP"
										},
										{
											"begin": 4496,
											"end": 4754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMPDEST"
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "JUMPDEST"
										},
										{
											"begin": 2126,
											"end": 2135,
											"name": "DUP5"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "DUP5"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2102,
											"end": 2144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP1"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2172,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMPDEST"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2339,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP5"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2346,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP4"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "AND"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "DUP2"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "MSTORE"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "ADD"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "KECCAK256"
										},
										{
											"begin": 2328,
											"end": 2355,
											"name": "SLOAD"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "SWAP1"
										},
										{
											"begin": 2321,
											"end": 2355,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP3"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "SWAP2"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2362,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMPDEST"
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7448,
											"name": "DUP4"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "AND"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "EQ"
										},
										{
											"begin": 7443,
											"end": 7462,
											"name": "ISZERO"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ISZERO"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ISZERO"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPI"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "CODECOPY"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "REVERT"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7435,
											"end": 7503,
											"name": "JUMPDEST"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7528,
											"name": "DUP3"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "EQ"
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "ISZERO"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ISZERO"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ISZERO"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPI"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP3"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MSTORE"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "CODECOPY"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "ADD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "POP"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "MLOAD"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "DUP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP2"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SUB"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "SWAP1"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "REVERT"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 7513,
											"end": 7581,
											"name": "JUMPDEST"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP1"
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "DUP6"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7611,
											"end": 7618,
											"name": "DUP5"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "AND"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "MSTORE"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "ADD"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7619,
											"name": "KECCAK256"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "DUP2"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SWAP1"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "SSTORE"
										},
										{
											"begin": 7592,
											"end": 7628,
											"name": "POP"
										},
										{
											"begin": 7659,
											"end": 7666,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7652,
											"end": 7657,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "AND"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP4"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP3"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MSTORE"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "ADD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "POP"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "MLOAD"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "DUP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP2"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SUB"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "SWAP1"
										},
										{
											"begin": 7643,
											"end": 7675,
											"name": "LOG3"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "POP"
										},
										{
											"begin": 7350,
											"end": 7682,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMPDEST"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5331,
											"name": "DUP4"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "AND"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "EQ"
										},
										{
											"begin": 5325,
											"end": 5345,
											"name": "ISZERO"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ISZERO"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ISZERO"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPI"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP3"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MSTORE"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "CODECOPY"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "ADD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "MLOAD"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP2"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SUB"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "SWAP1"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "REVERT"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5317,
											"end": 5387,
											"name": "JUMPDEST"
										},
										{
											"begin": 5426,
											"end": 5427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5414,
											"name": "DUP3"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "EQ"
										},
										{
											"begin": 5405,
											"end": 5428,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPI"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "CODECOPY"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "SWAP1"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "REVERT"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5397,
											"end": 5468,
											"name": "JUMPDEST"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MLOAD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "CODECOPY"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP1"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP8"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "DUP2"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "MSTORE"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "ADD"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "KECCAK256"
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "SLOAD"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5499,
											"end": 5520,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "AND"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5499,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP1"
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP6"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "AND"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "MSTORE"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "ADD"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5496,
											"name": "KECCAK256"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "SSTORE"
										},
										{
											"begin": 5479,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP1"
										},
										{
											"begin": 5613,
											"end": 5622,
											"name": "DUP6"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "DUP2"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "MSTORE"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "ADD"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "KECCAK256"
										},
										{
											"begin": 5603,
											"end": 5623,
											"name": "SLOAD"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5603,
											"end": 5627,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP2"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "AND"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5603,
											"end": 5635,
											"name": "JUMPDEST"
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP1"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP5"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "AND"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "MSTORE"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "ADD"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5600,
											"name": "KECCAK256"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "DUP2"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SWAP1"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "SSTORE"
										},
										{
											"begin": 5580,
											"end": 5635,
											"name": "POP"
										},
										{
											"begin": 5667,
											"end": 5676,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP4"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP3"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MSTORE"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "ADD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "POP"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "MLOAD"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "DUP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP2"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SUB"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5650,
											"end": 5685,
											"name": "LOG3"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5228,
											"end": 5692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":225:266   */\n  iszero\n    /* \"--CODEGEN--\":222:224   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820ada67972f1d6faffa8a6d2863168cc796d55028d94eed91ead892636ad0083770029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c6025600b82828239805160001a6073141515601857fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ada67972f1d6faffa8a6d2863168cc796d55028d94eed91ead892636ad0083770029",
							"opcodes": "PUSH1 0x4C PUSH1 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ ISZERO ISZERO PUSH1 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad 0xa6 PUSH26 0x72F1D6FAFFA8A6D2863168CC796D55028D94EED91EAD892636AD STOP DUP4 PUSH24 0x2900000000000000000000000000000000000000000000 ",
							"sourceMap": "574:3189:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ada67972f1d6faffa8a6d2863168cc796d55028d94eed91ead892636ad0083770029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xad 0xa6 PUSH26 0x72F1D6FAFFA8A6D2863168CC796D55028D94EED91EAD892636AD STOP DUP4 PUSH24 0x2900000000000000000000000000000000000000000000 ",
							"sourceMap": "574:3189:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "100",
								"totalCost": "15300"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 225,
									"end": 266,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ada67972f1d6faffa8a6d2863168cc796d55028d94eed91ead892636ad0083770029",
									".code": [
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":225:266   */\n  iszero\n    /* \"--CODEGEN--\":222:224   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820973ae8ea8fb79a5f95f3bc0d7a047821337062a2f607b4dd2036d195b32340940029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c6025600b82828239805160001a6073141515601857fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820973ae8ea8fb79a5f95f3bc0d7a047821337062a2f607b4dd2036d195b32340940029",
							"opcodes": "PUSH1 0x4C PUSH1 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ ISZERO ISZERO PUSH1 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP8 GASPRICE 0xe8 0xea DUP16 0xb7 SWAP11 0x5f SWAP6 RETURN 0xbc 0xd PUSH27 0x47821337062A2F607B4DD2036D195B32340940029000000000000 ",
							"sourceMap": "93:2861:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820973ae8ea8fb79a5f95f3bc0d7a047821337062a2f607b4dd2036d195b32340940029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP8 GASPRICE 0xe8 0xea DUP16 0xb7 SWAP11 0x5f SWAP6 RETURN 0xbc 0xd PUSH27 0x47821337062A2F607B4DD2036D195B32340940029000000000000 ",
							"sourceMap": "93:2861:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "100",
								"totalCost": "15300"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toPayable(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 225,
									"end": 266,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820973ae8ea8fb79a5f95f3bc0d7a047821337062a2f607b4dd2036d195b32340940029",
									".code": [
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "ADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "EQ"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "MSTORE"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "DUP1"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol": {
				"IUniswapExchange": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwapOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "ethToTokenTransferOutput",
							"outputs": [
								{
									"name": "eth_sold",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								}
							],
							"name": "getTokenToEthOutputPrice",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "min_liquidity",
									"type": "uint256"
								},
								{
									"name": "max_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"name": "getEthToTokenOutputPrice",
							"outputs": [
								{
									"name": "eth_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token_addr",
									"type": "address"
								}
							],
							"name": "setup",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwapOutput",
							"outputs": [
								{
									"name": "eth_sold",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_eth",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "tokenToEthTransferInput",
							"outputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"name": "getTokenToEthInputPrice",
							"outputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_eth",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwapInput",
							"outputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factoryAddress",
							"outputs": [
								{
									"name": "factory",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens_sold",
									"type": "uint256"
								},
								{
									"name": "max_eth_sold",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "exchange_addr",
									"type": "address"
								}
							],
							"name": "tokenToExchangeTransferOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "min_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "ethToTokenTransferInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens_sold",
									"type": "uint256"
								},
								{
									"name": "max_eth_sold",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "token_addr",
									"type": "address"
								}
							],
							"name": "tokenToTokenSwapOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_tokens_bought",
									"type": "uint256"
								},
								{
									"name": "min_eth_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "exchange_addr",
									"type": "address"
								}
							],
							"name": "tokenToExchangeSwapInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "eth_sold",
									"type": "uint256"
								}
							],
							"name": "getEthToTokenInputPrice",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "eth_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "tokenToEthTransferOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_tokens_bought",
									"type": "uint256"
								},
								{
									"name": "min_eth_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "token_addr",
									"type": "address"
								}
							],
							"name": "tokenToTokenSwapInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens_sold",
									"type": "uint256"
								},
								{
									"name": "max_eth_sold",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "exchange_addr",
									"type": "address"
								}
							],
							"name": "tokenToExchangeSwapOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_tokens_bought",
									"type": "uint256"
								},
								{
									"name": "min_eth_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "exchange_addr",
									"type": "address"
								}
							],
							"name": "tokenToExchangeTransferInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "min_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwapInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								},
								{
									"name": "max_tokens_sold",
									"type": "uint256"
								},
								{
									"name": "max_eth_sold",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "token_addr",
									"type": "address"
								}
							],
							"name": "tokenToTokenTransferOutput",
							"outputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "tokens_sold",
									"type": "uint256"
								},
								{
									"name": "min_tokens_bought",
									"type": "uint256"
								},
								{
									"name": "min_eth_bought",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "token_addr",
									"type": "address"
								}
							],
							"name": "tokenToTokenTransferInput",
							"outputs": [
								{
									"name": "tokens_bought",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								},
								{
									"name": "min_eth",
									"type": "uint256"
								},
								{
									"name": "min_tokens",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256,uint256)": "422f1043",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"ethToTokenSwapInput(uint256,uint256)": "f39b5b9b",
							"ethToTokenSwapOutput(uint256,uint256)": "6b1d4db7",
							"ethToTokenTransferInput(uint256,uint256,address)": "ad65d76d",
							"ethToTokenTransferOutput(uint256,uint256,address)": "0b573638",
							"factoryAddress()": "966dae0e",
							"getEthToTokenInputPrice(uint256)": "cd7724c3",
							"getEthToTokenOutputPrice(uint256)": "59e94862",
							"getTokenToEthInputPrice(uint256)": "95b68fe7",
							"getTokenToEthOutputPrice(uint256)": "2640f62c",
							"name()": "06fdde03",
							"removeLiquidity(uint256,uint256,uint256,uint256)": "f88bf15a",
							"setup(address)": "66d38203",
							"symbol()": "95d89b41",
							"tokenAddress()": "9d76ea58",
							"tokenToEthSwapInput(uint256,uint256,uint256)": "95e3c50b",
							"tokenToEthSwapOutput(uint256,uint256,uint256)": "013efd8b",
							"tokenToEthTransferInput(uint256,uint256,uint256,address)": "7237e031",
							"tokenToEthTransferOutput(uint256,uint256,uint256,address)": "d4e4841d",
							"tokenToExchangeSwapInput(uint256,uint256,uint256,uint256,address)": "b1cb43bf",
							"tokenToExchangeSwapOutput(uint256,uint256,uint256,uint256,address)": "ea650c7d",
							"tokenToExchangeTransferInput(uint256,uint256,uint256,uint256,address,address)": "ec384a3e",
							"tokenToExchangeTransferOutput(uint256,uint256,uint256,uint256,address,address)": "981a1327",
							"tokenToTokenSwapInput(uint256,uint256,uint256,uint256,address)": "ddf7e1a7",
							"tokenToTokenSwapOutput(uint256,uint256,uint256,uint256,address)": "b040d545",
							"tokenToTokenTransferInput(uint256,uint256,uint256,uint256,address,address)": "f552d91b",
							"tokenToTokenTransferOutput(uint256,uint256,uint256,uint256,address,address)": "f3c0efe9",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwapOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ethToTokenTransferOutput\",\"outputs\":[{\"name\":\"eth_sold\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"}],\"name\":\"getTokenToEthOutputPrice\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min_liquidity\",\"type\":\"uint256\"},{\"name\":\"max_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"name\":\"getEthToTokenOutputPrice\",\"outputs\":[{\"name\":\"eth_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_addr\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwapOutput\",\"outputs\":[{\"name\":\"eth_sold\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_eth\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"tokenToEthTransferInput\",\"outputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"name\":\"getTokenToEthInputPrice\",\"outputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_eth\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwapInput\",\"outputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factoryAddress\",\"outputs\":[{\"name\":\"factory\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens_sold\",\"type\":\"uint256\"},{\"name\":\"max_eth_sold\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"exchange_addr\",\"type\":\"address\"}],\"name\":\"tokenToExchangeTransferOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ethToTokenTransferInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens_sold\",\"type\":\"uint256\"},{\"name\":\"max_eth_sold\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"token_addr\",\"type\":\"address\"}],\"name\":\"tokenToTokenSwapOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_tokens_bought\",\"type\":\"uint256\"},{\"name\":\"min_eth_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"exchange_addr\",\"type\":\"address\"}],\"name\":\"tokenToExchangeSwapInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth_sold\",\"type\":\"uint256\"}],\"name\":\"getEthToTokenInputPrice\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"eth_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"tokenToEthTransferOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_tokens_bought\",\"type\":\"uint256\"},{\"name\":\"min_eth_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"token_addr\",\"type\":\"address\"}],\"name\":\"tokenToTokenSwapInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens_sold\",\"type\":\"uint256\"},{\"name\":\"max_eth_sold\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"exchange_addr\",\"type\":\"address\"}],\"name\":\"tokenToExchangeSwapOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_tokens_bought\",\"type\":\"uint256\"},{\"name\":\"min_eth_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"exchange_addr\",\"type\":\"address\"}],\"name\":\"tokenToExchangeTransferInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwapInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"},{\"name\":\"max_tokens_sold\",\"type\":\"uint256\"},{\"name\":\"max_eth_sold\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"token_addr\",\"type\":\"address\"}],\"name\":\"tokenToTokenTransferOutput\",\"outputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokens_sold\",\"type\":\"uint256\"},{\"name\":\"min_tokens_bought\",\"type\":\"uint256\"},{\"name\":\"min_eth_bought\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"token_addr\",\"type\":\"address\"}],\"name\":\"tokenToTokenTransferInput\",\"outputs\":[{\"name\":\"tokens_bought\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"min_eth\",\"type\":\"uint256\"},{\"name\":\"min_tokens\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\":\"IUniswapExchange\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\":{\"keccak256\":\"0x957a145d0f3cb6499e50283cc3fbe17accd29ad55cf2dcd34b1955f5e61eb8c9\",\"urls\":[\"bzzr://8d1b96b2a308d37e2d9adc96bcbef93c6ecaff15849a179aae2cc03aec8ccdd0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IUniswapFactory": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"name": "exchange",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"name": "createExchange",
							"outputs": [
								{
									"name": "exchange",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "exchangeTemplate",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "template",
									"type": "address"
								}
							],
							"name": "initializeFactory",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "exchange",
									"type": "address"
								}
							],
							"name": "getToken",
							"outputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenCount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getTokenWithId",
							"outputs": [
								{
									"name": "token",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createExchange(address)": "1648f38e",
							"exchangeTemplate()": "1c2bbd18",
							"getExchange(address)": "06f2bf62",
							"getToken(address)": "59770438",
							"getTokenWithId(uint256)": "aa65a6c0",
							"initializeFactory(address)": "538a3f0e",
							"tokenCount()": "9f181b5e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"name\":\"exchange\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createExchange\",\"outputs\":[{\"name\":\"exchange\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeTemplate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"template\",\"type\":\"address\"}],\"name\":\"initializeFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenWithId\",\"outputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\":\"IUniswapFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol\":{\"keccak256\":\"0x957a145d0f3cb6499e50283cc3fbe17accd29ad55cf2dcd34b1955f5e61eb8c9\",\"urls\":[\"bzzr://8d1b96b2a308d37e2d9adc96bcbef93c6ecaff15849a179aae2cc03aec8ccdd0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol": {
				"EthAddressLib": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":127:522  library EthAddressLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":225:266   */\n  iszero\n    /* \"--CODEGEN--\":222:224   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":127:522  library EthAddressLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820c6b7dbfa1d0c55149921651f8d6a0ae74a139d68b9382c3a4411d3359b9003730029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c6025600b82828239805160001a6073141515601857fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820c6b7dbfa1d0c55149921651f8d6a0ae74a139d68b9382c3a4411d3359b9003730029",
							"opcodes": "PUSH1 0x4C PUSH1 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ ISZERO ISZERO PUSH1 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 0xb7 0xdb STATICCALL SAR 0xc SSTORE EQ SWAP10 0x21 PUSH6 0x1F8D6A0AE74A SGT SWAP14 PUSH9 0xB9382C3A4411D3359B SWAP1 SUB PUSH20 0x29000000000000000000000000000000000000 ",
							"sourceMap": "127:395:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;225:41;222:2;;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820c6b7dbfa1d0c55149921651f8d6a0ae74a139d68b9382c3a4411d3359b9003730029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc6 0xb7 0xdb STATICCALL SAR 0xc SSTORE EQ SWAP10 0x21 PUSH6 0x1F8D6A0AE74A SGT SWAP14 PUSH9 0xB9382C3A4411D3359B SWAP1 SUB PUSH20 0x29000000000000000000000000000000000000 ",
							"sourceMap": "127:395:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "100",
								"totalCost": "15300"
							},
							"internal": {
								"ethAddress()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 522,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 522,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 225,
									"end": 266,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "ISZERO"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c6b7dbfa1d0c55149921651f8d6a0ae74a139d68b9382c3a4411d3359b9003730029",
									".code": [
										{
											"begin": 127,
											"end": 522,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "ADDRESS"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "EQ"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "MSTORE"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 127,
											"end": 522,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":\"EthAddressLib\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":{\"keccak256\":\"0xca890f92deae551d0981d401b5fa0a8e66c962ca04ad55da0aa6bd84d1731468\",\"urls\":[\"bzzr://84b8e7ae5399741490c7e61d7d5a3c23c4209199c07f78c240db57a730377a48\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol": {
				"FlashLoanReceiverBase": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_fee",
									"type": "uint256"
								},
								{
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_addressProvider",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addressProvider\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":\"FlashLoanReceiverBase\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol\":{\"keccak256\":\"0xca890f92deae551d0981d401b5fa0a8e66c962ca04ad55da0aa6bd84d1731468\",\"urls\":[\"bzzr://84b8e7ae5399741490c7e61d7d5a3c23c4209199c07f78c240db57a730377a48\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xe17f9e1ddaf7ee794e26ba9a8c41608be00e88948fcd9be03df04abbf1c173a8\",\"urls\":[\"bzzr://364a8a084fd08bd3dbc3688bb22c1774bf03c89c8194e6e054c5b5541a5a8898\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xe5d0f7c5c0d749bfa4253025d5b125a2094981e8190c64c8700edaa26e9942b8\",\"urls\":[\"bzzr://ef3a33591244fc28f94ba7816f33c7e2e7b04c014fb38f926c24a7a94cace71d\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x069805c0a3433470480f865c1848c324542c6efe15507732eaf3b3f765d892f0\",\"urls\":[\"bzzr://a49ab7077af0572c689cd9016a26098bcfcde91f757d4c84d5c6b24973b665a8\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0xb7624d356f9e13f6bd63f38eacae65c9f54fab8a34ae1978644cd6b8090f5c97\",\"urls\":[\"bzzr://26a1566bdcebedcb3ddd7d55ecd91d81c3521d3083505ef4885dc14010d3ed83\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol": {
				"IFlashLoanReceiver": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_fee",
									"type": "uint256"
								},
								{
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "implement this interface to develop a flashloan-compatible flashLoanReceiver contract*",
						"methods": {},
						"title": "IFlashLoanReceiver interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeOperation(address,uint256,uint256,bytes)": "ee872558"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"implement this interface to develop a flashloan-compatible flashLoanReceiver contract*\",\"methods\":{},\"title\":\"IFlashLoanReceiver interface\"},\"userdoc\":{\"methods\":{},\"notice\":\"Interface for the Aave fee IFlashLoanReceiver.\"}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol\":\"IFlashLoanReceiver\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xe5d0f7c5c0d749bfa4253025d5b125a2094981e8190c64c8700edaa26e9942b8\",\"urls\":[\"bzzr://ef3a33591244fc28f94ba7816f33c7e2e7b04c014fb38f926c24a7a94cace71d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "Interface for the Aave fee IFlashLoanReceiver."
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol": {
				"ILendingPool": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_collateral",
									"type": "address"
								},
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_user",
									"type": "address"
								},
								{
									"name": "_purchaseAmount",
									"type": "uint256"
								},
								{
									"name": "_receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserReserveData",
							"outputs": [
								{
									"name": "currentATokenBalance",
									"type": "uint256"
								},
								{
									"name": "currentUnderlyingBalance",
									"type": "uint256"
								},
								{
									"name": "currentBorrowBalance",
									"type": "uint256"
								},
								{
									"name": "principalBorrowBalance",
									"type": "uint256"
								},
								{
									"name": "borrowRateMode",
									"type": "uint256"
								},
								{
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"name": "originationFee",
									"type": "uint256"
								},
								{
									"name": "variableBorrowIndex",
									"type": "uint256"
								},
								{
									"name": "lastUpdateTimestamp",
									"type": "uint256"
								},
								{
									"name": "usageAsCollateralEnabled",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"name": "totalLiquidity",
									"type": "uint256"
								},
								{
									"name": "availableLiquidity",
									"type": "uint256"
								},
								{
									"name": "totalBorrowsFixed",
									"type": "uint256"
								},
								{
									"name": "totalBorrowsVariable",
									"type": "uint256"
								},
								{
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"name": "fixedBorrowRate",
									"type": "uint256"
								},
								{
									"name": "averageFixedBorrowRate",
									"type": "uint256"
								},
								{
									"name": "utilizationRate",
									"type": "uint256"
								},
								{
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"name": "variableBorrowIndex",
									"type": "uint256"
								},
								{
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"name": "lastUpdateTimestamp",
									"type": "uint40"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "getReserveConfigurationData",
							"outputs": [
								{
									"name": "ltv",
									"type": "uint256"
								},
								{
									"name": "liquidationThreshold",
									"type": "uint256"
								},
								{
									"name": "liquidationDiscount",
									"type": "uint256"
								},
								{
									"name": "interestRateStrategyAddress",
									"type": "address"
								},
								{
									"name": "usageAsCollateralEnabled",
									"type": "bool"
								},
								{
									"name": "borrowingEnabled",
									"type": "bool"
								},
								{
									"name": "fixedBorrowRateEnabled",
									"type": "bool"
								},
								{
									"name": "isActive",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_receiver",
									"type": "address"
								},
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_user",
									"type": "address"
								}
							],
							"name": "rebalanceFixedBorrowRate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_user",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "redeemUnderlying",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"name": "totalLiquidityETH",
									"type": "uint256"
								},
								{
									"name": "totalCollateralETH",
									"type": "uint256"
								},
								{
									"name": "totalBorrowsETH",
									"type": "uint256"
								},
								{
									"name": "availableBorrowsETH",
									"type": "uint256"
								},
								{
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"name": "ltv",
									"type": "uint256"
								},
								{
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_interestRateMode",
									"type": "uint256"
								},
								{
									"name": "_referralCode",
									"type": "uint16"
								}
							],
							"name": "borrow",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_reserve",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								},
								{
									"name": "_referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"borrow(address,uint256,uint256,uint16)": "c858f5f9",
							"deposit(address,uint256,uint16)": "d2d0e066",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"getReserveConfigurationData(address)": "3e150141",
							"getReserveData(address)": "35ea6a75",
							"getReserves()": "0902f1ac",
							"getUserAccountData(address)": "bf92857c",
							"getUserReserveData(address,address)": "28dd2d01",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"rebalanceFixedBorrowRate(address,address)": "66f8cd93",
							"redeemUnderlying(address,address,uint256)": "935642cf",
							"repay(address,uint256,address)": "5ceae9c4",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"swapBorrowRateMode(address)": "48ca1300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_collateral\",\"type\":\"address\"},{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_purchaseAmount\",\"type\":\"uint256\"},{\"name\":\"_receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReserveData\",\"outputs\":[{\"name\":\"currentATokenBalance\",\"type\":\"uint256\"},{\"name\":\"currentUnderlyingBalance\",\"type\":\"uint256\"},{\"name\":\"currentBorrowBalance\",\"type\":\"uint256\"},{\"name\":\"principalBorrowBalance\",\"type\":\"uint256\"},{\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"name\":\"originationFee\",\"type\":\"uint256\"},{\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"name\":\"usageAsCollateralEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"name\":\"availableLiquidity\",\"type\":\"uint256\"},{\"name\":\"totalBorrowsFixed\",\"type\":\"uint256\"},{\"name\":\"totalBorrowsVariable\",\"type\":\"uint256\"},{\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"name\":\"fixedBorrowRate\",\"type\":\"uint256\"},{\"name\":\"averageFixedBorrowRate\",\"type\":\"uint256\"},{\"name\":\"utilizationRate\",\"type\":\"uint256\"},{\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"},{\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"getReserveConfigurationData\",\"outputs\":[{\"name\":\"ltv\",\"type\":\"uint256\"},{\"name\":\"liquidationThreshold\",\"type\":\"uint256\"},{\"name\":\"liquidationDiscount\",\"type\":\"uint256\"},{\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"name\":\"usageAsCollateralEnabled\",\"type\":\"bool\"},{\"name\":\"borrowingEnabled\",\"type\":\"bool\"},{\"name\":\"fixedBorrowRateEnabled\",\"type\":\"bool\"},{\"name\":\"isActive\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"rebalanceFixedBorrowRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"name\":\"totalLiquidityETH\",\"type\":\"uint256\"},{\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"name\":\"totalBorrowsETH\",\"type\":\"uint256\"},{\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"name\":\"ltv\",\"type\":\"uint256\"},{\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_interestRateMode\",\"type\":\"uint256\"},{\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"borrow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserve\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol\":{\"keccak256\":\"0x1f47ef46d14f97d79503efa31b3357b94cecc6667aecda2b76c6f85721820d2d\",\"urls\":[\"bzzr://3e5955b283c6d95fb0b0d52938eb5bdab2c4432764da58fcf2477425066f5f19\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolParametersProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_lendingPoolCore",
									"type": "address"
								}
							],
							"name": "setLendingPoolCoreImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_feeProvider",
									"type": "address"
								}
							],
							"name": "setFeeProviderImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolDataProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolManager",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingRateOracle",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_tokenDistributor",
									"type": "address"
								}
							],
							"name": "setTokenDistributor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_lendingPoolManager",
									"type": "address"
								}
							],
							"name": "setLendingPoolManager",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "setLendingPoolLiquidationManager",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_priceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolLiquidationManager",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_pool",
									"type": "address"
								}
							],
							"name": "setLendingPoolImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_lendingRateOracle",
									"type": "address"
								}
							],
							"name": "setLendingRateOracle",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolConfigurator",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_parametersProvider",
									"type": "address"
								}
							],
							"name": "setLendingPoolParametersProviderImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_provider",
									"type": "address"
								}
							],
							"name": "setLendingPoolDataProviderImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_configurator",
									"type": "address"
								}
							],
							"name": "setLendingPoolConfiguratorImpl",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getLendingPoolCore",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getTokenDistributor",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getFeeProvider",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ILendingPoolAddressesProvider interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFeeProvider()": "fbeefc3c",
							"getLendingPool()": "0261bf8b",
							"getLendingPoolConfigurator()": "85c858b1",
							"getLendingPoolCore()": "ed6ff760",
							"getLendingPoolDataProvider()": "2f58b80d",
							"getLendingPoolLiquidationManager()": "5834eb9a",
							"getLendingPoolManager()": "33128d59",
							"getLendingPoolParametersProvider()": "04061d8e",
							"getLendingRateOracle()": "3618abba",
							"getPriceOracle()": "fca513a8",
							"getTokenDistributor()": "ee891296",
							"setFeeProviderImpl(address)": "2a62c636",
							"setLendingPoolConfiguratorImpl(address)": "c12542df",
							"setLendingPoolCoreImpl(address)": "1c827204",
							"setLendingPoolDataProviderImpl(address)": "bfedc103",
							"setLendingPoolImpl(address)": "5aef021f",
							"setLendingPoolLiquidationManager(address)": "44ce375b",
							"setLendingPoolManager(address)": "40fdcadc",
							"setLendingPoolParametersProviderImpl(address)": "a5eface2",
							"setLendingRateOracle(address)": "820d1274",
							"setPriceOracle(address)": "530e784f",
							"setTokenDistributor(address)": "38280e6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolParametersProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lendingPoolCore\",\"type\":\"address\"}],\"name\":\"setLendingPoolCoreImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeProvider\",\"type\":\"address\"}],\"name\":\"setFeeProviderImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolDataProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenDistributor\",\"type\":\"address\"}],\"name\":\"setTokenDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lendingPoolManager\",\"type\":\"address\"}],\"name\":\"setLendingPoolManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolLiquidationManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolLiquidationManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_parametersProvider\",\"type\":\"address\"}],\"name\":\"setLendingPoolParametersProviderImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"setLendingPoolDataProviderImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLendingPoolCore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenDistributor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFeeProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{},\"title\":\"ILendingPoolAddressesProvider interface\"},\"userdoc\":{\"methods\":{},\"notice\":\"provides the interface to fetch the LendingPoolCore address\"}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x069805c0a3433470480f865c1848c324542c6efe15507732eaf3b3f765d892f0\",\"urls\":[\"bzzr://a49ab7077af0572c689cd9016a26098bcfcde91f757d4c84d5c6b24973b665a8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {},
						"notice": "provides the interface to fetch the LendingPoolCore address"
					}
				}
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol": {
				"Withdrawable": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":383:1257  contract Withdrawable is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:715  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:728  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:730  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":749:758  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":806:815  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":802:803  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":664:823  constructor () internal {... */\n  pop\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":383:1257  contract Withdrawable is Ownable {... */\n  jump(tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":383:1257  contract Withdrawable is Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":383:1257  contract Withdrawable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":383:1257  contract Withdrawable is Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51cff8d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_21\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_16\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":779:796  uint assetBalance */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":486:487  0 */\n      dup1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:832  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:823  _assetAddress */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":810:832  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_24\n      jumpi\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":848:860  address self */\n      0x00\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":871:875  this */\n      address\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":848:876  address self = address(this) */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":947:951  self */\n      dup1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":947:959  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":932:959  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:983  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:992  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":993:1005  assetBalance */\n      dup4\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":973:1006  msg.sender.transfer(assetBalance) */\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_26)\n    tag_24:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1058:1071  _assetAddress */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1082  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1091:1095  this */\n      address\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1052:1097  ERC20(_assetAddress).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1037:1097  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1170  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_30\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1145:1155  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1157:1169  assetBalance */\n      dup3\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1117:1130  _assetAddress */\n      dup5\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1144  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_31\n      swap1\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1111:1170  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":806:1181  if (_assetAddress == ETHER) {... */\n    tag_26:\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1219:1232  _assetAddress */\n      dup2\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1207:1217  msg.sender */\n      caller\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1234:1246  assetBalance */\n      dup4\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":1195:1247  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1159:1160  _ */\n      pop\n        /* \"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":711:1254  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_16\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1801  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1814  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":937:944  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":963:969  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":956:969  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1290:1294  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1329:1335  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      tag_38\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1323  _msgSender */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      jump\t// in\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1306:1335  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_16\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      iszero\n      iszero\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2061:2069  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2060  _transferOwnership */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2271:2272  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2259  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2243:2316  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      iszero\n      iszero\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2360:2368  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2388:2396  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2385  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2396  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      iszero\n      iszero\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_56:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_56)\n    tag_57:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_59)\n        /* \"--CODEGEN--\":16:47   */\n    tag_60:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_59:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      iszero\n      iszero\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3548  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_62\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      iszero\n      iszero\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1004:1020  bytes32 codehash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1049  bytes32 accountHash */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1118  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1219:1226  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      extcodehash\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1195:1227  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1258:1269  accountHash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1254  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1285:1288  0x0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1281  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa165627a7a72305820f3e9921ee8a01131d3a8d69f459b4ab8a1bdff31644854dbc93d9869596d90010029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b610b4a806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806351cff8d91461005c578063715018a6146100a05780638da5cb5b146100aa5780638f32d59b146100f4578063f2fde38b14610116575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061015a565b005b6100a86103c7565b005b6100b2610502565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fc61052b565b604051808215151515815260200191505060405180910390f35b6101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610589565b005b61016261052b565b15156101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102785760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610271573d6000803e3d6000fd5b505061035e565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d602081101561031f57600080fd5b8101908080519060200190929190505050905061035d33828473ffffffffffffffffffffffffffffffffffffffff166106119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103cf61052b565b1515610443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661056d6106e2565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61059161052b565b1515610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61060e816106ea565b50565b6106dd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610830565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610772576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610acf6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61084f8273ffffffffffffffffffffffffffffffffffffffff16610a83565b15156108c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310151561091457805182526020820191506020810190506020830392506108ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610976576040519150601f19603f3d011682016040523d82523d6000602084013e61097b565b606091505b50915091508115156109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115610a7d57808060200190516020811015610a1457600080fd5b81019080805190602001909291905050501515610a7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610af5602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015610ac557506000801b8214155b9250505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a72305820f3e9921ee8a01131d3a8d69f459b4ab8a1bdff31644854dbc93d9869596d90010029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x14 PUSH2 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xBF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB4A DUP1 PUSH2 0xCE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x35E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x35D CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x611 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56D PUSH2 0x6E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60E DUP2 PUSH2 0x6EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xACF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x84F DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x914 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x97B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xA7D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAF5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A165627A7A72305820F3E9921EE8 LOG0 GT BALANCE 0xd3 0xa8 0xd6 SWAP16 GASLIMIT SWAP12 0x4a 0xb8 LOG1 0xbd SELFDESTRUCT BALANCE PUSH5 0x4854DBC93D SWAP9 PUSH10 0x596D9001002900000000 ",
							"sourceMap": "383:874:14:-;;;698:17:3;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;383:874:14;;788:96:1;833:15;867:10;860:17;;788:96;:::o;383:874:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806351cff8d91461005c578063715018a6146100a05780638da5cb5b146100aa5780638f32d59b146100f4578063f2fde38b14610116575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061015a565b005b6100a86103c7565b005b6100b2610502565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fc61052b565b604051808215151515815260200191505060405180910390f35b6101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610589565b005b61016261052b565b15156101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102785760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610271573d6000803e3d6000fd5b505061035e565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d602081101561031f57600080fd5b8101908080519060200190929190505050905061035d33828473ffffffffffffffffffffffffffffffffffffffff166106119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103cf61052b565b1515610443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661056d6106e2565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61059161052b565b1515610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61060e816106ea565b50565b6106dd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610830565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610772576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610acf6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61084f8273ffffffffffffffffffffffffffffffffffffffff16610a83565b15156108c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310151561091457805182526020820191506020810190506020830392506108ef565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610976576040519150601f19603f3d011682016040523d82523d6000602084013e61097b565b606091505b50915091508115156109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115610a7d57808060200190516020811015610a1457600080fd5b81019080805190602001909291905050501515610a7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610af5602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015610ac557506000801b8214155b9250505091905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a165627a7a72305820f3e9921ee8a01131d3a8d69f459b4ab8a1bdff31644854dbc93d9869596d90010029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB2 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x271 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x35E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x35D CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x611 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x56D PUSH2 0x6E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x52B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60E DUP2 PUSH2 0x6EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x830 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xACF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x84F DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x914 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x97B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xA7D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ISZERO ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAF5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735361666545524332303A204552433230 KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A165627A7A72305820F3E9921EE8 LOG0 GT BALANCE 0xd3 0xa8 0xd6 SWAP16 GASLIMIT SWAP12 0x4a 0xb8 LOG1 0xbd SELFDESTRUCT BALANCE PUSH5 0x4854DBC93D SWAP9 PUSH10 0x596D9001002900000000 ",
							"sourceMap": "383:874:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:874:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;711:543;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:543:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:3;;;:::i;:::-;;899:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;711:543:14;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:17:14;486:1;810:22;;:13;:22;;;806:375;;;848:12;871:4;848:28;;947:4;:12;;;932:27;;973:10;:19;;:33;993:12;973:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;973:33:14;806:375;;;;1058:13;1052:30;;;1091:4;1052:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1052:45:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1052:45:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1052:45:14;;;;;;;;;;;;;;;;1037:60;;1111:59;1145:10;1157:12;1117:13;1111:33;;;;:59;;;;;:::i;:::-;806:375;1219:13;1195:52;;1207:10;1195:52;;;1234:12;1195:52;;;;;;;;;;;;;;;;;;1159:1:3;711:543:14;:::o;1684:137:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;899:77::-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;1970:107::-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;662:174:6:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:6;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:6;744:18;:85::i;:::-;662:174;;;:::o;788:96:1:-;833:15;867:10;860:17;;788:96;:::o;2178:225:3:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;2666:1095:6:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:6;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:6;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:6;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;686:610:7:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "578000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isOwner()": "557",
								"owner()": "483",
								"renounceOwnership()": "22538",
								"transferOwnership(address)": "infinite",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "MSTORE"
								},
								{
									"begin": 698,
									"end": 715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "SHL"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "SHR"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMPDEST"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "EXP"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "NOT"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP4"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "OR"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 806,
									"end": 815,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 802,
									"end": 803,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SUB"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "LOG3"
								},
								{
									"begin": 664,
									"end": 823,
									"name": "POP"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "JUMP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMPDEST"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 867,
									"end": 877,
									"name": "CALLER"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "POP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "JUMPDEST"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "DUP1"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "CODECOPY"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 383,
									"end": 1257,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820f3e9921ee8a01131d3a8d69f459b4ab8a1bdff31644854dbc93d9869596d90010029",
									".code": [
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "MSTORE"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "POP"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "LT"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "SHR"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "51CFF8D9"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "EQ"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 1257,
											"name": "REVERT"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP3"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP2"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "STOP"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "STOP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP3"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MSTORE"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "ADD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SUB"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "RETURN"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP3"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SUB"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "RETURN"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "AND"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP3"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "STOP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 779,
											"end": 796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 486,
											"end": 487,
											"name": "DUP1"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 823,
											"name": "DUP3"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 832,
											"name": "EQ"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "ISZERO"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPI"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 871,
											"end": 875,
											"name": "ADDRESS"
										},
										{
											"begin": 848,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 848,
											"end": 876,
											"name": "POP"
										},
										{
											"begin": 947,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "BALANCE"
										},
										{
											"begin": 932,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 983,
											"name": "CALLER"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 973,
											"end": 992,
											"name": "AND"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 993,
											"end": 1005,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "ISZERO"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MUL"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MLOAD"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "MLOAD"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SUB"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP6"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP9"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "DUP9"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "CALL"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "SWAP4"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMP"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1082,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "ADDRESS"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SHL"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MSTORE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP4"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SUB"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP7"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "GAS"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "STATICCALL"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP3"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1037,
											"end": 1097,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1097,
											"name": "POP"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1145,
											"end": 1155,
											"name": "CALLER"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3"
										},
										{
											"begin": 1117,
											"end": 1130,
											"name": "DUP5"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "AND"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1111,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP3"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1111,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 806,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "AND"
										},
										{
											"begin": 1207,
											"end": 1217,
											"name": "CALLER"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "AND"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1234,
											"end": 1246,
											"name": "DUP4"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP3"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MSTORE"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "ADD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "POP"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "MLOAD"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SUB"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "SWAP1"
										},
										{
											"begin": 1195,
											"end": 1247,
											"name": "LOG3"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "POP"
										},
										{
											"begin": 711,
											"end": 1254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "DUP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP2"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SUB"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "LOG3"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "DUP1"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "EXP"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "NOT"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "OR"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SSTORE"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SLOAD"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "EXP"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DIV"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DUP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "EXP"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DIV"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ISZERO"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP2"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP5"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SHL"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP5"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "NOT"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2259,
											"name": "DUP2"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "EQ"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "CODECOPY"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "REVERT"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2368,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SLOAD"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "EXP"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DIV"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "LOG3"
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "EXP"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "NOT"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP4"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "OR"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SSTORE"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ISZERO"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ISZERO"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ISZERO"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP2"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "GT"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP3"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ISZERO"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ISZERO"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SHL"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "DUP3"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "SHL"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "DUP3"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzzr://d2ff5aadcb697bc27ca3b0f6c40b4998e8cf0a1bd0f761d1df6d5981777841ae\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0xb7624d356f9e13f6bd63f38eacae65c9f54fab8a34ae1978644cd6b8090f5c97\",\"urls\":[\"bzzr://26a1566bdcebedcb3ddd7d55ecd91d81c3521d3083505ef4885dc14010d3ed83\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol:33:13: Warning: Return value of low-level calls not used.\n            _destination.call.value(_amount)(\"\");\n            ^----------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1473,
					"file": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol",
					"start": 1437
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "FlashLoan/Arbitrageur.sol:75:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function swapTokens(address _to_token, uint256 _amount) external {\n                        ^---------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2975,
					"file": "FlashLoan/Arbitrageur.sol",
					"start": 2958
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "FlashLoan/Arbitrageur.sol:80:9: Warning: Unused local variable.\n        uint256 deadline = getDeadline();\n        ^--------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3257,
					"file": "FlashLoan/Arbitrageur.sol",
					"start": 3241
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "FlashLoan/Arbitrageur.sol:83:9: Warning: Unused local variable.\n        ERC20 bat = ERC20(BAT_ADDRESS);\n        ^-------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3333,
					"file": "FlashLoan/Arbitrageur.sol",
					"start": 3324
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "FlashLoan/Arbitrageur.sol:105:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata _params\n        ^--------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3834,
					"file": "FlashLoan/Arbitrageur.sol",
					"start": 3812
				},
				"type": "Warning"
			}
		],
		"sources": {
			"FlashLoan/Arbitrageur.sol": {
				"ast": {
					"absolutePath": "FlashLoan/Arbitrageur.sol",
					"exportedSymbols": {
						"Arbitrageur": [
							272
						]
					},
					"id": 273,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol",
							"file": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 1888,
							"src": "25:101:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol",
							"file": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 2094,
							"src": "127:92:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol",
							"file": "https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 1756,
							"src": "220:103:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "307835303642304232434632304641413866333861344532423532344545343365316634343538436335",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "831:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x506B0B2CF20FAA8f38a4E2B524EE43e1f4458Cc5"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												],
												"id": 6,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "823:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": "address"
											},
											"id": 8,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "823:51:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											}
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 5,
										"name": "FlashLoanReceiverBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1887,
										"src": "801:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FlashLoanReceiverBase_$1887",
											"typeString": "contract FlashLoanReceiverBase"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "801:74:0"
								}
							],
							"contractDependencies": [
								1901,
								2293,
								1887,
								299,
								604
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272,
								1887,
								2293,
								604,
								299,
								1901
							],
							"name": "Arbitrageur",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 12,
									"name": "DAI_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "882:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "882:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "920:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 15,
									"name": "BAT_ADDRESS",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "968:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307832643132313836466262396639613843323842334666644434633432393230663835333944373338",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1006:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x2d12186Fbb9f9a8C28B3FfdD4c42920f8539D738"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 18,
									"name": "UNISWAP_FACTORY_A",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1054:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1054:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307845436336433035343237313061304546303739363644376431423130664133386262623836353233",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1098:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xECc6C0542710a0EF07966D7d1B10fA38bbb86523"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 21,
									"name": "UNISWAP_FACTORY_B",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1146:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1146:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307835344163333465356345383443353031313635363734373832353832414463653246446463384634",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1190:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x54Ac34e5cE84C501165674782582ADce2FDdc8F4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "lendingPool",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1239:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPool_$2093",
										"typeString": "contract ILendingPool"
									},
									"typeName": {
										"contractScope": null,
										"id": 22,
										"name": "ILendingPool",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2093,
										"src": "1239:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPool_$2093",
											"typeString": "contract ILendingPool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"name": "exchangeA",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1276:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
										"typeString": "contract IUniswapExchange"
									},
									"typeName": {
										"contractScope": null,
										"id": 24,
										"name": "IUniswapExchange",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1755,
										"src": "1276:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
											"typeString": "contract IUniswapExchange"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"name": "exchangeB",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1315:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
										"typeString": "contract IUniswapExchange"
									},
									"typeName": {
										"contractScope": null,
										"id": 26,
										"name": "IUniswapExchange",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1755,
										"src": "1315:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
											"typeString": "contract IUniswapExchange"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "uniswapFactoryA",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1354:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
										"typeString": "contract IUniswapFactory"
									},
									"typeName": {
										"contractScope": null,
										"id": 28,
										"name": "IUniswapFactory",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1413,
										"src": "1354:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
											"typeString": "contract IUniswapFactory"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "uniswapFactoryB",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1398:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
										"typeString": "contract IUniswapFactory"
									},
									"typeName": {
										"contractScope": null,
										"id": 30,
										"name": "IUniswapFactory",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1413,
										"src": "1398:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
											"typeString": "contract IUniswapFactory"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1464:824:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "uniswapFactoryA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1515:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
															"typeString": "contract IUniswapFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 36,
																"name": "UNISWAP_FACTORY_A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1549:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 35,
															"name": "IUniswapFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1533:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapFactory_$1413_$",
																"typeString": "type(contract IUniswapFactory)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1533:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
															"typeString": "contract IUniswapFactory"
														}
													},
													"src": "1515:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
														"typeString": "contract IUniswapFactory"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1515:52:0"
											},
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"name": "exchangeA_address",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "1611:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1611:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 46,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 44,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1667:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 42,
															"name": "uniswapFactoryA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1639:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
																"typeString": "contract IUniswapFactory"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getExchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "1639:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "exchangeA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1723:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
															"typeString": "contract IUniswapExchange"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 49,
																"name": "exchangeA_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "1752:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 48,
															"name": "IUniswapExchange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "1735:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapExchange_$1755_$",
																"typeString": "type(contract IUniswapExchange)"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1735:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
															"typeString": "contract IUniswapExchange"
														}
													},
													"src": "1723:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
														"typeString": "contract IUniswapExchange"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1723:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 53,
														"name": "uniswapFactoryB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1821:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
															"typeString": "contract IUniswapFactory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 55,
																"name": "UNISWAP_FACTORY_B",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1855:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 54,
															"name": "IUniswapFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1839:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapFactory_$1413_$",
																"typeString": "type(contract IUniswapFactory)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1839:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
															"typeString": "contract IUniswapFactory"
														}
													},
													"src": "1821:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
														"typeString": "contract IUniswapFactory"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1821:52:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"name": "exchangeB_address",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "1917:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 59,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1917:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 63,
															"name": "BAT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1973:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 61,
															"name": "uniswapFactoryB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1945:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapFactory_$1413",
																"typeString": "contract IUniswapFactory"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getExchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1393,
														"src": "1945:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1917:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "exchangeB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2028:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
															"typeString": "contract IUniswapExchange"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 68,
																"name": "exchangeB_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "2057:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 67,
															"name": "IUniswapExchange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "2040:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapExchange_$1755_$",
																"typeString": "type(contract IUniswapExchange)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2040:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
															"typeString": "contract IUniswapExchange"
														}
													},
													"src": "2028:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
														"typeString": "contract IUniswapExchange"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "2028:47:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"name": "lendingPoolAddress",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "2119:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 72,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2119:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 74,
															"name": "addressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "2148:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLendingPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "2148:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2119:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 78,
														"name": "lendingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2235:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$2093",
															"typeString": "contract ILendingPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 80,
																"name": "lendingPoolAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2262:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 79,
															"name": "ILendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "2249:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPool_$2093_$",
																"typeString": "type(contract ILendingPool)"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2249:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPool_$2093",
															"typeString": "contract ILendingPool"
														}
													},
													"src": "2235:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPool_$2093",
														"typeString": "contract ILendingPool"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2235:46:0"
											}
										]
									},
									"documentation": null,
									"id": 85,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1464:0:0"
									},
									"scope": 272,
									"src": "1443:845:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "2392:423:0",
										"statements": [
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "2402:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 92,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2402:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "",
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2422:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2402:22:0"
											},
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"name": "dai",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "2435:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1009",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 96,
															"name": "ERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1009,
															"src": "2435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2453:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "2447:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1009",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2435:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 106,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "2505:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrageur_$272",
																		"typeString": "contract Arbitrageur"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrageur_$272",
																		"typeString": "contract Arbitrageur"
																	}
																],
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2497:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 108,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2512:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 110,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2533:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "lendingPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2475:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPool_$2093",
																"typeString": "contract ILendingPool"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flashLoan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1989,
														"src": "2475:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2475:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2475:63:0"
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"name": "profit",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "2604:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 118,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "2643:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrageur_$272",
																		"typeString": "contract Arbitrageur"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrageur_$272",
																		"typeString": "contract Arbitrageur"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2635:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2635:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 115,
															"name": "dai",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2621:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 648,
														"src": "2621:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2621:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2604:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 125,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2308,
																		"src": "2729:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2729:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 127,
																	"name": "profit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "2741:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "dai",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 97,
																	"src": "2716:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1009",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 667,
																"src": "2716:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2716:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f756c64206e6f74207472616e73666572206261636b207468652070726f666974",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2762:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e07715594cb39501f0d28b76af82805ef9f78ecd382671b21067a9d117caba54",
																"typeString": "literal_string \"Could not transfer back the profit\""
															},
															"value": "Could not transfer back the profit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e07715594cb39501f0d28b76af82805ef9f78ecd382671b21067a9d117caba54",
																"typeString": "literal_string \"Could not transfer back the profit\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "2695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2695:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2695:113:0"
											}
										]
									},
									"documentation": null,
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 90,
											"modifierName": {
												"argumentTypes": null,
												"id": 89,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 537,
												"src": "2382:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2382:9:0"
										}
									],
									"name": "makeArbitrage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2359:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2358:16:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2392:0:0"
									},
									"scope": 272,
									"src": "2336:479:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "3003:695:0",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"name": "deadline",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "3241:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "getDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3260:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3260:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3241:32:0"
											},
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"name": "dai",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "3284:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1009",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 145,
															"name": "ERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1009,
															"src": "3284:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "3302:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3296:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3296:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1009",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3284:30:0"
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"name": "bat",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "3324:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1009",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 151,
															"name": "ERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1009,
															"src": "3324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 154,
															"name": "BAT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3342:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 153,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3336:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1009",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3324:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 161,
																			"name": "exchangeA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "3442:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		],
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3434:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3434:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 163,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "3454:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 158,
																	"name": "dai",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3422:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1009",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 702,
																"src": "3422:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3422:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f756c64206e6f7420617070726f7665204441492073656c6c",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3476:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															},
															"value": "Could not approve DAI sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "3401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3401:113:0"
											}
										]
									},
									"documentation": null,
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "_to_token",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2958:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2977:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2957:36:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3003:0:0"
									},
									"scope": 272,
									"src": "2938:760:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3850:1077:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"name": "deadline",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3944:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "getDeadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3963:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3963:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3944:32:0"
											},
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"name": "dai",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3987:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1009",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 185,
															"name": "ERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1009,
															"src": "3987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 188,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "4005:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3999:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3999:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1009",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3987:30:0"
											},
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"name": "bat",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "4027:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1009",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"contractScope": null,
															"id": 191,
															"name": "ERC20",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1009,
															"src": "4027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1009",
																"typeString": "contract ERC20"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 194,
															"name": "BAT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "4045:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 193,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4039:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4039:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1009",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4027:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 201,
																			"name": "exchangeA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4145:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		],
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4137:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 203,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "4157:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 198,
																	"name": "dai",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "4125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1009",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 702,
																"src": "4125:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4125:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f756c64206e6f7420617070726f7665204441492073656c6c",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4179:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															},
															"value": "Could not approve DAI sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "4104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4104:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "4104:113:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"name": "tokenBought",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "4228:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 212,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4316:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4331:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"id": 215,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4346:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 216,
															"name": "BAT_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "4368:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 210,
															"name": "exchangeA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4250:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																"typeString": "contract IUniswapExchange"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenToTokenSwapInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1580,
														"src": "4250:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,address) external returns (uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4250:139:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4228:161:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 223,
																			"name": "exchangeB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "4441:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																				"typeString": "contract IUniswapExchange"
																			}
																		],
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4433:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4433:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 225,
																	"name": "tokenBought",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4453:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "bat",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "4421:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1009",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 702,
																"src": "4421:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4421:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f756c64206e6f7420617070726f7665204441492073656c6c",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4479:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															},
															"value": "Could not approve DAI sell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_99ead86cf8bb3f5899ef80ffde7d18492a4d6df983d158caebeb424d8bf193fb",
																"typeString": "literal_string \"Could not approve DAI sell\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "4400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4400:117:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4400:117:0"
											},
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"name": "daiBought",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "4565:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 230,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 234,
															"name": "tokenBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "4630:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4655:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4670:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"argumentTypes": null,
															"id": 237,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "4685:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 238,
															"name": "DAI_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "4707:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 232,
															"name": "exchangeB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4585:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapExchange_$1755",
																"typeString": "contract IUniswapExchange"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenToTokenSwapInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1580,
														"src": "4585:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,address) external returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:143:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4565:163:0"
											},
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"name": "totalDebt",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "4761:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 247,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 245,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4793:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 243,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "4781:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4761:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "daiBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "4817:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "totalDebt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4829:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4817:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "446964206e6f742070726f666974",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4840:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00e9b0cf4cce60fc2229abc0cdb74357d1c602a1c20e97badcb56163ddcee7f6",
																"typeString": "literal_string \"Did not profit\""
															},
															"value": "Did not profit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00e9b0cf4cce60fc2229abc0cdb74357d1c602a1c20e97badcb56163ddcee7f6",
																"typeString": "literal_string \"Did not profit\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "4809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4809:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "4809:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 256,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4900:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 257,
															"name": "totalDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4910:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "transferFundsBackToPoolInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "4868:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "4868:52:0"
											}
										]
									},
									"documentation": null,
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3739:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3790:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3812:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3812:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3729:111:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:0:0"
									},
									"scope": 272,
									"src": "3704:1223:0",
									"stateMutability": "nonpayable",
									"superFunction": 1900,
									"visibility": "external"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4988:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "5005:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33303030",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5011:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000_by_1",
															"typeString": "int_const 3000"
														},
														"value": "3000"
													},
													"src": "5005:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 265,
												"id": 269,
												"nodeType": "Return",
												"src": "4998:17:0"
											}
										]
									},
									"documentation": null,
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeadline",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4953:2:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4979:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4978:9:0"
									},
									"scope": 272,
									"src": "4933:89:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 273,
							"src": "773:4251:0"
						}
					],
					"src": "0:5024:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							299
						]
					},
					"id": 300,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 274,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "726:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:1"
									},
									"scope": 299,
									"src": "702:27:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "850:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 283,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "867:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "867:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 282,
												"id": 285,
												"nodeType": "Return",
												"src": "860:17:1"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "833:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:17:1"
									},
									"scope": 299,
									"src": "788:96:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "947:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 292,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2336,
													"src": "957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$299",
														"typeString": "contract Context"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "957:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 294,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "1097:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1097:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 291,
												"id": 296,
												"nodeType": "Return",
												"src": "1090:15:1"
											}
										]
									},
									"documentation": null,
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "933:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:14:1"
									},
									"scope": 299,
									"src": "890:222:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 300,
							"src": "525:589:1"
						}
					],
					"src": "0:1115:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							486
						]
					},
					"id": 487,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 301,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "901:109:2",
										"statements": [
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "911:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "951:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "938:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 323,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "1002:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 324,
												"nodeType": "Return",
												"src": "995:8:2"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "847:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "858:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 486,
									"src": "834:176:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "1341:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 336,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "1362:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "1365:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 335,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															342,
															369
														],
														"referencedDeclaration": 369,
														"src": "1358:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 340,
												"nodeType": "Return",
												"src": "1351:50:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1287:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1298:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1332:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:2"
									},
									"scope": 486,
									"src": "1274:134:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1827:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1845:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "1850:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 357,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "1853:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "1837:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:2"
											},
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "1876:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 362,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "1888:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1892:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 361,
													"src": "1911:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 352,
												"id": 367,
												"nodeType": "Return",
												"src": "1904:8:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1745:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1756:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1767:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1818:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:2"
									},
									"scope": 486,
									"src": "1732:187:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2226:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 378,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2458:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 384,
												"nodeType": "IfStatement",
												"src": "2454:45:2",
												"trueBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "2466:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 377,
															"id": 382,
															"nodeType": "Return",
															"src": "2480:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "2509:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2521:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2525:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 392,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "2544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 393,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "2548:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "2553:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "2536:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2610:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 377,
												"id": 401,
												"nodeType": "Return",
												"src": "2603:8:2"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2172:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2183:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:2"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2217:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:2"
									},
									"scope": 486,
									"src": "2159:459:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "3140:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 413,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3161:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3164:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 412,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															419,
															446
														],
														"referencedDeclaration": 446,
														"src": "3157:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 417,
												"nodeType": "Return",
												"src": "3150:46:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3086:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3097:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3131:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:2"
									},
									"scope": 486,
									"src": "3073:130:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "3813:243:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 431,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "3897:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 434,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3904:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "3889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:2"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "3927:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3939:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "3943:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "4048:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 444,
												"nodeType": "Return",
												"src": "4041:8:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3731:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3742:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3753:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "3804:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:2"
									},
									"scope": 486,
									"src": "3718:338:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "4567:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 456,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4588:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 457,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4591:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 455,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															462,
															485
														],
														"referencedDeclaration": 485,
														"src": "4584:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 454,
												"id": 460,
												"nodeType": "Return",
												"src": "4577:44:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4513:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4524:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4558:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:2"
									},
									"scope": 486,
									"src": "4500:128:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "5227:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5245:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5253:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "5237:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "5283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "5287:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 483,
												"nodeType": "Return",
												"src": "5276:12:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5145:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5156:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5167:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5218:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:2"
									},
									"scope": 486,
									"src": "5132:163:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "589:4708:2"
						}
					],
					"src": "0:5298:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							604
						]
					},
					"id": 605,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 489,
							"nodeType": "ImportDirective",
							"scope": 605,
							"sourceUnit": 300,
							"src": "25:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 490,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 299,
										"src": "435:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$299",
											"typeString": "contract Context"
										}
									},
									"id": 491,
									"nodeType": "InheritanceSpecifier",
									"src": "435:7:3"
								}
							],
							"contractDependencies": [
								299
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 604,
							"linearizedBaseContracts": [
								604,
								299
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 493,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 604,
									"src": "449:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 492,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 499,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "505:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "536:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "504:57:3"
									},
									"src": "478:84:3"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "688:135:3",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "698:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 502,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "698:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 504,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "718:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 507,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "740:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 508,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "749:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "740:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "740:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "802:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "794:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 511,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "773:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "768:48:3"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 519,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:3"
									},
									"scope": 604,
									"src": "664:159:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "946:30:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 524,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "963:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "956:13:3"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:3"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "937:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "936:9:3"
									},
									"scope": 604,
									"src": "899:77:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "1085:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "1103:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "1095:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "1095:54:3"
											},
											{
												"id": 535,
												"nodeType": "PlaceholderStatement",
												"src": "1159:1:3"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 537,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:3"
									},
									"src": "1064:103:3",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "1296:46:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 542,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1313:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1313:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 544,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1329:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1313:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 541,
												"id": 546,
												"nodeType": "Return",
												"src": "1306:29:3"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1290:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:6:3"
									},
									"scope": 604,
									"src": "1250:92:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1730:91:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 554,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1766:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1782:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1774:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1774:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 553,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1745:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "1740:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 560,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1795:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1804:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1804:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1795:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1795:19:3"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 551,
											"modifierName": {
												"argumentTypes": null,
												"id": 550,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 537,
												"src": "1720:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:3"
									},
									"scope": 604,
									"src": "1684:137:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "2032:45:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 575,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "2061:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 574,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "2042:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "2042:28:3"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 572,
											"modifierName": {
												"argumentTypes": null,
												"id": 571,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 537,
												"src": "2022:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2022:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1997:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1996:18:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:3"
									},
									"scope": 604,
									"src": "1970:107:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2233:170:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 585,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2251:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2271:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2263:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2263:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2251:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2275:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "2243:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "2243:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "2352:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "2360:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 593,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2331:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "EmitStatement",
												"src": "2326:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 598,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2379:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 599,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2388:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2379:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "2379:17:3"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2206:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:18:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:0:3"
									},
									"scope": 604,
									"src": "2178:225:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 605,
							"src": "415:1990:3"
						}
					],
					"src": "0:2406:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1009
						]
					},
					"id": 1010,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 606,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 607,
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 300,
							"src": "25:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 608,
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1079,
							"src": "57:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 609,
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 487,
							"src": "80:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 610,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 299,
										"src": "1286:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$299",
											"typeString": "contract Context"
										}
									},
									"id": 611,
									"nodeType": "InheritanceSpecifier",
									"src": "1286:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 612,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1078,
										"src": "1295:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1078",
											"typeString": "contract IERC20"
										}
									},
									"id": 613,
									"nodeType": "InheritanceSpecifier",
									"src": "1295:6:4"
								}
							],
							"contractDependencies": [
								1078,
								299
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20Mintable}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 1009,
							"linearizedBaseContracts": [
								1009,
								1078,
								299
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 616,
									"libraryName": {
										"contractScope": null,
										"id": 614,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 486,
										"src": "1314:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$486",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1308:27:4",
									"typeName": {
										"id": 615,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1327:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 620,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1009,
									"src": "1341:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 619,
										"keyType": {
											"id": 617,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1350:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1341:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 618,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 626,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1009,
									"src": "1394:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 625,
										"keyType": {
											"id": 621,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 624,
											"keyType": {
												"id": 622,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1423:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1414:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 623,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 628,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1009,
									"src": "1470:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1470:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "1612:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 633,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 628,
													"src": "1629:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 634,
												"nodeType": "Return",
												"src": "1622:19:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:2:4"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "1603:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1602:9:4"
									},
									"scope": 1009,
									"src": "1559:89:4",
									"stateMutability": "view",
									"superFunction": 1016,
									"visibility": "public"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1772:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1789:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 642,
												"id": 646,
												"nodeType": "Return",
												"src": "1782:25:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1724:17:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1763:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:9:4"
									},
									"scope": 1009,
									"src": "1706:108:4",
									"stateMutability": "view",
									"superFunction": 1023,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "2092:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 658,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2112:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2112:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 660,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "2126:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 661,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "2137:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "2102:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2102:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2161:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 656,
												"id": 665,
												"nodeType": "Return",
												"src": "2154:11:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2035:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2054:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:35:4"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "2086:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2086:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2085:6:4"
									},
									"scope": 1009,
									"src": "2017:155:4",
									"stateMutability": "nonpayable",
									"superFunction": 1032,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "2311:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 676,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "2328:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 678,
														"indexExpression": {
															"argumentTypes": null,
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2340:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2328:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 680,
													"indexExpression": {
														"argumentTypes": null,
														"id": 679,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2347:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2328:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 681,
												"nodeType": "Return",
												"src": "2321:34:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2249:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2264:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2248:32:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "2302:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2301:9:4"
									},
									"scope": 1009,
									"src": "2230:132:4",
									"stateMutability": "view",
									"superFunction": 1041,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2572:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 693,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2591:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 695,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2605:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2614:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2582:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "2582:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2638:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 700,
												"nodeType": "Return",
												"src": "2631:11:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2517:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2534:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2516:33:4"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2566:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2566:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2565:6:4"
									},
									"scope": 1009,
									"src": "2500:149:4",
									"stateMutability": "nonpayable",
									"superFunction": 1050,
									"visibility": "public"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "3202:205:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 714,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "3222:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 715,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "3230:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 713,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3212:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "3212:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 720,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "3267:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 721,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "3275:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3275:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 730,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "3327:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3335:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 723,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "3289:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 725,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 724,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "3301:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3289:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 728,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 726,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "3309:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3309:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3289:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 369,
																"src": "3289:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3289:89:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3258:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3258:121:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "3258:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3396:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 712,
												"id": 736,
												"nodeType": "Return",
												"src": "3389:11:4"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3129:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3145:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3164:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3128:51:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "3196:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3196:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3195:6:4"
									},
									"scope": 1009,
									"src": "3107:300:4",
									"stateMutability": "nonpayable",
									"superFunction": 1061,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3888:121:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 748,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "3907:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3907:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "3921:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 758,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "3969:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "3930:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 754,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 752,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 287,
																				"src": "3942:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3942:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3930:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 756,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 755,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "3956:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3930:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 326,
																"src": "3930:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3930:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "3898:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3898:83:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "3898:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3998:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 746,
												"id": 763,
												"nodeType": "Return",
												"src": "3991:11:4"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3829:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3846:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3828:37:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "3882:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3882:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3881:6:4"
									},
									"scope": 1009,
									"src": "3802:207:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "4587:167:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 775,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "4606:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4606:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 777,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4620:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 785,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "4668:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4685:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 778,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4629:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 781,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 779,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 287,
																				"src": "4641:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4641:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4629:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 783,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 782,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "4655:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4629:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 369,
																"src": "4629:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4629:96:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "4597:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4597:129:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "4597:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4743:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 791,
												"nodeType": "Return",
												"src": "4736:11:4"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4523:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4540:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4540:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4522:42:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4581:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4581:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4580:6:4"
									},
									"scope": 1009,
									"src": "4496:258:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "5307:385:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 803,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "5325:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5343:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5335:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5335:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5325:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5347:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "5317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:70:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "5317:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 812,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "5405:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5426:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5418:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5418:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5405:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5430:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 811,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "5397:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:71:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "5397:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 820,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5479:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 822,
														"indexExpression": {
															"argumentTypes": null,
															"id": 821,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5489:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5479:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 827,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "5521:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5529:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "5499:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 825,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 824,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "5509:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5499:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "5499:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5499:71:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5479:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "5479:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 832,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5580:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"argumentTypes": null,
															"id": 833,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5590:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5580:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 839,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "5628:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 835,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "5603:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 837,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 836,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "5613:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5603:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 326,
															"src": "5603:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5603:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5580:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "5580:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 844,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5659:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 845,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5667:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 846,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5678:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5650:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5650:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "EmitStatement",
												"src": "5645:40:4"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5247:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5263:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5282:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5246:51:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5307:0:4"
									},
									"scope": 1009,
									"src": "5228:464:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "6019:245:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "6037:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6056:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6048:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6048:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6037:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6060:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "6029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6029:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "6029:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 866,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "6105:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 869,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "6137:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 867,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "6120:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 326,
															"src": "6120:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6120:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6105:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "6105:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 873,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6154:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 875,
														"indexExpression": {
															"argumentTypes": null,
															"id": 874,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "6164:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6154:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 880,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "6198:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 876,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6175:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 878,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 877,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "6185:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6175:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 326,
															"src": "6175:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6175:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6154:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "6154:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6237:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6229:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6229:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 888,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "6241:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "6250:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "6220:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "6215:42:4"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "5977:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "5994:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5976:33:4"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6019:0:4"
									},
									"scope": 1009,
									"src": "5962:302:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "6640:285:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 901,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "6658:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6677:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6669:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6669:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6658:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6681:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "6650:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6650:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "6650:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 909,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6728:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 911,
														"indexExpression": {
															"argumentTypes": null,
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "6738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6728:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 916,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "6772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6780:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 912,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6749:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 914,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 913,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "6759:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6749:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6749:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6749:68:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6728:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "6728:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 921,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "6827:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "6859:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 922,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "6842:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "6842:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6842:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6827:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "6827:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 929,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "6890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6907:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6899:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6899:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6911:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "6881:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "6876:42:4"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6598:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "6615:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6597:33:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6640:0:4"
									},
									"scope": 1009,
									"src": "6583:342:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "7425:257:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 947,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "7443:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7460:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7452:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7452:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7443:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7464:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "7435:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7435:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "7435:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 956,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "7521:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7540:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7532:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7521:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7544:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "7513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7513:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "7513:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 964,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "7592:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 967,
															"indexExpression": {
																"argumentTypes": null,
																"id": 965,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "7604:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7592:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 968,
														"indexExpression": {
															"argumentTypes": null,
															"id": 966,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "7611:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7592:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 969,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "7622:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7592:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "7592:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "7652:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 974,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "7659:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 975,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7668:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "7643:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7643:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "7638:37:4"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "7368:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "7383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7383:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "7400:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7367:48:4"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7425:0:4"
									},
									"scope": 1009,
									"src": "7350:332:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "7921:168:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 987,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "7937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "7946:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "7931:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7931:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "7931:22:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 992,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "7972:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 993,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7981:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7981:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1002,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "8034:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8042:38:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	},
																	"value": "ERC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 995,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "7995:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 997,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 996,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "8007:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7995:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1000,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 998,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "8016:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8016:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7995:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 369,
																"src": "7995:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7995:86:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 991,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "7963:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7963:119:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "7963:119:4"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See {_burn} and {_approve}.",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7879:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "7896:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7878:33:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7921:0:4"
									},
									"scope": 1009,
									"src": "7860:229:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1010,
							"src": "1268:6823:4"
						}
					],
					"src": "0:8092:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1078
						]
					},
					"id": 1079,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1011,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:5"
									},
									"scope": 1078,
									"src": "270:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "427:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:5"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "467:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:5"
									},
									"scope": 1078,
									"src": "408:68:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "714:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "733:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:5"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "767:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:5"
									},
									"scope": 1078,
									"src": "696:77:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1067:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1082:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:5"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1122:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:5"
									},
									"scope": 1078,
									"src": "1048:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1801:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1818:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:5"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1852:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:5"
									},
									"scope": 1078,
									"src": "1784:74:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2187:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2203:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2222:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:5"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2256:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:5"
									},
									"scope": 1078,
									"src": "2165:97:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 1069,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "2446:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "2468:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "2488:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:5"
									},
									"src": "2431:72:5"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 1077,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2677:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2700:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2725:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:5"
									},
									"src": "2662:78:5"
								}
							],
							"scope": 1079,
							"src": "176:2566:5"
						}
					],
					"src": "0:2743:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1298
						]
					},
					"id": 1299,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1081,
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 1079,
							"src": "25:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1082,
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 487,
							"src": "48:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1083,
							"nodeType": "ImportDirective",
							"scope": 1299,
							"sourceUnit": 1374,
							"src": "82:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1086,
									"libraryName": {
										"contractScope": null,
										"id": 1084,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 486,
										"src": "604:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$486",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:6",
									"typeName": {
										"id": 1085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1089,
									"libraryName": {
										"contractScope": null,
										"id": 1087,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1373,
										"src": "636:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1373",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:6",
									"typeName": {
										"id": 1088,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "734:102:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1099,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1102,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "793:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1032,
																		"src": "793:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "818:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "822:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1100,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "770:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1098,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "744:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "744:85:6"
											}
										]
									},
									"documentation": null,
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "684:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1090,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "684:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "698:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "710:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:6"
									},
									"scope": 1298,
									"src": "662:174:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "932:112:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1123,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "961:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1126,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "991:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1061,
																		"src": "991:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1129,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "1020:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "1030:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1124,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "968:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1122,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "942:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "942:95:6"
											}
										]
									},
									"documentation": null,
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1112,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "868:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "882:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "896:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "908:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:6"
									},
									"scope": 1298,
									"src": "842:202:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "1126:536:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "1415:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1153,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2328,
																							"src": "1455:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1298",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1298",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 1154,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1155,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "1462:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1150,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "1431:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1078",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1041,
																				"src": "1431:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "1406:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1165,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1585:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1168,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "1615:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "1615:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1171,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "1639:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "1592:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1164,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "1566:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:6"
											}
										]
									},
									"documentation": null,
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1071:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1137,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "1071:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1085:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1102:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:6"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:6"
									},
									"scope": 1298,
									"src": "1050:612:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "1754:196:6",
										"statements": [
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "1764:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1196,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1831:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1191,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2328,
																			"src": "1811:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1298",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1298",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "1818:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1188,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "1787:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1041,
																"src": "1787:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "1787:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1866:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1203,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "1896:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "1896:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1206,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "1920:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "1929:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "1873:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1199,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "1847:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:6"
											}
										]
									},
									"documentation": null,
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1699:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1178,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "1699:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1713:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "1730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:6"
									},
									"scope": 1298,
									"src": "1668:282:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "2042:241:6",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "2052:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1231,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1226,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2328,
																			"src": "2099:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1298",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1298",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1228,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "2106:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1223,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "2075:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1041,
																"src": "2075:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "2075:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:95:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:118:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1236,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2199:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1239,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "2229:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "2229:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2229:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1242,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "2253:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1243,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "2262:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1237,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "2206:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1235,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "2180:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:96:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "2180:96:6"
											}
										]
									},
									"documentation": null,
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1987:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1213,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "1987:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2001:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2018:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:6"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:6"
									},
									"scope": 1298,
									"src": "1956:327:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "2735:1026:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1257,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1250,
																			"src": "3269:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1078",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3261:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1325,
																"src": "3261:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3261:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3290:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "3253:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:71:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "3253:71:6"
											},
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "3395:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3395:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "3409:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3409:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "3456:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1269,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "3444:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1078",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3436:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3436:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1276,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3479:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3488:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "3471:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "3471:52:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3538:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3538:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3558:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3538:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1295,
												"nodeType": "IfStatement",
												"src": "3534:221:6",
												"trueBody": {
													"id": 1294,
													"nodeType": "Block",
													"src": "3561:194:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1287,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "3678:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1288,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3691:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 1289,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3690:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1285,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "3667:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3667:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3667:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3699:44:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1284,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2311,
																		2312
																	],
																	"referencedDeclaration": 2312,
																	"src": "3659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3659:85:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1293,
															"nodeType": "ExpressionStatement",
															"src": "3659:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2694:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1078",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1249,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1078,
													"src": "2694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1078",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2708:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:33:6"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:6"
									},
									"scope": 1298,
									"src": "2666:1095:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 1299,
							"src": "574:3189:6"
						}
					],
					"src": "0:3764:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1373
						]
					},
					"id": 1374,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1300,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "752:544:7",
										"statements": [
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "1004:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1307,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:16:7"
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "1030:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1310,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1052:66:7",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:88:7"
											},
											{
												"externalReferences": [
													{
														"codehash": {
															"declaration": 1308,
															"isOffset": false,
															"isSlot": false,
															"src": "1195:8:7",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 1302,
															"isOffset": false,
															"isSlot": false,
															"src": "1219:7:7",
															"valueSize": 1
														}
													}
												],
												"id": 1314,
												"nodeType": "InlineAssembly",
												"operations": "{\n    codehash := extcodehash(account)\n}",
												"src": "1184:60:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1315,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1246:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1316,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "1258:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1246:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1318,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1273:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:3:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1273:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1246:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1322,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1245:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1323,
												"nodeType": "Return",
												"src": "1238:51:7"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following \ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "706:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:7"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "746:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:7"
									},
									"scope": 1373,
									"src": "686:610:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "1581:49:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1334,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "1614:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1606:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": "uint160"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1606:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1598:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1331,
												"id": 1337,
												"nodeType": "Return",
												"src": "1591:32:7"
											}
										]
									},
									"documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toPayable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1524:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1523:17:7"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1564:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:17:7"
									},
									"scope": 1373,
									"src": "1505:125:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "2658:294:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1348,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "2684:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1373",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1373",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2676:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2676:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2676:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1351,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "2701:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:31:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "2668:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2668:73:7"
											},
											{
												"assignments": [
													1357,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "2807:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1356,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2807:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1365,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:2:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1361,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "2846:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1358,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "2825:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2825:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2825:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2825:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2806:51:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1367,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "2875:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:60:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2311,
															2312
														],
														"referencedDeclaration": 2312,
														"src": "2867:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:78:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "2867:78:7"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2606:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2633:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:43:7"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:7"
									},
									"scope": 1373,
									"src": "2587:365:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1374,
							"src": "93:2861:7"
						}
					],
					"src": "0:2955:7"
				},
				"id": 7
			},
			"https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol": {
				"ast": {
					"absolutePath": "https://github.com/Robsonsjre/FlashloanUsecases/blob/master/contracts/interfaces/IUniswap.sol",
					"exportedSymbols": {
						"IUniswapExchange": [
							1755
						],
						"IUniswapFactory": [
							1413
						]
					},
					"id": 1756,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1375,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "IUniswapFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1377,
									"name": "exchangeTemplate",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "77:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1376,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "77:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1379,
									"name": "tokenCount",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "112:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "112:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createExchange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:15:8"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"name": "exchange",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "223:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "222:18:8"
									},
									"scope": 1413,
									"src": "166:75:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExchange",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "299:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "298:15:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"name": "exchange",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "337:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "336:18:8"
									},
									"scope": 1413,
									"src": "278:77:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"name": "exchange",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "377:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "376:18:8"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "418:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:15:8"
									},
									"scope": 1413,
									"src": "359:74:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenWithId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "461:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "460:17:8"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "501:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:15:8"
									},
									"scope": 1413,
									"src": "437:79:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeFactory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"name": "template",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "562:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:18:8"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:8"
									},
									"scope": 1413,
									"src": "535:54:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1756,
							"src": "26:565:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1755,
							"linearizedBaseContracts": [
								1755
							],
							"name": "IUniswapExchange",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:8"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "721:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "720:15:8"
									},
									"scope": 1755,
									"src": "674:62:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "821:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "820:17:8"
									},
									"scope": 1755,
									"src": "772:66:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"name": "min_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "892:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"name": "max_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "919:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "943:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:77:8"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "990:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "989:9:8"
									},
									"scope": 1755,
									"src": "865:134:8",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1033:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"name": "min_eth",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1053:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"name": "min_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1074:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1098:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:91:8"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1137:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1146:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1136:18:8"
									},
									"scope": 1755,
									"src": "1003:152:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEthToTokenInputPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"name": "eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1208:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1207:18:8"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1249:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1248:23:8"
									},
									"scope": 1755,
									"src": "1175:97:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEthToTokenOutputPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1310:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:23:8"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"name": "eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1356:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1355:18:8"
									},
									"scope": 1755,
									"src": "1276:98:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenToEthInputPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1411:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1410:21:8"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1455:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1454:20:8"
									},
									"scope": 1755,
									"src": "1378:97:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenToEthOutputPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1513:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:20:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1556:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1555:21:8"
									},
									"scope": 1755,
									"src": "1479:98:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwapInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"name": "min_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1634:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1654:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1633:38:8"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1698:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1697:23:8"
									},
									"scope": 1755,
									"src": "1605:116:8",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenTransferInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"name": "min_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1763:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1787:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1809:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1757:73:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1857:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1856:23:8"
									},
									"scope": 1755,
									"src": "1725:155:8",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwapOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1914:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1937:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1913:41:8"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"name": "eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1981:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1980:18:8"
									},
									"scope": 1755,
									"src": "1884:115:8",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenTransferOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2042:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2069:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2091:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2036:76:8"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"name": "eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "2139:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2138:18:8"
									},
									"scope": 1755,
									"src": "2003:154:8",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwapInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2219:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"name": "min_eth",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2244:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2265:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2213:72:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2304:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2304:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2303:20:8"
									},
									"scope": 1755,
									"src": "2185:139:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthTransferInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2366:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"name": "min_eth",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2391:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2412:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2434:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2360:95:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2474:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2473:20:8"
									},
									"scope": 1755,
									"src": "2328:166:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwapOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2533:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"name": "max_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2557:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2581:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2527:74:8"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2620:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2619:21:8"
									},
									"scope": 1755,
									"src": "2498:143:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthTransferOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"name": "eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2684:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"name": "max_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2708:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2732:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2754:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2678:97:8"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "2794:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2793:21:8"
									},
									"scope": 1755,
									"src": "2645:170:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToTokenSwapInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2881:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"name": "min_tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2906:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"name": "min_eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2937:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2937:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2965:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"name": "token_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2987:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2875:134:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "3028:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3027:23:8"
									},
									"scope": 1755,
									"src": "2845:206:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToTokenTransferInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3095:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"name": "min_tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3120:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"name": "min_eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3151:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3179:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3179:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3201:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"name": "token_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3224:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3089:157:8"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3264:23:8"
									},
									"scope": 1755,
									"src": "3055:233:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToTokenSwapOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3329:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"name": "max_tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3356:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"name": "max_eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3385:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3411:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"name": "token_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3433:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3323:132:8"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3474:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3473:21:8"
									},
									"scope": 1755,
									"src": "3292:203:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToTokenTransferOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3540:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"name": "max_tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3567:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"name": "max_eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3596:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3622:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3644:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"name": "token_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3667:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3534:155:8"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3708:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3707:21:8"
									},
									"scope": 1755,
									"src": "3499:230:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToExchangeSwapInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3804:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"name": "min_tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3829:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"name": "min_eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3860:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3888:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"name": "exchange_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3910:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3910:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:137:8"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "3954:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3953:23:8"
									},
									"scope": 1755,
									"src": "3765:212:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToExchangeTransferInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4024:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"name": "min_tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4049:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"name": "min_eth_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4080:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4108:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4130:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"name": "exchange_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4153:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4018:160:8"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "4197:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4196:23:8"
									},
									"scope": 1755,
									"src": "3981:239:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToExchangeSwapOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4264:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"name": "max_tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4291:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4291:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"name": "max_eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4320:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4346:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"name": "exchange_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4368:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4368:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4258:135:8"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "4412:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4411:21:8"
									},
									"scope": 1755,
									"src": "4224:209:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToExchangeTransferOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"name": "tokens_bought",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4481:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"name": "max_tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4508:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"name": "max_eth_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4537:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4563:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4563:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4585:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4585:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"name": "exchange_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4608:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4608:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4475:158:8"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"name": "tokens_sold",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4652:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4651:21:8"
									},
									"scope": 1755,
									"src": "4437:236:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 1695,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "4723:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1694,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4723:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1697,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "4746:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1696,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4746:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1699,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "4771:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1698,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4771:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "4817:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "4830:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4816:29:8"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "4864:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4864:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4863:6:8"
									},
									"scope": 1755,
									"src": "4799:71:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4901:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4920:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4937:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4895:59:8"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "4973:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4973:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4972:6:8"
									},
									"scope": 1755,
									"src": "4874:105:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5000:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5018:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4999:34:8"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "5052:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5052:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5051:6:8"
									},
									"scope": 1755,
									"src": "4983:75:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5081:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5097:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5080:34:8"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "5138:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5137:9:8"
									},
									"scope": 1755,
									"src": "5062:85:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "5170:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5169:16:8"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "5209:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5208:9:8"
									},
									"scope": 1755,
									"src": "5151:67:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5242:2:8"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5268:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5267:9:8"
									},
									"scope": 1755,
									"src": "5222:55:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setup",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"name": "token_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5311:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5311:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5310:20:8"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5339:0:8"
									},
									"scope": 1755,
									"src": "5296:44:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1756,
							"src": "594:4748:8"
						}
					],
					"src": "0:5343:8"
				},
				"id": 8
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol",
					"exportedSymbols": {
						"EthAddressLib": [
							1766
						]
					},
					"id": 1767,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1757,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1766,
							"linearizedBaseContracts": [
								1766
							],
							"name": "EthAddressLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "339:181:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "356:42:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
												},
												"functionReturnParameters": 1761,
												"id": 1763,
												"nodeType": "Return",
												"src": "349:49:9"
											}
										]
									},
									"documentation": "@dev returns the address used within the protocol to identify ETH\n@return the address assigned to ETH",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ethAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:9"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "330:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:9:9"
									},
									"scope": 1766,
									"src": "286:234:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1767,
							"src": "127:395:9"
						}
					],
					"src": "102:420:9"
				},
				"id": 9
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/FlashLoanReceiverBase.sol",
					"exportedSymbols": {
						"FlashLoanReceiverBase": [
							1887
						]
					},
					"id": 1888,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1768,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:10"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"id": 1769,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 487,
							"src": "140:112:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"id": 1770,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 1079,
							"src": "253:117:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 1771,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 1299,
							"src": "371:120:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol",
							"file": "./IFlashLoanReceiver.sol",
							"id": 1772,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 1902,
							"src": "492:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 1773,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 2207,
							"src": "527:45:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/EthAddressLib.sol",
							"file": "./EthAddressLib.sol",
							"id": 1774,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 1767,
							"src": "573:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol",
							"file": "../utils/Withdrawable.sol",
							"id": 1775,
							"nodeType": "ImportDirective",
							"scope": 1888,
							"sourceUnit": 2294,
							"src": "603:35:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1776,
										"name": "IFlashLoanReceiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1901,
										"src": "674:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlashLoanReceiver_$1901",
											"typeString": "contract IFlashLoanReceiver"
										}
									},
									"id": 1777,
									"nodeType": "InheritanceSpecifier",
									"src": "674:18:10"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1778,
										"name": "Withdrawable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2293,
										"src": "694:12:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Withdrawable_$2293",
											"typeString": "contract Withdrawable"
										}
									},
									"id": 1779,
									"nodeType": "InheritanceSpecifier",
									"src": "694:12:10"
								}
							],
							"contractDependencies": [
								1901,
								2293,
								299,
								604
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1887,
							"linearizedBaseContracts": [
								1887,
								2293,
								604,
								299,
								1901
							],
							"name": "FlashLoanReceiverBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1782,
									"libraryName": {
										"contractScope": null,
										"id": 1780,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1298,
										"src": "719:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1298",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "713:27:10",
									"typeName": {
										"contractScope": null,
										"id": 1781,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1078,
										"src": "733:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1078",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1785,
									"libraryName": {
										"contractScope": null,
										"id": 1783,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 486,
										"src": "751:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$486",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "745:27:10",
									"typeName": {
										"id": 1784,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "764:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1787,
									"name": "addressesProvider",
									"nodeType": "VariableDeclaration",
									"scope": 1887,
									"src": "778:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
										"typeString": "contract ILendingPoolAddressesProvider"
									},
									"typeName": {
										"contractScope": null,
										"id": 1786,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2206,
										"src": "778:29:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
											"typeString": "contract ILendingPoolAddressesProvider"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "884:84:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1792,
														"name": "addressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "894:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1794,
																"name": "_addressProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "944:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1793,
															"name": "ILendingPoolAddressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "914:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$2206_$",
																"typeString": "type(contract ILendingPoolAddressesProvider)"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "914:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"src": "894:67:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "894:67:10"
											}
										]
									},
									"documentation": null,
									"id": 1799,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"name": "_addressProvider",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "851:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:26:10"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:10"
									},
									"scope": 1887,
									"src": "839:129:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1002:3:10",
										"statements": []
									},
									"documentation": null,
									"id": 1803,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:2:10"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:10"
									},
									"scope": 1887,
									"src": "974:31:10",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "1096:129:10",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"name": "core",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "1106:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1810,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1106:15:10",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1815,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1812,
															"name": "addressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "1129:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$2206",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLendingPoolCore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2110,
														"src": "1129:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
															"typeString": "function () view external returns (address payable)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1106:61:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1817,
															"name": "core",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "1194:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1818,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "1200:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1819,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "1210:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"name": "transferInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "1177:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "1177:41:10"
											}
										]
									},
									"documentation": null,
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFundsBackToPoolInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1052:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "1070:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1051:35:10"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:0:10"
									},
									"scope": 1887,
									"src": "1011:214:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "1331:241:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1832,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "1344:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1833,
																"name": "EthAddressLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "1356:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_EthAddressLib_$1766_$",
																	"typeString": "type(library EthAddressLib)"
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ethAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1765,
															"src": "1356:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																"typeString": "function () pure returns (address)"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1356:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1344:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1849,
												"nodeType": "IfStatement",
												"src": "1341:163:10",
												"trueBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "1384:120:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1470:2:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1842,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1829,
																			"src": "1461:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1837,
																				"name": "_destination",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1825,
																				"src": "1437:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1437:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1437:23:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																			"typeString": "function (uint256) returns (function (bytes memory) payable returns (bool,bytes memory))"
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1437:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1437:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"id": 1846,
															"nodeType": "ExpressionStatement",
															"src": "1437:36:10"
														},
														{
															"expression": null,
															"functionReturnParameters": 1831,
															"id": 1847,
															"nodeType": "Return",
															"src": "1487:7:10"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1854,
															"name": "_destination",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "1543:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1855,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "1557:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1851,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "1520:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1850,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "1513:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1078_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1513:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "1513:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1078_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "1513:52:10"
											}
										]
									},
									"documentation": null,
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"name": "_destination",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1257:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1287:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1305:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1256:65:10"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:0:10"
									},
									"scope": 1887,
									"src": "1231:341:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "1672:158:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1868,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "1685:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"id": 1869,
																"name": "EthAddressLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "1697:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_EthAddressLib_$1766_$",
																	"typeString": "type(library EthAddressLib)"
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ethAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1765,
															"src": "1697:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																"typeString": "function () pure returns (address)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1697:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1685:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1877,
												"nodeType": "IfStatement",
												"src": "1682:90:10",
												"trueBody": {
													"id": 1876,
													"nodeType": "Block",
													"src": "1725:47:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1873,
																	"name": "_target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "1746:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1746:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1867,
															"id": 1875,
															"nodeType": "Return",
															"src": "1739:22:10"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1882,
															"name": "_target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "1815:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1879,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "1795:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1878,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "1788:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1078_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1788:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1078",
																"typeString": "contract IERC20"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1023,
														"src": "1788:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1867,
												"id": 1884,
												"nodeType": "Return",
												"src": "1781:42:10"
											}
										]
									},
									"documentation": null,
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceInternal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1606:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1623:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1605:35:10"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1663:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1662:9:10"
									},
									"scope": 1887,
									"src": "1578:252:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1888,
							"src": "640:1192:10"
						}
					],
					"src": "115:1718:10"
				},
				"id": 10
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/IFlashLoanReceiver.sol",
					"exportedSymbols": {
						"IFlashLoanReceiver": [
							1901
						]
					},
					"id": 1902,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1889,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:11"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@title IFlashLoanReceiver interface\n@notice Interface for the Aave fee IFlashLoanReceiver.\n@author Aave\n@dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract*",
							"fullyImplemented": false,
							"id": 1901,
							"linearizedBaseContracts": [
								1901
							],
							"name": "IFlashLoanReceiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "415:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "433:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "450:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "464:22:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:73:11"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:11"
									},
									"scope": 1901,
									"src": "389:108:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1902,
							"src": "354:145:11"
						}
					],
					"src": "118:381:11"
				},
				"id": 11
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPool.sol",
					"exportedSymbols": {
						"ILendingPool": [
							2093
						]
					},
					"id": 2094,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1903,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:12"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2093,
							"linearizedBaseContracts": [
								2093
							],
							"name": "ILendingPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addressesProvider",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:12"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "208:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:11:12"
									},
									"scope": 2093,
									"src": "154:64:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "240:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "258:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"name": "_referralCode",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "275:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1913,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "275:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "238:59:12"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:12"
									},
									"scope": 2093,
									"src": "221:94:12",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUnderlying",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "346:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "364:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "379:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "344:52:12"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:12"
									},
									"scope": 2093,
									"src": "318:88:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "427:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "445:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"name": "_interestRateMode",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "462:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"name": "_referralCode",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "489:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1933,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "489:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "425:86:12"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:12"
									},
									"scope": 2093,
									"src": "409:112:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "541:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "559:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"name": "_onBehalfOf",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "576:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "539:58:12"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:12"
									},
									"scope": 2093,
									"src": "524:91:12",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "648:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "646:20:12"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:12"
									},
									"scope": 2093,
									"src": "618:58:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceFixedBorrowRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "715:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "733:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:12"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:12"
									},
									"scope": 2093,
									"src": "679:79:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "802:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"name": "_useAsCollateral",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "820:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "820:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "800:43:12"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:0:12"
									},
									"scope": 2093,
									"src": "761:92:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"name": "_collateral",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "883:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "904:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "922:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"name": "_purchaseAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "937:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"name": "_receiveAToken",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "962:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "881:102:12"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:0:12"
									},
									"scope": 2093,
									"src": "856:145:12",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"name": "_receiver",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1025:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1044:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1062:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1079:22:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1079:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1023:80:12"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:0:12"
									},
									"scope": 2093,
									"src": "1004:109:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveConfigurationData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1155:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1153:20:12"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1198:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"name": "liquidationThreshold",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1211:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"name": "liquidationDiscount",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1241:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"name": "interestRateStrategyAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1270:35:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"name": "usageAsCollateralEnabled",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1307:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1307:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"name": "borrowingEnabled",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1338:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"name": "fixedBorrowRateEnabled",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1361:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1361:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"name": "isActive",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1390:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2007,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1390:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1196:209:12"
									},
									"scope": 2093,
									"src": "1116:290:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1435:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1433:20:12"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"name": "totalLiquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1478:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"name": "availableLiquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1502:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"name": "totalBorrowsFixed",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1530:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"name": "totalBorrowsVariable",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1557:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1587:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"name": "variableBorrowRate",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1610:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"name": "fixedBorrowRate",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1638:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"name": "averageFixedBorrowRate",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1663:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"name": "utilizationRate",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1695:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"name": "liquidityIndex",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1720:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1744:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"name": "aTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1773:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "1796:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2038,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "1796:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1476:348:12"
									},
									"scope": 2093,
									"src": "1409:416:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1858:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1856:17:12"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"name": "totalLiquidityETH",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1898:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"name": "totalCollateralETH",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1925:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"name": "totalBorrowsETH",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1953:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"name": "availableBorrowsETH",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1978:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"name": "currentLiquidationThreshold",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2007:35:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"name": "ltv",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2044:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"name": "healthFactor",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2057:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1896:183:12"
									},
									"scope": 2093,
									"src": "1828:252:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReserveData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2113:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2131:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2111:35:12"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"name": "currentATokenBalance",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2171:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"name": "currentUnderlyingBalance",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2201:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"name": "currentBorrowBalance",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2235:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"name": "principalBorrowBalance",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2265:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"name": "borrowRateMode",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2297:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"name": "borrowRate",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2321:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"name": "liquidityRate",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2341:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"name": "originationFee",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2364:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"name": "variableBorrowIndex",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2388:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"name": "lastUpdateTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2417:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"name": "usageAsCollateralEnabled",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "2446:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2446:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2169:308:12"
									},
									"scope": 2093,
									"src": "2083:395:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2502:2:12"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:12"
									},
									"scope": 2093,
									"src": "2481:38:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2094,
							"src": "127:2394:12"
						}
					],
					"src": "102:2419:12"
				},
				"id": 12
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/aave/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							2206
						]
					},
					"id": 2207,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2095,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:13"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ILendingPoolAddressesProvider interface\n@notice provides the interface to fetch the LendingPoolCore address",
							"fullyImplemented": false,
							"id": 2206,
							"linearizedBaseContracts": [
								2206
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 2100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:13"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "361:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "360:9:13"
									},
									"scope": 2206,
									"src": "314:56:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "403:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "402:15:13"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:0:13"
									},
									"scope": 2206,
									"src": "375:50:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:13"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "482:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "481:17:13"
									},
									"scope": 2206,
									"src": "431:68:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolCoreImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"name": "_lendingPoolCore",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "536:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "535:26:13"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:13"
									},
									"scope": 2206,
									"src": "504:65:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolConfigurator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:13"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "634:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "633:9:13"
									},
									"scope": 2206,
									"src": "575:68:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolConfiguratorImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"name": "_configurator",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "688:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "687:23:13"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:0:13"
									},
									"scope": 2206,
									"src": "648:70:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolDataProvider",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:13"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "783:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:9:13"
									},
									"scope": 2206,
									"src": "724:68:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolDataProviderImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"name": "_provider",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "837:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "836:19:13"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:13"
									},
									"scope": 2206,
									"src": "797:66:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolParametersProvider",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "910:2:13"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "934:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "933:9:13"
									},
									"scope": 2206,
									"src": "869:74:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolParametersProviderImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"name": "_parametersProvider",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "994:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "993:29:13"
									},
									"returnParameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:13"
									},
									"scope": 2206,
									"src": "948:82:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:13"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "1088:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1087:9:13"
									},
									"scope": 2206,
									"src": "1036:61:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenDistributor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"name": "_tokenDistributor",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1131:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:27:13"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:13"
									},
									"scope": 2206,
									"src": "1102:63:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeProvider",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:2:13"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "1218:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1217:9:13"
									},
									"scope": 2206,
									"src": "1171:56:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProviderImpl",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"name": "_feeProvider",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "1260:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1259:22:13"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:13"
									},
									"scope": 2206,
									"src": "1232:57:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolLiquidationManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:2:13"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1360:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1359:9:13"
									},
									"scope": 2206,
									"src": "1295:74:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolLiquidationManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"name": "_manager",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "1416:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1415:18:13"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:0:13"
									},
									"scope": 2206,
									"src": "1374:67:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:2:13"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "1501:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1500:9:13"
									},
									"scope": 2206,
									"src": "1447:63:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingPoolManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"name": "_lendingPoolManager",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1546:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1545:29:13"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:13"
									},
									"scope": 2206,
									"src": "1515:67:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:2:13"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "1635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1634:9:13"
									},
									"scope": 2206,
									"src": "1588:56:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"name": "_priceOracle",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1673:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1672:22:13"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1701:0:13"
									},
									"scope": 2206,
									"src": "1649:53:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:13"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1761:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:9:13"
									},
									"scope": 2206,
									"src": "1708:62:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLendingRateOracle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"name": "_lendingRateOracle",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1805:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:28:13"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:0:13"
									},
									"scope": 2206,
									"src": "1775:65:13",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 2207,
							"src": "268:1575:13"
						}
					],
					"src": "119:1724:13"
				},
				"id": 13
			},
			"https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol": {
				"ast": {
					"absolutePath": "https://github.com/mrdavey/ez-flashloan/blob/remix/contracts/utils/Withdrawable.sol",
					"exportedSymbols": {
						"Withdrawable": [
							2293
						]
					},
					"id": 2294,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2208,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:14"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20.sol",
							"id": 2209,
							"nodeType": "ImportDirective",
							"scope": 2294,
							"sourceUnit": 1010,
							"src": "27:116:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 2210,
							"nodeType": "ImportDirective",
							"scope": 2294,
							"sourceUnit": 1299,
							"src": "144:120:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
							"id": 2211,
							"nodeType": "ImportDirective",
							"scope": 2294,
							"sourceUnit": 605,
							"src": "265:116:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2212,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 604,
										"src": "408:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$604",
											"typeString": "contract Ownable"
										}
									},
									"id": 2213,
									"nodeType": "InheritanceSpecifier",
									"src": "408:7:14"
								}
							],
							"contractDependencies": [
								299,
								604
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2293,
							"linearizedBaseContracts": [
								2293,
								604,
								299
							],
							"name": "Withdrawable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2216,
									"libraryName": {
										"contractScope": null,
										"id": 2214,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1298,
										"src": "428:9:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1298",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "422:26:14",
									"typeName": {
										"contractScope": null,
										"id": 2215,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1009,
										"src": "442:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1009",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 2221,
									"name": "ETHER",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "453:35:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2217,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "453:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 2219,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "486:1:14",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 2218,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "478:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": "address"
										},
										"id": 2220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "478:10:14",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2229,
									"name": "LogWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "522:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"indexed": true,
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "553:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "592:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "512:97:14"
									},
									"src": "495:115:14"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "769:485:14",
										"statements": [
											{
												"assignments": [
													2237
												],
												"declarations": [
													{
														"constant": false,
														"id": 2237,
														"name": "assetBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "779:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2236,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "779:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2238,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "779:17:14"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2239,
														"name": "_assetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "810:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2240,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "827:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "810:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2282,
													"nodeType": "Block",
													"src": "1023:158:14",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2262,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "1037:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2268,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "1091:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Withdrawable_$2293",
																						"typeString": "contract Withdrawable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Withdrawable_$2293",
																						"typeString": "contract Withdrawable"
																					}
																				],
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1083:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1083:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2264,
																					"name": "_assetAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "1058:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2263,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1009,
																				"src": "1052:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1052:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$1009",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 2266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 648,
																		"src": "1052:30:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1052:45:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1037:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2272,
															"nodeType": "ExpressionStatement",
															"src": "1037:60:14"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2277,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "1145:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1145:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2279,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2237,
																		"src": "1157:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2274,
																				"name": "_assetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2231,
																				"src": "1117:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2273,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "1111:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$1009_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1111:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1009",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1111,
																	"src": "1111:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1078_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1078_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1111:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2281,
															"nodeType": "ExpressionStatement",
															"src": "1111:59:14"
														}
													]
												},
												"id": 2283,
												"nodeType": "IfStatement",
												"src": "806:375:14",
												"trueBody": {
													"id": 2261,
													"nodeType": "Block",
													"src": "834:183:14",
													"statements": [
														{
															"assignments": [
																2243
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2243,
																	"name": "self",
																	"nodeType": "VariableDeclaration",
																	"scope": 2261,
																	"src": "848:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2242,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "848:7:14",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2247,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2245,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "871:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Withdrawable_$2293",
																			"typeString": "contract Withdrawable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Withdrawable_$2293",
																			"typeString": "contract Withdrawable"
																		}
																	],
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "863:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "863:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "848:28:14"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2248,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "932:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2249,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "947:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "947:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:27:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2252,
															"nodeType": "ExpressionStatement",
															"src": "932:27:14"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2258,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2237,
																		"src": "993:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2253,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "973:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "973:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "973:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "973:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2260,
															"nodeType": "ExpressionStatement",
															"src": "973:33:14"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2285,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "1207:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1207:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2287,
															"name": "_assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "1219:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2288,
															"name": "assetBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "1234:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2284,
														"name": "LogWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "1195:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "EmitStatement",
												"src": "1190:57:14"
											}
										]
									},
									"documentation": "@dev Withdraw asset.\n@param _assetAddress Asset to be withdrawn.",
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2234,
											"modifierName": {
												"argumentTypes": null,
												"id": 2233,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 537,
												"src": "759:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "759:9:14"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "729:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:23:14"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "769:0:14"
									},
									"scope": 2293,
									"src": "711:543:14",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 2294,
							"src": "383:874:14"
						}
					],
					"src": "0:1258:14"
				},
				"id": 14
			}
		}
	}
}